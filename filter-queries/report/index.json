{
  "stats": {
    "suites": 1,
    "tests": 8,
    "passes": 8,
    "pending": 0,
    "failures": 0,
    "start": "2023-05-25T15:55:42.769Z",
    "end": "2023-05-25T15:55:43.919Z",
    "duration": 1150,
    "testsRegistered": 71,
    "passPercent": 11.267605633802818,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 63,
    "hasSkipped": true
  },
  "results": [
    {
      "uuid": "5da69ab0-b2ff-4462-b5f8-e65b074254d4",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [
        {
          "title": "Setup in \"{root}\"",
          "fullTitle": "Setup in \"{root}\"",
          "timedOut": false,
          "duration": 1,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": "[\n  {\n    \"title\": \"fetch all CulturePnt features\",\n    \"value\": {\n      \"req\": {\n        \"method\": \"GET\",\n        \"url\": \"https://demo.ldproxy.net/daraa/collections/CulturePnt/items?limit=250\",\n        \"headers\": {\n          \"accept\": \"application/geo+json, application/problem+json;q=0.8\"\n        }\n      },\n      \"header\": {\n        \"content-crs\": \"<http://www.opengis.net/def/crs/OGC/1.3/CRS84>\",\n        \"content-disposition\": \"inline; filename=\\\"CulturePnt.json\\\"\",\n        \"content-encoding\": \"gzip\",\n        \"content-language\": \"en\",\n        \"content-length\": \"1045\",\n        \"content-type\": \"application/geo+json\",\n        \"date\": \"Thu, 25 May 2023 15:55:41 GMT\",\n        \"link\": \"<https://demo.ldproxy.net/daraa/collections/CulturePnt/items?limit=250&f=csv>; rel=\\\"alternate\\\"; title=\\\"This document as CSV\\\"; type=\\\"text/csv\\\", <https://demo.ldproxy.net/daraa/collections/CulturePnt/items?limit=250&f=fgb>; rel=\\\"alternate\\\"; title=\\\"This document as FlatGeobuf\\\"; type=\\\"application/flatgeobuf\\\", <https://demo.ldproxy.net/daraa/collections/CulturePnt/items?limit=250&f=html>; rel=\\\"alternate\\\"; title=\\\"This document as HTML\\\"; type=\\\"text/html\\\", <https://demo.ldproxy.net/daraa/collections/CulturePnt/items?limit=250&f=jsonfg>; rel=\\\"alternate\\\"; title=\\\"This document as JSON-FG\\\"; type=\\\"application/vnd.ogc.fg+json\\\", <https://demo.ldproxy.net/daraa/collections/CulturePnt/items?limit=250&f=jsonfgc>; rel=\\\"alternate\\\"; title=\\\"This document as JSON-FG (GeoJSON Compatibility Mode)\\\"; type=\\\"application/vnd.ogc.fg+json;compatibility=geojson\\\", <http://www.opengis.net/def/profile/ogc/0/rel-as-link>; rel=\\\"profile\\\"; title=\\\"Profile used in the response\\\", <https://demo.ldproxy.net/daraa/collections/CulturePnt/items?limit=250&f=json>; rel=\\\"self\\\"; title=\\\"This document\\\"; type=\\\"application/geo+json\\\"\",\n        \"vary\": \"Accept,Accept-Language,Accept-Encoding\",\n        \"x-request-id\": \"70c7e33d-e530-4b9f-bf03-d5f9fa9257ce\",\n        \"connection\": \"close\"\n      },\n      \"status\": 200,\n      \"text\": \"{\\\"type\\\":\\\"FeatureCollection\\\",\\\"numberReturned\\\":5,\\\"numberMatched\\\":5,\\\"timeStamp\\\":\\\"2023-05-25T15:55:41Z\\\",\\\"features\\\":[{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":1,\\\"geometry\\\":{\\\"type\\\":\\\"MultiPoint\\\",\\\"coordinates\\\":[[36.0964930,32.6020820]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"AL030\\\",\\\"ZI001_SDV\\\":\\\"2011-12-27T18:39:59Z\\\",\\\"UFI\\\":\\\"7ab54c93-b054-406f-9cf1-6921fd633277\\\",\\\"ZI005_FNA\\\":\\\"مقبرة البحارة\\\",\\\"FCSUBTYPE\\\":100092,\\\"ZI037_REL\\\":11,\\\"ZI006_MEM\\\":\\\"<OSM>{\\\\\\\"name:ar\\\\\\\":\\\\\\\"مقبرة البحارة\\\\\\\",\\\\\\\"name:en\\\\\\\":\\\\\\\"Al Bahara Cemetery\\\\\\\"}</OSM>\\\"}},{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":2,\\\"geometry\\\":{\\\"type\\\":\\\"MultiPoint\\\",\\\"coordinates\\\":[[36.1009200,32.6121330]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"AL130\\\",\\\"ZI001_SDV\\\":\\\"2011-12-26T20:55:27Z\\\",\\\"UFI\\\":\\\"65854536-9ffa-433e-b0c7-5779ae88d705\\\",\\\"ZI005_FNA\\\":\\\"ساحة الكرامة\\\",\\\"FCSUBTYPE\\\":100108,\\\"ZI006_MEM\\\":\\\"<OSM>{\\\\\\\"name:ar\\\\\\\":\\\\\\\"ساحة الكرامة\\\\\\\",\\\\\\\"name:en\\\\\\\":\\\\\\\"Sahet al karama\\\\\\\"}</OSM>\\\"}},{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":3,\\\"geometry\\\":{\\\"type\\\":\\\"MultiPoint\\\",\\\"coordinates\\\":[[36.1085460,32.6405080]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"BH075\\\",\\\"ZI001_SDV\\\":\\\"2013-06-16T23:47:41Z\\\",\\\"UFI\\\":\\\"f4dbf4b1-9522-4dcb-a15b-a2b1359f6ee0\\\",\\\"ZI005_FNA\\\":\\\"نافورة البانوراما\\\",\\\"FCSUBTYPE\\\":100303}},{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":4,\\\"geometry\\\":{\\\"type\\\":\\\"MultiPoint\\\",\\\"coordinates\\\":[[36.0992670,32.6125650]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"AK121\\\",\\\"ZI001_SDV\\\":\\\"2011-01-03T06:31:15Z\\\",\\\"UFI\\\":\\\"a68ec353-e572-4523-9425-8f37b4a4cda6\\\",\\\"ZI005_FNA\\\":\\\"مدرج درعا الأثري\\\",\\\"FCSUBTYPE\\\":100066}},{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":5,\\\"geometry\\\":{\\\"type\\\":\\\"MultiPoint\\\",\\\"coordinates\\\":[[35.9535000,32.5920730]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"AL012\\\",\\\"ZI001_SDV\\\":\\\"2012-03-27T11:53:13Z\\\",\\\"UFI\\\":\\\"122207e5-5b0a-4da0-9672-0c1012952a54\\\",\\\"ZI005_FNA\\\":\\\"Roman Graves\\\",\\\"FCSUBTYPE\\\":100082}}],\\\"links\\\":[{\\\"href\\\":\\\"https://demo.ldproxy.net/daraa/collections/CulturePnt/items?limit=250&f=json\\\",\\\"rel\\\":\\\"self\\\",\\\"type\\\":\\\"application/geo+json\\\",\\\"title\\\":\\\"This document\\\"},{\\\"href\\\":\\\"https://demo.ldproxy.net/daraa/collections/CulturePnt/items?limit=250&f=jsonfgc\\\",\\\"rel\\\":\\\"alternate\\\",\\\"type\\\":\\\"application/vnd.ogc.fg+json;compatibility=geojson\\\",\\\"title\\\":\\\"This document as JSON-FG (GeoJSON Compatibility Mode)\\\"},{\\\"href\\\":\\\"https://demo.ldproxy.net/daraa/collections/CulturePnt/items?limit=250&f=csv\\\",\\\"rel\\\":\\\"alternate\\\",\\\"type\\\":\\\"text/csv\\\",\\\"title\\\":\\\"This document as CSV\\\"},{\\\"href\\\":\\\"https://demo.ldproxy.net/daraa/collections/CulturePnt/items?limit=250&f=fgb\\\",\\\"rel\\\":\\\"alternate\\\",\\\"type\\\":\\\"application/flatgeobuf\\\",\\\"title\\\":\\\"This document as FlatGeobuf\\\"},{\\\"href\\\":\\\"https://demo.ldproxy.net/daraa/collections/CulturePnt/items?limit=250&f=html\\\",\\\"rel\\\":\\\"alternate\\\",\\\"type\\\":\\\"text/html\\\",\\\"title\\\":\\\"This document as HTML\\\"},{\\\"href\\\":\\\"https://demo.ldproxy.net/daraa/collections/CulturePnt/items?limit=250&f=jsonfg\\\",\\\"rel\\\":\\\"alternate\\\",\\\"type\\\":\\\"application/vnd.ogc.fg+json\\\",\\\"title\\\":\\\"This document as JSON-FG\\\"},{\\\"href\\\":\\\"http://www.opengis.net/def/profile/ogc/0/rel-as-link\\\",\\\"rel\\\":\\\"profile\\\",\\\"title\\\":\\\"Profile used in the response\\\"}]}\"\n    }\n  },\n  {\n    \"title\": \"fetch all CulturePnt features\",\n    \"value\": {\n      \"req\": {\n        \"method\": \"GET\",\n        \"url\": \"https://demo.ldproxy.net/daraa/collections/CulturePnt/items?limit=250\",\n        \"headers\": {\n          \"accept\": \"application/geo+json, application/problem+json;q=0.8\"\n        }\n      },\n      \"header\": {\n        \"content-crs\": \"<http://www.opengis.net/def/crs/OGC/1.3/CRS84>\",\n        \"content-disposition\": \"inline; filename=\\\"CulturePnt.json\\\"\",\n        \"content-encoding\": \"gzip\",\n        \"content-language\": \"en\",\n        \"content-length\": \"1045\",\n        \"content-type\": \"application/geo+json\",\n        \"date\": \"Thu, 25 May 2023 15:55:41 GMT\",\n        \"link\": \"<https://demo.ldproxy.net/daraa/collections/CulturePnt/items?limit=250&f=csv>; rel=\\\"alternate\\\"; title=\\\"This document as CSV\\\"; type=\\\"text/csv\\\", <https://demo.ldproxy.net/daraa/collections/CulturePnt/items?limit=250&f=fgb>; rel=\\\"alternate\\\"; title=\\\"This document as FlatGeobuf\\\"; type=\\\"application/flatgeobuf\\\", <https://demo.ldproxy.net/daraa/collections/CulturePnt/items?limit=250&f=html>; rel=\\\"alternate\\\"; title=\\\"This document as HTML\\\"; type=\\\"text/html\\\", <https://demo.ldproxy.net/daraa/collections/CulturePnt/items?limit=250&f=jsonfg>; rel=\\\"alternate\\\"; title=\\\"This document as JSON-FG\\\"; type=\\\"application/vnd.ogc.fg+json\\\", <https://demo.ldproxy.net/daraa/collections/CulturePnt/items?limit=250&f=jsonfgc>; rel=\\\"alternate\\\"; title=\\\"This document as JSON-FG (GeoJSON Compatibility Mode)\\\"; type=\\\"application/vnd.ogc.fg+json;compatibility=geojson\\\", <http://www.opengis.net/def/profile/ogc/0/rel-as-link>; rel=\\\"profile\\\"; title=\\\"Profile used in the response\\\", <https://demo.ldproxy.net/daraa/collections/CulturePnt/items?limit=250&f=json>; rel=\\\"self\\\"; title=\\\"This document\\\"; type=\\\"application/geo+json\\\"\",\n        \"vary\": \"Accept,Accept-Language,Accept-Encoding\",\n        \"x-request-id\": \"64df2a48-c1e7-41c2-8126-961c832cbefb\",\n        \"connection\": \"close\"\n      },\n      \"status\": 200,\n      \"text\": \"{\\\"type\\\":\\\"FeatureCollection\\\",\\\"numberReturned\\\":5,\\\"numberMatched\\\":5,\\\"timeStamp\\\":\\\"2023-05-25T15:55:41Z\\\",\\\"features\\\":[{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":1,\\\"geometry\\\":{\\\"type\\\":\\\"MultiPoint\\\",\\\"coordinates\\\":[[36.0964930,32.6020820]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"AL030\\\",\\\"ZI001_SDV\\\":\\\"2011-12-27T18:39:59Z\\\",\\\"UFI\\\":\\\"7ab54c93-b054-406f-9cf1-6921fd633277\\\",\\\"ZI005_FNA\\\":\\\"مقبرة البحارة\\\",\\\"FCSUBTYPE\\\":100092,\\\"ZI037_REL\\\":11,\\\"ZI006_MEM\\\":\\\"<OSM>{\\\\\\\"name:ar\\\\\\\":\\\\\\\"مقبرة البحارة\\\\\\\",\\\\\\\"name:en\\\\\\\":\\\\\\\"Al Bahara Cemetery\\\\\\\"}</OSM>\\\"}},{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":2,\\\"geometry\\\":{\\\"type\\\":\\\"MultiPoint\\\",\\\"coordinates\\\":[[36.1009200,32.6121330]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"AL130\\\",\\\"ZI001_SDV\\\":\\\"2011-12-26T20:55:27Z\\\",\\\"UFI\\\":\\\"65854536-9ffa-433e-b0c7-5779ae88d705\\\",\\\"ZI005_FNA\\\":\\\"ساحة الكرامة\\\",\\\"FCSUBTYPE\\\":100108,\\\"ZI006_MEM\\\":\\\"<OSM>{\\\\\\\"name:ar\\\\\\\":\\\\\\\"ساحة الكرامة\\\\\\\",\\\\\\\"name:en\\\\\\\":\\\\\\\"Sahet al karama\\\\\\\"}</OSM>\\\"}},{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":3,\\\"geometry\\\":{\\\"type\\\":\\\"MultiPoint\\\",\\\"coordinates\\\":[[36.1085460,32.6405080]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"BH075\\\",\\\"ZI001_SDV\\\":\\\"2013-06-16T23:47:41Z\\\",\\\"UFI\\\":\\\"f4dbf4b1-9522-4dcb-a15b-a2b1359f6ee0\\\",\\\"ZI005_FNA\\\":\\\"نافورة البانوراما\\\",\\\"FCSUBTYPE\\\":100303}},{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":4,\\\"geometry\\\":{\\\"type\\\":\\\"MultiPoint\\\",\\\"coordinates\\\":[[36.0992670,32.6125650]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"AK121\\\",\\\"ZI001_SDV\\\":\\\"2011-01-03T06:31:15Z\\\",\\\"UFI\\\":\\\"a68ec353-e572-4523-9425-8f37b4a4cda6\\\",\\\"ZI005_FNA\\\":\\\"مدرج درعا الأثري\\\",\\\"FCSUBTYPE\\\":100066}},{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":5,\\\"geometry\\\":{\\\"type\\\":\\\"MultiPoint\\\",\\\"coordinates\\\":[[35.9535000,32.5920730]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"AL012\\\",\\\"ZI001_SDV\\\":\\\"2012-03-27T11:53:13Z\\\",\\\"UFI\\\":\\\"122207e5-5b0a-4da0-9672-0c1012952a54\\\",\\\"ZI005_FNA\\\":\\\"Roman Graves\\\",\\\"FCSUBTYPE\\\":100082}}],\\\"links\\\":[{\\\"href\\\":\\\"https://demo.ldproxy.net/daraa/collections/CulturePnt/items?limit=250&f=json\\\",\\\"rel\\\":\\\"self\\\",\\\"type\\\":\\\"application/geo+json\\\",\\\"title\\\":\\\"This document\\\"},{\\\"href\\\":\\\"https://demo.ldproxy.net/daraa/collections/CulturePnt/items?limit=250&f=jsonfgc\\\",\\\"rel\\\":\\\"alternate\\\",\\\"type\\\":\\\"application/vnd.ogc.fg+json;compatibility=geojson\\\",\\\"title\\\":\\\"This document as JSON-FG (GeoJSON Compatibility Mode)\\\"},{\\\"href\\\":\\\"https://demo.ldproxy.net/daraa/collections/CulturePnt/items?limit=250&f=csv\\\",\\\"rel\\\":\\\"alternate\\\",\\\"type\\\":\\\"text/csv\\\",\\\"title\\\":\\\"This document as CSV\\\"},{\\\"href\\\":\\\"https://demo.ldproxy.net/daraa/collections/CulturePnt/items?limit=250&f=fgb\\\",\\\"rel\\\":\\\"alternate\\\",\\\"type\\\":\\\"application/flatgeobuf\\\",\\\"title\\\":\\\"This document as FlatGeobuf\\\"},{\\\"href\\\":\\\"https://demo.ldproxy.net/daraa/collections/CulturePnt/items?limit=250&f=html\\\",\\\"rel\\\":\\\"alternate\\\",\\\"type\\\":\\\"text/html\\\",\\\"title\\\":\\\"This document as HTML\\\"},{\\\"href\\\":\\\"https://demo.ldproxy.net/daraa/collections/CulturePnt/items?limit=250&f=jsonfg\\\",\\\"rel\\\":\\\"alternate\\\",\\\"type\\\":\\\"application/vnd.ogc.fg+json\\\",\\\"title\\\":\\\"This document as JSON-FG\\\"},{\\\"href\\\":\\\"http://www.opengis.net/def/profile/ogc/0/rel-as-link\\\",\\\"rel\\\":\\\"profile\\\",\\\"title\\\":\\\"Profile used in the response\\\"}]}\"\n    }\n  },\n  {\n    \"title\": \"fetch all CulturePnt features\",\n    \"value\": {\n      \"req\": {\n        \"method\": \"GET\",\n        \"url\": \"https://demo.ldproxy.net/daraa/collections/CulturePnt/items?limit=250\",\n        \"headers\": {\n          \"accept\": \"application/geo+json, application/problem+json;q=0.8\"\n        }\n      },\n      \"header\": {\n        \"content-crs\": \"<http://www.opengis.net/def/crs/OGC/1.3/CRS84>\",\n        \"content-disposition\": \"inline; filename=\\\"CulturePnt.json\\\"\",\n        \"content-encoding\": \"gzip\",\n        \"content-language\": \"en\",\n        \"content-length\": \"1045\",\n        \"content-type\": \"application/geo+json\",\n        \"date\": \"Thu, 25 May 2023 15:55:41 GMT\",\n        \"link\": \"<https://demo.ldproxy.net/daraa/collections/CulturePnt/items?limit=250&f=csv>; rel=\\\"alternate\\\"; title=\\\"This document as CSV\\\"; type=\\\"text/csv\\\", <https://demo.ldproxy.net/daraa/collections/CulturePnt/items?limit=250&f=fgb>; rel=\\\"alternate\\\"; title=\\\"This document as FlatGeobuf\\\"; type=\\\"application/flatgeobuf\\\", <https://demo.ldproxy.net/daraa/collections/CulturePnt/items?limit=250&f=html>; rel=\\\"alternate\\\"; title=\\\"This document as HTML\\\"; type=\\\"text/html\\\", <https://demo.ldproxy.net/daraa/collections/CulturePnt/items?limit=250&f=jsonfg>; rel=\\\"alternate\\\"; title=\\\"This document as JSON-FG\\\"; type=\\\"application/vnd.ogc.fg+json\\\", <https://demo.ldproxy.net/daraa/collections/CulturePnt/items?limit=250&f=jsonfgc>; rel=\\\"alternate\\\"; title=\\\"This document as JSON-FG (GeoJSON Compatibility Mode)\\\"; type=\\\"application/vnd.ogc.fg+json;compatibility=geojson\\\", <http://www.opengis.net/def/profile/ogc/0/rel-as-link>; rel=\\\"profile\\\"; title=\\\"Profile used in the response\\\", <https://demo.ldproxy.net/daraa/collections/CulturePnt/items?limit=250&f=json>; rel=\\\"self\\\"; title=\\\"This document\\\"; type=\\\"application/geo+json\\\"\",\n        \"vary\": \"Accept,Accept-Language,Accept-Encoding\",\n        \"x-request-id\": \"2e6f1741-c28f-425e-a142-b794a1158c43\",\n        \"connection\": \"close\"\n      },\n      \"status\": 200,\n      \"text\": \"{\\\"type\\\":\\\"FeatureCollection\\\",\\\"numberReturned\\\":5,\\\"numberMatched\\\":5,\\\"timeStamp\\\":\\\"2023-05-25T15:55:41Z\\\",\\\"features\\\":[{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":1,\\\"geometry\\\":{\\\"type\\\":\\\"MultiPoint\\\",\\\"coordinates\\\":[[36.0964930,32.6020820]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"AL030\\\",\\\"ZI001_SDV\\\":\\\"2011-12-27T18:39:59Z\\\",\\\"UFI\\\":\\\"7ab54c93-b054-406f-9cf1-6921fd633277\\\",\\\"ZI005_FNA\\\":\\\"مقبرة البحارة\\\",\\\"FCSUBTYPE\\\":100092,\\\"ZI037_REL\\\":11,\\\"ZI006_MEM\\\":\\\"<OSM>{\\\\\\\"name:ar\\\\\\\":\\\\\\\"مقبرة البحارة\\\\\\\",\\\\\\\"name:en\\\\\\\":\\\\\\\"Al Bahara Cemetery\\\\\\\"}</OSM>\\\"}},{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":2,\\\"geometry\\\":{\\\"type\\\":\\\"MultiPoint\\\",\\\"coordinates\\\":[[36.1009200,32.6121330]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"AL130\\\",\\\"ZI001_SDV\\\":\\\"2011-12-26T20:55:27Z\\\",\\\"UFI\\\":\\\"65854536-9ffa-433e-b0c7-5779ae88d705\\\",\\\"ZI005_FNA\\\":\\\"ساحة الكرامة\\\",\\\"FCSUBTYPE\\\":100108,\\\"ZI006_MEM\\\":\\\"<OSM>{\\\\\\\"name:ar\\\\\\\":\\\\\\\"ساحة الكرامة\\\\\\\",\\\\\\\"name:en\\\\\\\":\\\\\\\"Sahet al karama\\\\\\\"}</OSM>\\\"}},{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":3,\\\"geometry\\\":{\\\"type\\\":\\\"MultiPoint\\\",\\\"coordinates\\\":[[36.1085460,32.6405080]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"BH075\\\",\\\"ZI001_SDV\\\":\\\"2013-06-16T23:47:41Z\\\",\\\"UFI\\\":\\\"f4dbf4b1-9522-4dcb-a15b-a2b1359f6ee0\\\",\\\"ZI005_FNA\\\":\\\"نافورة البانوراما\\\",\\\"FCSUBTYPE\\\":100303}},{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":4,\\\"geometry\\\":{\\\"type\\\":\\\"MultiPoint\\\",\\\"coordinates\\\":[[36.0992670,32.6125650]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"AK121\\\",\\\"ZI001_SDV\\\":\\\"2011-01-03T06:31:15Z\\\",\\\"UFI\\\":\\\"a68ec353-e572-4523-9425-8f37b4a4cda6\\\",\\\"ZI005_FNA\\\":\\\"مدرج درعا الأثري\\\",\\\"FCSUBTYPE\\\":100066}},{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":5,\\\"geometry\\\":{\\\"type\\\":\\\"MultiPoint\\\",\\\"coordinates\\\":[[35.9535000,32.5920730]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"AL012\\\",\\\"ZI001_SDV\\\":\\\"2012-03-27T11:53:13Z\\\",\\\"UFI\\\":\\\"122207e5-5b0a-4da0-9672-0c1012952a54\\\",\\\"ZI005_FNA\\\":\\\"Roman Graves\\\",\\\"FCSUBTYPE\\\":100082}}],\\\"links\\\":[{\\\"href\\\":\\\"https://demo.ldproxy.net/daraa/collections/CulturePnt/items?limit=250&f=json\\\",\\\"rel\\\":\\\"self\\\",\\\"type\\\":\\\"application/geo+json\\\",\\\"title\\\":\\\"This document\\\"},{\\\"href\\\":\\\"https://demo.ldproxy.net/daraa/collections/CulturePnt/items?limit=250&f=jsonfgc\\\",\\\"rel\\\":\\\"alternate\\\",\\\"type\\\":\\\"application/vnd.ogc.fg+json;compatibility=geojson\\\",\\\"title\\\":\\\"This document as JSON-FG (GeoJSON Compatibility Mode)\\\"},{\\\"href\\\":\\\"https://demo.ldproxy.net/daraa/collections/CulturePnt/items?limit=250&f=csv\\\",\\\"rel\\\":\\\"alternate\\\",\\\"type\\\":\\\"text/csv\\\",\\\"title\\\":\\\"This document as CSV\\\"},{\\\"href\\\":\\\"https://demo.ldproxy.net/daraa/collections/CulturePnt/items?limit=250&f=fgb\\\",\\\"rel\\\":\\\"alternate\\\",\\\"type\\\":\\\"application/flatgeobuf\\\",\\\"title\\\":\\\"This document as FlatGeobuf\\\"},{\\\"href\\\":\\\"https://demo.ldproxy.net/daraa/collections/CulturePnt/items?limit=250&f=html\\\",\\\"rel\\\":\\\"alternate\\\",\\\"type\\\":\\\"text/html\\\",\\\"title\\\":\\\"This document as HTML\\\"},{\\\"href\\\":\\\"https://demo.ldproxy.net/daraa/collections/CulturePnt/items?limit=250&f=jsonfg\\\",\\\"rel\\\":\\\"alternate\\\",\\\"type\\\":\\\"application/vnd.ogc.fg+json\\\",\\\"title\\\":\\\"This document as JSON-FG\\\"},{\\\"href\\\":\\\"http://www.opengis.net/def/profile/ogc/0/rel-as-link\\\",\\\"rel\\\":\\\"profile\\\",\\\"title\\\":\\\"Profile used in the response\\\"}]}\"\n    }\n  },\n  {\n    \"title\": \"fetch all CulturePnt features\",\n    \"value\": {\n      \"req\": {\n        \"method\": \"GET\",\n        \"url\": \"https://demo.ldproxy.net/daraa/collections/CulturePnt/items?limit=250\",\n        \"headers\": {\n          \"accept\": \"application/geo+json, application/problem+json;q=0.8\"\n        }\n      },\n      \"header\": {\n        \"content-crs\": \"<http://www.opengis.net/def/crs/OGC/1.3/CRS84>\",\n        \"content-disposition\": \"inline; filename=\\\"CulturePnt.json\\\"\",\n        \"content-encoding\": \"gzip\",\n        \"content-language\": \"en\",\n        \"content-length\": \"1045\",\n        \"content-type\": \"application/geo+json\",\n        \"date\": \"Thu, 25 May 2023 15:55:41 GMT\",\n        \"link\": \"<https://demo.ldproxy.net/daraa/collections/CulturePnt/items?limit=250&f=csv>; rel=\\\"alternate\\\"; title=\\\"This document as CSV\\\"; type=\\\"text/csv\\\", <https://demo.ldproxy.net/daraa/collections/CulturePnt/items?limit=250&f=fgb>; rel=\\\"alternate\\\"; title=\\\"This document as FlatGeobuf\\\"; type=\\\"application/flatgeobuf\\\", <https://demo.ldproxy.net/daraa/collections/CulturePnt/items?limit=250&f=html>; rel=\\\"alternate\\\"; title=\\\"This document as HTML\\\"; type=\\\"text/html\\\", <https://demo.ldproxy.net/daraa/collections/CulturePnt/items?limit=250&f=jsonfg>; rel=\\\"alternate\\\"; title=\\\"This document as JSON-FG\\\"; type=\\\"application/vnd.ogc.fg+json\\\", <https://demo.ldproxy.net/daraa/collections/CulturePnt/items?limit=250&f=jsonfgc>; rel=\\\"alternate\\\"; title=\\\"This document as JSON-FG (GeoJSON Compatibility Mode)\\\"; type=\\\"application/vnd.ogc.fg+json;compatibility=geojson\\\", <http://www.opengis.net/def/profile/ogc/0/rel-as-link>; rel=\\\"profile\\\"; title=\\\"Profile used in the response\\\", <https://demo.ldproxy.net/daraa/collections/CulturePnt/items?limit=250&f=json>; rel=\\\"self\\\"; title=\\\"This document\\\"; type=\\\"application/geo+json\\\"\",\n        \"vary\": \"Accept,Accept-Language,Accept-Encoding\",\n        \"x-request-id\": \"f598c426-3aaa-4101-9160-5c6704b5b5c9\",\n        \"connection\": \"close\"\n      },\n      \"status\": 200,\n      \"text\": \"{\\\"type\\\":\\\"FeatureCollection\\\",\\\"numberReturned\\\":5,\\\"numberMatched\\\":5,\\\"timeStamp\\\":\\\"2023-05-25T15:55:41Z\\\",\\\"features\\\":[{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":1,\\\"geometry\\\":{\\\"type\\\":\\\"MultiPoint\\\",\\\"coordinates\\\":[[36.0964930,32.6020820]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"AL030\\\",\\\"ZI001_SDV\\\":\\\"2011-12-27T18:39:59Z\\\",\\\"UFI\\\":\\\"7ab54c93-b054-406f-9cf1-6921fd633277\\\",\\\"ZI005_FNA\\\":\\\"مقبرة البحارة\\\",\\\"FCSUBTYPE\\\":100092,\\\"ZI037_REL\\\":11,\\\"ZI006_MEM\\\":\\\"<OSM>{\\\\\\\"name:ar\\\\\\\":\\\\\\\"مقبرة البحارة\\\\\\\",\\\\\\\"name:en\\\\\\\":\\\\\\\"Al Bahara Cemetery\\\\\\\"}</OSM>\\\"}},{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":2,\\\"geometry\\\":{\\\"type\\\":\\\"MultiPoint\\\",\\\"coordinates\\\":[[36.1009200,32.6121330]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"AL130\\\",\\\"ZI001_SDV\\\":\\\"2011-12-26T20:55:27Z\\\",\\\"UFI\\\":\\\"65854536-9ffa-433e-b0c7-5779ae88d705\\\",\\\"ZI005_FNA\\\":\\\"ساحة الكرامة\\\",\\\"FCSUBTYPE\\\":100108,\\\"ZI006_MEM\\\":\\\"<OSM>{\\\\\\\"name:ar\\\\\\\":\\\\\\\"ساحة الكرامة\\\\\\\",\\\\\\\"name:en\\\\\\\":\\\\\\\"Sahet al karama\\\\\\\"}</OSM>\\\"}},{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":3,\\\"geometry\\\":{\\\"type\\\":\\\"MultiPoint\\\",\\\"coordinates\\\":[[36.1085460,32.6405080]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"BH075\\\",\\\"ZI001_SDV\\\":\\\"2013-06-16T23:47:41Z\\\",\\\"UFI\\\":\\\"f4dbf4b1-9522-4dcb-a15b-a2b1359f6ee0\\\",\\\"ZI005_FNA\\\":\\\"نافورة البانوراما\\\",\\\"FCSUBTYPE\\\":100303}},{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":4,\\\"geometry\\\":{\\\"type\\\":\\\"MultiPoint\\\",\\\"coordinates\\\":[[36.0992670,32.6125650]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"AK121\\\",\\\"ZI001_SDV\\\":\\\"2011-01-03T06:31:15Z\\\",\\\"UFI\\\":\\\"a68ec353-e572-4523-9425-8f37b4a4cda6\\\",\\\"ZI005_FNA\\\":\\\"مدرج درعا الأثري\\\",\\\"FCSUBTYPE\\\":100066}},{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":5,\\\"geometry\\\":{\\\"type\\\":\\\"MultiPoint\\\",\\\"coordinates\\\":[[35.9535000,32.5920730]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"AL012\\\",\\\"ZI001_SDV\\\":\\\"2012-03-27T11:53:13Z\\\",\\\"UFI\\\":\\\"122207e5-5b0a-4da0-9672-0c1012952a54\\\",\\\"ZI005_FNA\\\":\\\"Roman Graves\\\",\\\"FCSUBTYPE\\\":100082}}],\\\"links\\\":[{\\\"href\\\":\\\"https://demo.ldproxy.net/daraa/collections/CulturePnt/items?limit=250&f=json\\\",\\\"rel\\\":\\\"self\\\",\\\"type\\\":\\\"application/geo+json\\\",\\\"title\\\":\\\"This document\\\"},{\\\"href\\\":\\\"https://demo.ldproxy.net/daraa/collections/CulturePnt/items?limit=250&f=jsonfgc\\\",\\\"rel\\\":\\\"alternate\\\",\\\"type\\\":\\\"application/vnd.ogc.fg+json;compatibility=geojson\\\",\\\"title\\\":\\\"This document as JSON-FG (GeoJSON Compatibility Mode)\\\"},{\\\"href\\\":\\\"https://demo.ldproxy.net/daraa/collections/CulturePnt/items?limit=250&f=csv\\\",\\\"rel\\\":\\\"alternate\\\",\\\"type\\\":\\\"text/csv\\\",\\\"title\\\":\\\"This document as CSV\\\"},{\\\"href\\\":\\\"https://demo.ldproxy.net/daraa/collections/CulturePnt/items?limit=250&f=fgb\\\",\\\"rel\\\":\\\"alternate\\\",\\\"type\\\":\\\"application/flatgeobuf\\\",\\\"title\\\":\\\"This document as FlatGeobuf\\\"},{\\\"href\\\":\\\"https://demo.ldproxy.net/daraa/collections/CulturePnt/items?limit=250&f=html\\\",\\\"rel\\\":\\\"alternate\\\",\\\"type\\\":\\\"text/html\\\",\\\"title\\\":\\\"This document as HTML\\\"},{\\\"href\\\":\\\"https://demo.ldproxy.net/daraa/collections/CulturePnt/items?limit=250&f=jsonfg\\\",\\\"rel\\\":\\\"alternate\\\",\\\"type\\\":\\\"application/vnd.ogc.fg+json\\\",\\\"title\\\":\\\"This document as JSON-FG\\\"},{\\\"href\\\":\\\"http://www.opengis.net/def/profile/ogc/0/rel-as-link\\\",\\\"rel\\\":\\\"profile\\\",\\\"title\\\":\\\"Profile used in the response\\\"}]}\"\n    }\n  },\n  {\n    \"title\": \"fetch all CulturePnt features\",\n    \"value\": {\n      \"req\": {\n        \"method\": \"GET\",\n        \"url\": \"https://demo.ldproxy.net/daraa/collections/CulturePnt/items?limit=250\",\n        \"headers\": {\n          \"accept\": \"application/geo+json, application/problem+json;q=0.8\"\n        }\n      },\n      \"header\": {\n        \"content-crs\": \"<http://www.opengis.net/def/crs/OGC/1.3/CRS84>\",\n        \"content-disposition\": \"inline; filename=\\\"CulturePnt.json\\\"\",\n        \"content-encoding\": \"gzip\",\n        \"content-language\": \"en\",\n        \"content-length\": \"1045\",\n        \"content-type\": \"application/geo+json\",\n        \"date\": \"Thu, 25 May 2023 15:55:41 GMT\",\n        \"link\": \"<https://demo.ldproxy.net/daraa/collections/CulturePnt/items?limit=250&f=csv>; rel=\\\"alternate\\\"; title=\\\"This document as CSV\\\"; type=\\\"text/csv\\\", <https://demo.ldproxy.net/daraa/collections/CulturePnt/items?limit=250&f=fgb>; rel=\\\"alternate\\\"; title=\\\"This document as FlatGeobuf\\\"; type=\\\"application/flatgeobuf\\\", <https://demo.ldproxy.net/daraa/collections/CulturePnt/items?limit=250&f=html>; rel=\\\"alternate\\\"; title=\\\"This document as HTML\\\"; type=\\\"text/html\\\", <https://demo.ldproxy.net/daraa/collections/CulturePnt/items?limit=250&f=jsonfg>; rel=\\\"alternate\\\"; title=\\\"This document as JSON-FG\\\"; type=\\\"application/vnd.ogc.fg+json\\\", <https://demo.ldproxy.net/daraa/collections/CulturePnt/items?limit=250&f=jsonfgc>; rel=\\\"alternate\\\"; title=\\\"This document as JSON-FG (GeoJSON Compatibility Mode)\\\"; type=\\\"application/vnd.ogc.fg+json;compatibility=geojson\\\", <http://www.opengis.net/def/profile/ogc/0/rel-as-link>; rel=\\\"profile\\\"; title=\\\"Profile used in the response\\\", <https://demo.ldproxy.net/daraa/collections/CulturePnt/items?limit=250&f=json>; rel=\\\"self\\\"; title=\\\"This document\\\"; type=\\\"application/geo+json\\\"\",\n        \"vary\": \"Accept,Accept-Language,Accept-Encoding\",\n        \"x-request-id\": \"eb7ec65a-20ef-49f9-945e-707c2b64e251\",\n        \"connection\": \"close\"\n      },\n      \"status\": 200,\n      \"text\": \"{\\\"type\\\":\\\"FeatureCollection\\\",\\\"numberReturned\\\":5,\\\"numberMatched\\\":5,\\\"timeStamp\\\":\\\"2023-05-25T15:55:41Z\\\",\\\"features\\\":[{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":1,\\\"geometry\\\":{\\\"type\\\":\\\"MultiPoint\\\",\\\"coordinates\\\":[[36.0964930,32.6020820]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"AL030\\\",\\\"ZI001_SDV\\\":\\\"2011-12-27T18:39:59Z\\\",\\\"UFI\\\":\\\"7ab54c93-b054-406f-9cf1-6921fd633277\\\",\\\"ZI005_FNA\\\":\\\"مقبرة البحارة\\\",\\\"FCSUBTYPE\\\":100092,\\\"ZI037_REL\\\":11,\\\"ZI006_MEM\\\":\\\"<OSM>{\\\\\\\"name:ar\\\\\\\":\\\\\\\"مقبرة البحارة\\\\\\\",\\\\\\\"name:en\\\\\\\":\\\\\\\"Al Bahara Cemetery\\\\\\\"}</OSM>\\\"}},{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":2,\\\"geometry\\\":{\\\"type\\\":\\\"MultiPoint\\\",\\\"coordinates\\\":[[36.1009200,32.6121330]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"AL130\\\",\\\"ZI001_SDV\\\":\\\"2011-12-26T20:55:27Z\\\",\\\"UFI\\\":\\\"65854536-9ffa-433e-b0c7-5779ae88d705\\\",\\\"ZI005_FNA\\\":\\\"ساحة الكرامة\\\",\\\"FCSUBTYPE\\\":100108,\\\"ZI006_MEM\\\":\\\"<OSM>{\\\\\\\"name:ar\\\\\\\":\\\\\\\"ساحة الكرامة\\\\\\\",\\\\\\\"name:en\\\\\\\":\\\\\\\"Sahet al karama\\\\\\\"}</OSM>\\\"}},{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":3,\\\"geometry\\\":{\\\"type\\\":\\\"MultiPoint\\\",\\\"coordinates\\\":[[36.1085460,32.6405080]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"BH075\\\",\\\"ZI001_SDV\\\":\\\"2013-06-16T23:47:41Z\\\",\\\"UFI\\\":\\\"f4dbf4b1-9522-4dcb-a15b-a2b1359f6ee0\\\",\\\"ZI005_FNA\\\":\\\"نافورة البانوراما\\\",\\\"FCSUBTYPE\\\":100303}},{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":4,\\\"geometry\\\":{\\\"type\\\":\\\"MultiPoint\\\",\\\"coordinates\\\":[[36.0992670,32.6125650]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"AK121\\\",\\\"ZI001_SDV\\\":\\\"2011-01-03T06:31:15Z\\\",\\\"UFI\\\":\\\"a68ec353-e572-4523-9425-8f37b4a4cda6\\\",\\\"ZI005_FNA\\\":\\\"مدرج درعا الأثري\\\",\\\"FCSUBTYPE\\\":100066}},{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":5,\\\"geometry\\\":{\\\"type\\\":\\\"MultiPoint\\\",\\\"coordinates\\\":[[35.9535000,32.5920730]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"AL012\\\",\\\"ZI001_SDV\\\":\\\"2012-03-27T11:53:13Z\\\",\\\"UFI\\\":\\\"122207e5-5b0a-4da0-9672-0c1012952a54\\\",\\\"ZI005_FNA\\\":\\\"Roman Graves\\\",\\\"FCSUBTYPE\\\":100082}}],\\\"links\\\":[{\\\"href\\\":\\\"https://demo.ldproxy.net/daraa/collections/CulturePnt/items?limit=250&f=json\\\",\\\"rel\\\":\\\"self\\\",\\\"type\\\":\\\"application/geo+json\\\",\\\"title\\\":\\\"This document\\\"},{\\\"href\\\":\\\"https://demo.ldproxy.net/daraa/collections/CulturePnt/items?limit=250&f=jsonfgc\\\",\\\"rel\\\":\\\"alternate\\\",\\\"type\\\":\\\"application/vnd.ogc.fg+json;compatibility=geojson\\\",\\\"title\\\":\\\"This document as JSON-FG (GeoJSON Compatibility Mode)\\\"},{\\\"href\\\":\\\"https://demo.ldproxy.net/daraa/collections/CulturePnt/items?limit=250&f=csv\\\",\\\"rel\\\":\\\"alternate\\\",\\\"type\\\":\\\"text/csv\\\",\\\"title\\\":\\\"This document as CSV\\\"},{\\\"href\\\":\\\"https://demo.ldproxy.net/daraa/collections/CulturePnt/items?limit=250&f=fgb\\\",\\\"rel\\\":\\\"alternate\\\",\\\"type\\\":\\\"application/flatgeobuf\\\",\\\"title\\\":\\\"This document as FlatGeobuf\\\"},{\\\"href\\\":\\\"https://demo.ldproxy.net/daraa/collections/CulturePnt/items?limit=250&f=html\\\",\\\"rel\\\":\\\"alternate\\\",\\\"type\\\":\\\"text/html\\\",\\\"title\\\":\\\"This document as HTML\\\"},{\\\"href\\\":\\\"https://demo.ldproxy.net/daraa/collections/CulturePnt/items?limit=250&f=jsonfg\\\",\\\"rel\\\":\\\"alternate\\\",\\\"type\\\":\\\"application/vnd.ogc.fg+json\\\",\\\"title\\\":\\\"This document as JSON-FG\\\"},{\\\"href\\\":\\\"http://www.opengis.net/def/profile/ogc/0/rel-as-link\\\",\\\"rel\\\":\\\"profile\\\",\\\"title\\\":\\\"Profile used in the response\\\"}]}\"\n    }\n  },\n  {\n    \"title\": \"fetch all AeronauticCrv features\",\n    \"value\": {\n      \"req\": {\n        \"method\": \"GET\",\n        \"url\": \"https://demo.ldproxy.net/daraa/collections/AeronauticCrv/items?limit=250\",\n        \"headers\": {\n          \"accept\": \"application/geo+json, application/problem+json;q=0.8\"\n        }\n      },\n      \"header\": {\n        \"content-crs\": \"<http://www.opengis.net/def/crs/OGC/1.3/CRS84>\",\n        \"content-disposition\": \"inline; filename=\\\"AeronauticCrv.json\\\"\",\n        \"content-encoding\": \"gzip\",\n        \"content-language\": \"en\",\n        \"content-length\": \"1747\",\n        \"content-type\": \"application/geo+json\",\n        \"date\": \"Thu, 25 May 2023 15:55:42 GMT\",\n        \"link\": \"<https://demo.ldproxy.net/daraa/collections/AeronauticCrv/items?limit=250&f=csv>; rel=\\\"alternate\\\"; title=\\\"This document as CSV\\\"; type=\\\"text/csv\\\", <https://demo.ldproxy.net/daraa/collections/AeronauticCrv/items?limit=250&f=fgb>; rel=\\\"alternate\\\"; title=\\\"This document as FlatGeobuf\\\"; type=\\\"application/flatgeobuf\\\", <https://demo.ldproxy.net/daraa/collections/AeronauticCrv/items?limit=250&f=html>; rel=\\\"alternate\\\"; title=\\\"This document as HTML\\\"; type=\\\"text/html\\\", <https://demo.ldproxy.net/daraa/collections/AeronauticCrv/items?limit=250&f=jsonfg>; rel=\\\"alternate\\\"; title=\\\"This document as JSON-FG\\\"; type=\\\"application/vnd.ogc.fg+json\\\", <https://demo.ldproxy.net/daraa/collections/AeronauticCrv/items?limit=250&f=jsonfgc>; rel=\\\"alternate\\\"; title=\\\"This document as JSON-FG (GeoJSON Compatibility Mode)\\\"; type=\\\"application/vnd.ogc.fg+json;compatibility=geojson\\\", <http://www.opengis.net/def/profile/ogc/0/rel-as-link>; rel=\\\"profile\\\"; title=\\\"Profile used in the response\\\", <https://demo.ldproxy.net/daraa/collections/AeronauticCrv/items?limit=250&f=json>; rel=\\\"self\\\"; title=\\\"This document\\\"; type=\\\"application/geo+json\\\"\",\n        \"vary\": \"Accept,Accept-Language,Accept-Encoding\",\n        \"x-request-id\": \"30dd5d3b-794c-4c59-b8ab-b41b6799f239\",\n        \"connection\": \"close\"\n      },\n      \"status\": 200,\n      \"text\": \"{\\\"type\\\":\\\"FeatureCollection\\\",\\\"numberReturned\\\":20,\\\"numberMatched\\\":20,\\\"timeStamp\\\":\\\"2023-05-25T15:55:42Z\\\",\\\"features\\\":[{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":1,\\\"geometry\\\":{\\\"type\\\":\\\"MultiLineString\\\",\\\"coordinates\\\":[[[36.4270030,32.7114540],[36.4251990,32.7137030]]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"GB075\\\",\\\"ZI001_SDV\\\":\\\"2011-03-16T14:51:12Z\\\",\\\"UFI\\\":\\\"2d008c34-4458-4226-b335-cf903d261ce9\\\",\\\"ZI005_FNA\\\":\\\"No Information\\\",\\\"FCSUBTYPE\\\":100454}},{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":2,\\\"geometry\\\":{\\\"type\\\":\\\"MultiLineString\\\",\\\"coordinates\\\":[[[36.4009090,32.7000770],[36.4031330,32.7013330],[36.4208880,32.7113020],[36.4231110,32.7125400],[36.4251990,32.7137030],[36.4252970,32.7137690]]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"GB075\\\",\\\"ZI001_SDV\\\":\\\"2015-09-11T19:15:35Z\\\",\\\"UFI\\\":\\\"1257bf27-3f91-461d-8a3b-a95af2ea1f5a\\\",\\\"ZI005_FNA\\\":\\\"No Information\\\",\\\"FCSUBTYPE\\\":100454}},{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":3,\\\"geometry\\\":{\\\"type\\\":\\\"MultiLineString\\\",\\\"coordinates\\\":[[[36.4049030,32.6990350],[36.4031330,32.7013330]]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"GB075\\\",\\\"ZI001_SDV\\\":\\\"2011-03-16T14:51:12Z\\\",\\\"UFI\\\":\\\"0ee76209-d69a-4cf5-b74f-dfe563ddede7\\\",\\\"ZI005_FNA\\\":\\\"No Information\\\",\\\"FCSUBTYPE\\\":100454}},{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":4,\\\"geometry\\\":{\\\"type\\\":\\\"MultiLineString\\\",\\\"coordinates\\\":[[[36.4226450,32.7090630],[36.4208880,32.7113020]]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"GB075\\\",\\\"ZI001_SDV\\\":\\\"2011-03-16T14:51:13Z\\\",\\\"UFI\\\":\\\"0463e92c-cf42-4c73-ac2f-81e0d7a0654c\\\",\\\"ZI005_FNA\\\":\\\"No Information\\\",\\\"FCSUBTYPE\\\":100454}},{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":5,\\\"geometry\\\":{\\\"type\\\":\\\"MultiLineString\\\",\\\"coordinates\\\":[[[36.3989300,32.6988040],[36.4005290,32.6965830]]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"GB075\\\",\\\"ZI001_SDV\\\":\\\"2015-09-11T19:15:35Z\\\",\\\"UFI\\\":\\\"944e084c-49dc-42b3-8566-bc75e5fecf39\\\",\\\"ZI005_FNA\\\":\\\"No Information\\\",\\\"FCSUBTYPE\\\":100454}},{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":6,\\\"geometry\\\":{\\\"type\\\":\\\"MultiLineString\\\",\\\"coordinates\\\":[[[36.4025330,32.6952330],[36.4019600,32.6953240],[36.4014490,32.6954050],[36.4012670,32.6955310],[36.4000010,32.6933010],[36.3994110,32.6935090],[36.3989490,32.6936710],[36.4000010,32.6933010],[36.4012670,32.6955310],[36.4005290,32.6965830],[36.4005160,32.6962630],[36.3995820,32.6946740]]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"GB075\\\",\\\"ZI001_SDV\\\":\\\"2012-01-03T16:24:13Z\\\",\\\"UFI\\\":\\\"6d64efa5-affb-474e-893f-47aabac7b5da\\\",\\\"ZI005_FNA\\\":\\\"No Information\\\",\\\"FCSUBTYPE\\\":100454}},{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":7,\\\"geometry\\\":{\\\"type\\\":\\\"MultiLineString\\\",\\\"coordinates\\\":[[[36.4234650,32.7141110],[36.4234560,32.7140710],[36.4231110,32.7125400]]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"GB075\\\",\\\"ZI001_SDV\\\":\\\"2012-01-03T16:24:13Z\\\",\\\"UFI\\\":\\\"5ccc277e-fa94-49ca-b566-d41246d3e42b\\\",\\\"ZI005_FNA\\\":\\\"No Information\\\",\\\"FCSUBTYPE\\\":100454}},{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":8,\\\"geometry\\\":{\\\"type\\\":\\\"MultiLineString\\\",\\\"coordinates\\\":[[[36.4294830,32.7114930],[36.4284420,32.7114460],[36.4272630,32.7113940],[36.4270030,32.7114540]]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"GB075\\\",\\\"ZI001_SDV\\\":\\\"2012-01-03T16:24:13Z\\\",\\\"UFI\\\":\\\"b9175c1f-43c2-455b-bdd0-f91cdffaaf6f\\\",\\\"ZI005_FNA\\\":\\\"No Information\\\",\\\"FCSUBTYPE\\\":100454}},{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":9,\\\"geometry\\\":{\\\"type\\\":\\\"MultiLineString\\\",\\\"coordinates\\\":[[[36.4259320,32.7173330],[36.4257630,32.7170350],[36.4245000,32.7148030],[36.4257630,32.7170350],[36.4263700,32.7167880],[36.4267580,32.7166290]]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"GB075\\\",\\\"ZI001_SDV\\\":\\\"2012-01-03T16:24:14Z\\\",\\\"UFI\\\":\\\"c9a2d4e5-67d6-458b-a89a-d664d99ea865\\\",\\\"ZI005_FNA\\\":\\\"No Information\\\",\\\"FCSUBTYPE\\\":100454}},{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":10,\\\"geometry\\\":{\\\"type\\\":\\\"MultiLineString\\\",\\\"coordinates\\\":[[[36.3993320,32.7003240],[36.4009090,32.7000770]]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"GB075\\\",\\\"ZI001_SDV\\\":\\\"2015-09-11T19:15:35Z\\\",\\\"UFI\\\":\\\"d6066359-c2cc-460e-98d4-332b915fb21f\\\",\\\"ZI005_FNA\\\":\\\"No Information\\\",\\\"FCSUBTYPE\\\":100454}},{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":11,\\\"geometry\\\":{\\\"type\\\":\\\"MultiLineString\\\",\\\"coordinates\\\":[[[36.4268870,32.7099400],[36.4248150,32.7102540]]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"GB075\\\",\\\"ZI001_SDV\\\":\\\"2012-01-03T16:24:15Z\\\",\\\"UFI\\\":\\\"e4d806b5-73ce-4a76-ba6b-f2d80b1cad30\\\",\\\"ZI005_FNA\\\":\\\"No Information\\\",\\\"FCSUBTYPE\\\":100454}},{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":12,\\\"geometry\\\":{\\\"type\\\":\\\"MultiLineString\\\",\\\"coordinates\\\":[[[36.4022750,32.6963170],[36.4026520,32.6977730]]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"GB075\\\",\\\"ZI001_SDV\\\":\\\"2012-01-03T16:24:16Z\\\",\\\"UFI\\\":\\\"096f8898-4886-408a-b3a3-af40829b8508\\\",\\\"ZI005_FNA\\\":\\\"No Information\\\",\\\"FCSUBTYPE\\\":100454}},{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":13,\\\"geometry\\\":{\\\"type\\\":\\\"MultiLineString\\\",\\\"coordinates\\\":[[[36.4233570,32.7150680],[36.4237650,32.7150030],[36.4244410,32.7148960],[36.4245000,32.7148030],[36.4250700,32.7139060],[36.4251990,32.7137030],[36.4250700,32.7139060],[36.4252450,32.7141020],[36.4262220,32.7157360]]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"GB075\\\",\\\"ZI001_SDV\\\":\\\"2012-01-03T16:24:16Z\\\",\\\"UFI\\\":\\\"d27b2fbd-01e2-44d2-81fc-dd4b1f1b89bb\\\",\\\"ZI005_FNA\\\":\\\"No Information\\\",\\\"FCSUBTYPE\\\":100454}},{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":14,\\\"geometry\\\":{\\\"type\\\":\\\"MultiLineString\\\",\\\"coordinates\\\":[[[36.4284420,32.7114460],[36.4292690,32.7106350],[36.4307820,32.7107260],[36.4308140,32.7112130],[36.4307490,32.7116100]]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"GB075\\\",\\\"ZI001_SDV\\\":\\\"2012-01-03T16:24:17Z\\\",\\\"UFI\\\":\\\"29c39f1d-9c5e-4950-9f9d-80a4ea9231bf\\\",\\\"ZI005_FNA\\\":\\\"No Information\\\",\\\"FCSUBTYPE\\\":100454}},{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":15,\\\"geometry\\\":{\\\"type\\\":\\\"MultiLineString\\\",\\\"coordinates\\\":[[[36.3987500,32.6989870],[36.3964050,32.6988310]]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"GB075\\\",\\\"ZI001_SDV\\\":\\\"2015-09-11T19:15:34Z\\\",\\\"UFI\\\":\\\"80c53866-0b64-4c42-9232-33b6b9a50f86\\\",\\\"ZI005_FNA\\\":\\\"No Information\\\",\\\"FCSUBTYPE\\\":100454}},{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":16,\\\"geometry\\\":{\\\"type\\\":\\\"MultiLineString\\\",\\\"coordinates\\\":[[[36.3951580,32.6996890],[36.3981120,32.6997940]]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"GB075\\\",\\\"ZI001_SDV\\\":\\\"2015-09-11T19:15:34Z\\\",\\\"UFI\\\":\\\"7e1929ee-480f-45eb-af1f-aa41017d079a\\\",\\\"ZI005_FNA\\\":\\\"No Information\\\",\\\"FCSUBTYPE\\\":100454}},{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":17,\\\"geometry\\\":{\\\"type\\\":\\\"MultiLineString\\\",\\\"coordinates\\\":[[[36.4009090,32.7000770],[36.3989300,32.6988040]]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"GB075\\\",\\\"ZI001_SDV\\\":\\\"2015-09-11T19:15:34Z\\\",\\\"UFI\\\":\\\"755c84a1-bee7-4a06-940a-2412271b6d98\\\",\\\"ZI005_FNA\\\":\\\"No Information\\\",\\\"FCSUBTYPE\\\":100454}},{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":18,\\\"geometry\\\":{\\\"type\\\":\\\"MultiLineString\\\",\\\"coordinates\\\":[[[36.3951580,32.6996890],[36.3951760,32.6991010],[36.3952030,32.6987410]]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"GB075\\\",\\\"ZI001_SDV\\\":\\\"2015-09-11T19:15:34Z\\\",\\\"UFI\\\":\\\"74265cb8-e821-4b6a-b1ec-aac5cf988761\\\",\\\"ZI005_FNA\\\":\\\"No Information\\\",\\\"FCSUBTYPE\\\":100454}},{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":19,\\\"geometry\\\":{\\\"type\\\":\\\"MultiLineString\\\",\\\"coordinates\\\":[[[36.3989300,32.6988040],[36.3987500,32.6989870],[36.3981120,32.6997940]]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"GB075\\\",\\\"ZI001_SDV\\\":\\\"2015-09-11T19:15:34Z\\\",\\\"UFI\\\":\\\"81bb2203-dda3-484e-9509-a8dd09e52ac0\\\",\\\"ZI005_FNA\\\":\\\"No Information\\\",\\\"FCSUBTYPE\\\":100454}},{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":20,\\\"geometry\\\":{\\\"type\\\":\\\"MultiLineString\\\",\\\"coordinates\\\":[[[36.3981120,32.6997940],[36.3982740,32.7004670],[36.3983450,32.7007660]]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"GB075\\\",\\\"ZI001_SDV\\\":\\\"2015-09-11T19:15:34Z\\\",\\\"UFI\\\":\\\"b3a4e01c-98e1-4076-852c-84363fbba283\\\",\\\"ZI005_FNA\\\":\\\"No Information\\\",\\\"FCSUBTYPE\\\":100454}}],\\\"links\\\":[{\\\"href\\\":\\\"https://demo.ldproxy.net/daraa/collections/AeronauticCrv/items?limit=250&f=json\\\",\\\"rel\\\":\\\"self\\\",\\\"type\\\":\\\"application/geo+json\\\",\\\"title\\\":\\\"This document\\\"},{\\\"href\\\":\\\"https://demo.ldproxy.net/daraa/collections/AeronauticCrv/items?limit=250&f=jsonfgc\\\",\\\"rel\\\":\\\"alternate\\\",\\\"type\\\":\\\"application/vnd.ogc.fg+json;compatibility=geojson\\\",\\\"title\\\":\\\"This document as JSON-FG (GeoJSON Compatibility Mode)\\\"},{\\\"href\\\":\\\"https://demo.ldproxy.net/daraa/collections/AeronauticCrv/items?limit=250&f=csv\\\",\\\"rel\\\":\\\"alternate\\\",\\\"type\\\":\\\"text/csv\\\",\\\"title\\\":\\\"This document as CSV\\\"},{\\\"href\\\":\\\"https://demo.ldproxy.net/daraa/collections/AeronauticCrv/items?limit=250&f=fgb\\\",\\\"rel\\\":\\\"alternate\\\",\\\"type\\\":\\\"application/flatgeobuf\\\",\\\"title\\\":\\\"This document as FlatGeobuf\\\"},{\\\"href\\\":\\\"https://demo.ldproxy.net/daraa/collections/AeronauticCrv/items?limit=250&f=html\\\",\\\"rel\\\":\\\"alternate\\\",\\\"type\\\":\\\"text/html\\\",\\\"title\\\":\\\"This document as HTML\\\"},{\\\"href\\\":\\\"https://demo.ldproxy.net/daraa/collections/AeronauticCrv/items?limit=250&f=jsonfg\\\",\\\"rel\\\":\\\"alternate\\\",\\\"type\\\":\\\"application/vnd.ogc.fg+json\\\",\\\"title\\\":\\\"This document as JSON-FG\\\"},{\\\"href\\\":\\\"http://www.opengis.net/def/profile/ogc/0/rel-as-link\\\",\\\"rel\\\":\\\"profile\\\",\\\"title\\\":\\\"Profile used in the response\\\"}]}\"\n    }\n  },\n  {\n    \"title\": \"fetch AeronauticCrv Collection\",\n    \"value\": {\n      \"req\": {\n        \"method\": \"GET\",\n        \"url\": \"https://demo.ldproxy.net/daraa/collections/AeronauticCrv\",\n        \"headers\": {\n          \"accept\": \"application/json\"\n        }\n      },\n      \"header\": {\n        \"content-disposition\": \"inline; filename=\\\"AeronauticCrv.json\\\"\",\n        \"content-encoding\": \"gzip\",\n        \"content-language\": \"en\",\n        \"content-length\": \"996\",\n        \"content-type\": \"application/json\",\n        \"date\": \"Thu, 25 May 2023 15:55:42 GMT\",\n        \"etag\": \"W/\\\"aa3f3401ff99486b4b21fbdff2e7c561--gzip\\\"\",\n        \"vary\": \"Accept,Accept-Language,Accept-Encoding\",\n        \"x-request-id\": \"717dcd97-dd0e-4540-a657-460d8d954df6\",\n        \"connection\": \"close\"\n      },\n      \"status\": 200,\n      \"text\": \"{\\n  \\\"links\\\" : [ {\\n    \\\"rel\\\" : \\\"alternate\\\",\\n    \\\"type\\\" : \\\"text/html\\\",\\n    \\\"title\\\" : \\\"This document as HTML\\\",\\n    \\\"href\\\" : \\\"https://demo.ldproxy.net/daraa/collections/AeronauticCrv?f=html\\\"\\n  }, {\\n    \\\"rel\\\" : \\\"http://www.opengis.net/def/rel/ogc/0.0/schema-item\\\",\\n    \\\"title\\\" : \\\"Schema of features in 'Aeronautic (Curves)'\\\",\\n    \\\"href\\\" : \\\"https://demo.ldproxy.net/daraa/collections/AeronauticCrv/schema\\\"\\n  }, {\\n    \\\"rel\\\" : \\\"http://www.opengis.net/def/rel/ogc/1.0/queryables\\\",\\n    \\\"title\\\" : \\\"Queryable attributes\\\",\\n    \\\"href\\\" : \\\"https://demo.ldproxy.net/daraa/collections/AeronauticCrv/queryables\\\"\\n  }, {\\n    \\\"rel\\\" : \\\"http://www.opengis.net/def/rel/ogc/1.0/sortables\\\",\\n    \\\"title\\\" : \\\"Sortable attributes\\\",\\n    \\\"href\\\" : \\\"https://demo.ldproxy.net/daraa/collections/AeronauticCrv/sortables\\\"\\n  }, {\\n    \\\"rel\\\" : \\\"http://www.opengis.net/def/rel/ogc/1.0/styles\\\",\\n    \\\"title\\\" : \\\"Styles to render the data in maps\\\",\\n    \\\"href\\\" : \\\"https://demo.ldproxy.net/daraa/collections/AeronauticCrv/styles\\\"\\n  }, {\\n    \\\"rel\\\" : \\\"http://www.opengis.net/def/rel/ogc/1.0/tilesets-vector\\\",\\n    \\\"title\\\" : \\\"Access the data as tiles\\\",\\n    \\\"href\\\" : \\\"https://demo.ldproxy.net/daraa/collections/AeronauticCrv/tiles\\\"\\n  }, {\\n    \\\"rel\\\" : \\\"items\\\",\\n    \\\"type\\\" : \\\"text/csv\\\",\\n    \\\"title\\\" : \\\"Access the features in the collection 'Aeronautic (Curves)' as CSV\\\",\\n    \\\"href\\\" : \\\"https://demo.ldproxy.net/daraa/collections/AeronauticCrv/items?f=csv\\\"\\n  }, {\\n    \\\"rel\\\" : \\\"items\\\",\\n    \\\"type\\\" : \\\"application/flatgeobuf\\\",\\n    \\\"title\\\" : \\\"Access the features in the collection 'Aeronautic (Curves)' as FlatGeobuf\\\",\\n    \\\"href\\\" : \\\"https://demo.ldproxy.net/daraa/collections/AeronauticCrv/items?f=fgb\\\"\\n  }, {\\n    \\\"rel\\\" : \\\"items\\\",\\n    \\\"type\\\" : \\\"text/html\\\",\\n    \\\"title\\\" : \\\"Access the features in the collection 'Aeronautic (Curves)' as HTML\\\",\\n    \\\"href\\\" : \\\"https://demo.ldproxy.net/daraa/collections/AeronauticCrv/items?f=html\\\"\\n  }, {\\n    \\\"rel\\\" : \\\"items\\\",\\n    \\\"type\\\" : \\\"application/geo+json\\\",\\n    \\\"title\\\" : \\\"Access the features in the collection 'Aeronautic (Curves)' as GeoJSON\\\",\\n    \\\"href\\\" : \\\"https://demo.ldproxy.net/daraa/collections/AeronauticCrv/items?f=json\\\"\\n  }, {\\n    \\\"rel\\\" : \\\"items\\\",\\n    \\\"type\\\" : \\\"application/vnd.ogc.fg+json\\\",\\n    \\\"title\\\" : \\\"Access the features in the collection 'Aeronautic (Curves)' as JSON-FG\\\",\\n    \\\"href\\\" : \\\"https://demo.ldproxy.net/daraa/collections/AeronauticCrv/items?f=jsonfg\\\"\\n  }, {\\n    \\\"rel\\\" : \\\"items\\\",\\n    \\\"type\\\" : \\\"application/vnd.ogc.fg+json;compatibility=geojson\\\",\\n    \\\"title\\\" : \\\"Access the features in the collection 'Aeronautic (Curves)' as JSON-FG (GeoJSON Compatibility Mode)\\\",\\n    \\\"href\\\" : \\\"https://demo.ldproxy.net/daraa/collections/AeronauticCrv/items?f=jsonfgc\\\"\\n  }, {\\n    \\\"rel\\\" : \\\"self\\\",\\n    \\\"type\\\" : \\\"application/json\\\",\\n    \\\"title\\\" : \\\"This document\\\",\\n    \\\"href\\\" : \\\"https://demo.ldproxy.net/daraa/collections/AeronauticCrv?f=json\\\"\\n  } ],\\n  \\\"title\\\" : \\\"Aeronautic (Curves)\\\",\\n  \\\"description\\\" : \\\"Aeronautical Facilities: Information about an area specifically designed and constructed for landing, accommodating, and launching military and/or civilian aircraft, rockets, missiles and/or spacecraft.<br/>Aeronautical Aids to Navigation: Information about electronic equipment, housings, and utilities that provide positional information for direction or otherwise assisting in the navigation of airborne aircraft.\\\",\\n  \\\"id\\\" : \\\"AeronauticCrv\\\",\\n  \\\"extent\\\" : {\\n    \\\"spatial\\\" : {\\n      \\\"bbox\\\" : [ [ 36.395158, 32.693301, 36.430814, 32.717333 ] ],\\n      \\\"crs\\\" : \\\"http://www.opengis.net/def/crs/OGC/1.3/CRS84\\\"\\n    },\\n    \\\"temporal\\\" : {\\n      \\\"interval\\\" : [ [ \\\"2011-03-16T14:51:12Z\\\", \\\"2015-09-11T19:15:35Z\\\" ] ],\\n      \\\"trs\\\" : \\\"http://www.opengis.net/def/uom/ISO-8601/0/Gregorian\\\"\\n    }\\n  },\\n  \\\"itemType\\\" : \\\"feature\\\",\\n  \\\"crs\\\" : [ \\\"http://www.opengis.net/def/crs/OGC/1.3/CRS84\\\", \\\"http://www.opengis.net/def/crs/EPSG/0/3395\\\", \\\"http://www.opengis.net/def/crs/EPSG/0/3857\\\", \\\"http://www.opengis.net/def/crs/EPSG/0/4326\\\" ],\\n  \\\"storageCrs\\\" : \\\"http://www.opengis.net/def/crs/OGC/1.3/CRS84\\\",\\n  \\\"itemCount\\\" : 20\\n}\"\n    }\n  },\n  {\n    \"title\": \"fetch all CulturePnt features\",\n    \"value\": {\n      \"req\": {\n        \"method\": \"GET\",\n        \"url\": \"https://demo.ldproxy.net/daraa/collections/CulturePnt/items?limit=250\",\n        \"headers\": {\n          \"accept\": \"application/geo+json, application/problem+json;q=0.8\"\n        }\n      },\n      \"header\": {\n        \"content-crs\": \"<http://www.opengis.net/def/crs/OGC/1.3/CRS84>\",\n        \"content-disposition\": \"inline; filename=\\\"CulturePnt.json\\\"\",\n        \"content-encoding\": \"gzip\",\n        \"content-language\": \"en\",\n        \"content-length\": \"1045\",\n        \"content-type\": \"application/geo+json\",\n        \"date\": \"Thu, 25 May 2023 15:55:42 GMT\",\n        \"link\": \"<https://demo.ldproxy.net/daraa/collections/CulturePnt/items?limit=250&f=csv>; rel=\\\"alternate\\\"; title=\\\"This document as CSV\\\"; type=\\\"text/csv\\\", <https://demo.ldproxy.net/daraa/collections/CulturePnt/items?limit=250&f=fgb>; rel=\\\"alternate\\\"; title=\\\"This document as FlatGeobuf\\\"; type=\\\"application/flatgeobuf\\\", <https://demo.ldproxy.net/daraa/collections/CulturePnt/items?limit=250&f=html>; rel=\\\"alternate\\\"; title=\\\"This document as HTML\\\"; type=\\\"text/html\\\", <https://demo.ldproxy.net/daraa/collections/CulturePnt/items?limit=250&f=jsonfg>; rel=\\\"alternate\\\"; title=\\\"This document as JSON-FG\\\"; type=\\\"application/vnd.ogc.fg+json\\\", <https://demo.ldproxy.net/daraa/collections/CulturePnt/items?limit=250&f=jsonfgc>; rel=\\\"alternate\\\"; title=\\\"This document as JSON-FG (GeoJSON Compatibility Mode)\\\"; type=\\\"application/vnd.ogc.fg+json;compatibility=geojson\\\", <http://www.opengis.net/def/profile/ogc/0/rel-as-link>; rel=\\\"profile\\\"; title=\\\"Profile used in the response\\\", <https://demo.ldproxy.net/daraa/collections/CulturePnt/items?limit=250&f=json>; rel=\\\"self\\\"; title=\\\"This document\\\"; type=\\\"application/geo+json\\\"\",\n        \"vary\": \"Accept,Accept-Language,Accept-Encoding\",\n        \"x-request-id\": \"84f6e83e-8311-407f-9f98-93eb9e576b09\",\n        \"connection\": \"close\"\n      },\n      \"status\": 200,\n      \"text\": \"{\\\"type\\\":\\\"FeatureCollection\\\",\\\"numberReturned\\\":5,\\\"numberMatched\\\":5,\\\"timeStamp\\\":\\\"2023-05-25T15:55:42Z\\\",\\\"features\\\":[{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":1,\\\"geometry\\\":{\\\"type\\\":\\\"MultiPoint\\\",\\\"coordinates\\\":[[36.0964930,32.6020820]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"AL030\\\",\\\"ZI001_SDV\\\":\\\"2011-12-27T18:39:59Z\\\",\\\"UFI\\\":\\\"7ab54c93-b054-406f-9cf1-6921fd633277\\\",\\\"ZI005_FNA\\\":\\\"مقبرة البحارة\\\",\\\"FCSUBTYPE\\\":100092,\\\"ZI037_REL\\\":11,\\\"ZI006_MEM\\\":\\\"<OSM>{\\\\\\\"name:ar\\\\\\\":\\\\\\\"مقبرة البحارة\\\\\\\",\\\\\\\"name:en\\\\\\\":\\\\\\\"Al Bahara Cemetery\\\\\\\"}</OSM>\\\"}},{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":2,\\\"geometry\\\":{\\\"type\\\":\\\"MultiPoint\\\",\\\"coordinates\\\":[[36.1009200,32.6121330]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"AL130\\\",\\\"ZI001_SDV\\\":\\\"2011-12-26T20:55:27Z\\\",\\\"UFI\\\":\\\"65854536-9ffa-433e-b0c7-5779ae88d705\\\",\\\"ZI005_FNA\\\":\\\"ساحة الكرامة\\\",\\\"FCSUBTYPE\\\":100108,\\\"ZI006_MEM\\\":\\\"<OSM>{\\\\\\\"name:ar\\\\\\\":\\\\\\\"ساحة الكرامة\\\\\\\",\\\\\\\"name:en\\\\\\\":\\\\\\\"Sahet al karama\\\\\\\"}</OSM>\\\"}},{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":3,\\\"geometry\\\":{\\\"type\\\":\\\"MultiPoint\\\",\\\"coordinates\\\":[[36.1085460,32.6405080]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"BH075\\\",\\\"ZI001_SDV\\\":\\\"2013-06-16T23:47:41Z\\\",\\\"UFI\\\":\\\"f4dbf4b1-9522-4dcb-a15b-a2b1359f6ee0\\\",\\\"ZI005_FNA\\\":\\\"نافورة البانوراما\\\",\\\"FCSUBTYPE\\\":100303}},{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":4,\\\"geometry\\\":{\\\"type\\\":\\\"MultiPoint\\\",\\\"coordinates\\\":[[36.0992670,32.6125650]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"AK121\\\",\\\"ZI001_SDV\\\":\\\"2011-01-03T06:31:15Z\\\",\\\"UFI\\\":\\\"a68ec353-e572-4523-9425-8f37b4a4cda6\\\",\\\"ZI005_FNA\\\":\\\"مدرج درعا الأثري\\\",\\\"FCSUBTYPE\\\":100066}},{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":5,\\\"geometry\\\":{\\\"type\\\":\\\"MultiPoint\\\",\\\"coordinates\\\":[[35.9535000,32.5920730]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"AL012\\\",\\\"ZI001_SDV\\\":\\\"2012-03-27T11:53:13Z\\\",\\\"UFI\\\":\\\"122207e5-5b0a-4da0-9672-0c1012952a54\\\",\\\"ZI005_FNA\\\":\\\"Roman Graves\\\",\\\"FCSUBTYPE\\\":100082}}],\\\"links\\\":[{\\\"href\\\":\\\"https://demo.ldproxy.net/daraa/collections/CulturePnt/items?limit=250&f=json\\\",\\\"rel\\\":\\\"self\\\",\\\"type\\\":\\\"application/geo+json\\\",\\\"title\\\":\\\"This document\\\"},{\\\"href\\\":\\\"https://demo.ldproxy.net/daraa/collections/CulturePnt/items?limit=250&f=jsonfgc\\\",\\\"rel\\\":\\\"alternate\\\",\\\"type\\\":\\\"application/vnd.ogc.fg+json;compatibility=geojson\\\",\\\"title\\\":\\\"This document as JSON-FG (GeoJSON Compatibility Mode)\\\"},{\\\"href\\\":\\\"https://demo.ldproxy.net/daraa/collections/CulturePnt/items?limit=250&f=csv\\\",\\\"rel\\\":\\\"alternate\\\",\\\"type\\\":\\\"text/csv\\\",\\\"title\\\":\\\"This document as CSV\\\"},{\\\"href\\\":\\\"https://demo.ldproxy.net/daraa/collections/CulturePnt/items?limit=250&f=fgb\\\",\\\"rel\\\":\\\"alternate\\\",\\\"type\\\":\\\"application/flatgeobuf\\\",\\\"title\\\":\\\"This document as FlatGeobuf\\\"},{\\\"href\\\":\\\"https://demo.ldproxy.net/daraa/collections/CulturePnt/items?limit=250&f=html\\\",\\\"rel\\\":\\\"alternate\\\",\\\"type\\\":\\\"text/html\\\",\\\"title\\\":\\\"This document as HTML\\\"},{\\\"href\\\":\\\"https://demo.ldproxy.net/daraa/collections/CulturePnt/items?limit=250&f=jsonfg\\\",\\\"rel\\\":\\\"alternate\\\",\\\"type\\\":\\\"application/vnd.ogc.fg+json\\\",\\\"title\\\":\\\"This document as JSON-FG\\\"},{\\\"href\\\":\\\"http://www.opengis.net/def/profile/ogc/0/rel-as-link\\\",\\\"rel\\\":\\\"profile\\\",\\\"title\\\":\\\"Profile used in the response\\\"}]}\"\n    }\n  },\n  {\n    \"title\": \"fetch all CulturePnt features\",\n    \"value\": {\n      \"req\": {\n        \"method\": \"GET\",\n        \"url\": \"https://demo.ldproxy.net/daraa/collections/CulturePnt/items?limit=250\",\n        \"headers\": {\n          \"accept\": \"application/geo+json, application/problem+json;q=0.8\"\n        }\n      },\n      \"header\": {\n        \"content-crs\": \"<http://www.opengis.net/def/crs/OGC/1.3/CRS84>\",\n        \"content-disposition\": \"inline; filename=\\\"CulturePnt.json\\\"\",\n        \"content-encoding\": \"gzip\",\n        \"content-language\": \"en\",\n        \"content-length\": \"1045\",\n        \"content-type\": \"application/geo+json\",\n        \"date\": \"Thu, 25 May 2023 15:55:42 GMT\",\n        \"link\": \"<https://demo.ldproxy.net/daraa/collections/CulturePnt/items?limit=250&f=csv>; rel=\\\"alternate\\\"; title=\\\"This document as CSV\\\"; type=\\\"text/csv\\\", <https://demo.ldproxy.net/daraa/collections/CulturePnt/items?limit=250&f=fgb>; rel=\\\"alternate\\\"; title=\\\"This document as FlatGeobuf\\\"; type=\\\"application/flatgeobuf\\\", <https://demo.ldproxy.net/daraa/collections/CulturePnt/items?limit=250&f=html>; rel=\\\"alternate\\\"; title=\\\"This document as HTML\\\"; type=\\\"text/html\\\", <https://demo.ldproxy.net/daraa/collections/CulturePnt/items?limit=250&f=jsonfg>; rel=\\\"alternate\\\"; title=\\\"This document as JSON-FG\\\"; type=\\\"application/vnd.ogc.fg+json\\\", <https://demo.ldproxy.net/daraa/collections/CulturePnt/items?limit=250&f=jsonfgc>; rel=\\\"alternate\\\"; title=\\\"This document as JSON-FG (GeoJSON Compatibility Mode)\\\"; type=\\\"application/vnd.ogc.fg+json;compatibility=geojson\\\", <http://www.opengis.net/def/profile/ogc/0/rel-as-link>; rel=\\\"profile\\\"; title=\\\"Profile used in the response\\\", <https://demo.ldproxy.net/daraa/collections/CulturePnt/items?limit=250&f=json>; rel=\\\"self\\\"; title=\\\"This document\\\"; type=\\\"application/geo+json\\\"\",\n        \"vary\": \"Accept,Accept-Language,Accept-Encoding\",\n        \"x-request-id\": \"35a70103-70bf-4561-8a60-864a3b5afea3\",\n        \"connection\": \"close\"\n      },\n      \"status\": 200,\n      \"text\": \"{\\\"type\\\":\\\"FeatureCollection\\\",\\\"numberReturned\\\":5,\\\"numberMatched\\\":5,\\\"timeStamp\\\":\\\"2023-05-25T15:55:42Z\\\",\\\"features\\\":[{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":1,\\\"geometry\\\":{\\\"type\\\":\\\"MultiPoint\\\",\\\"coordinates\\\":[[36.0964930,32.6020820]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"AL030\\\",\\\"ZI001_SDV\\\":\\\"2011-12-27T18:39:59Z\\\",\\\"UFI\\\":\\\"7ab54c93-b054-406f-9cf1-6921fd633277\\\",\\\"ZI005_FNA\\\":\\\"مقبرة البحارة\\\",\\\"FCSUBTYPE\\\":100092,\\\"ZI037_REL\\\":11,\\\"ZI006_MEM\\\":\\\"<OSM>{\\\\\\\"name:ar\\\\\\\":\\\\\\\"مقبرة البحارة\\\\\\\",\\\\\\\"name:en\\\\\\\":\\\\\\\"Al Bahara Cemetery\\\\\\\"}</OSM>\\\"}},{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":2,\\\"geometry\\\":{\\\"type\\\":\\\"MultiPoint\\\",\\\"coordinates\\\":[[36.1009200,32.6121330]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"AL130\\\",\\\"ZI001_SDV\\\":\\\"2011-12-26T20:55:27Z\\\",\\\"UFI\\\":\\\"65854536-9ffa-433e-b0c7-5779ae88d705\\\",\\\"ZI005_FNA\\\":\\\"ساحة الكرامة\\\",\\\"FCSUBTYPE\\\":100108,\\\"ZI006_MEM\\\":\\\"<OSM>{\\\\\\\"name:ar\\\\\\\":\\\\\\\"ساحة الكرامة\\\\\\\",\\\\\\\"name:en\\\\\\\":\\\\\\\"Sahet al karama\\\\\\\"}</OSM>\\\"}},{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":3,\\\"geometry\\\":{\\\"type\\\":\\\"MultiPoint\\\",\\\"coordinates\\\":[[36.1085460,32.6405080]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"BH075\\\",\\\"ZI001_SDV\\\":\\\"2013-06-16T23:47:41Z\\\",\\\"UFI\\\":\\\"f4dbf4b1-9522-4dcb-a15b-a2b1359f6ee0\\\",\\\"ZI005_FNA\\\":\\\"نافورة البانوراما\\\",\\\"FCSUBTYPE\\\":100303}},{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":4,\\\"geometry\\\":{\\\"type\\\":\\\"MultiPoint\\\",\\\"coordinates\\\":[[36.0992670,32.6125650]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"AK121\\\",\\\"ZI001_SDV\\\":\\\"2011-01-03T06:31:15Z\\\",\\\"UFI\\\":\\\"a68ec353-e572-4523-9425-8f37b4a4cda6\\\",\\\"ZI005_FNA\\\":\\\"مدرج درعا الأثري\\\",\\\"FCSUBTYPE\\\":100066}},{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":5,\\\"geometry\\\":{\\\"type\\\":\\\"MultiPoint\\\",\\\"coordinates\\\":[[35.9535000,32.5920730]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"AL012\\\",\\\"ZI001_SDV\\\":\\\"2012-03-27T11:53:13Z\\\",\\\"UFI\\\":\\\"122207e5-5b0a-4da0-9672-0c1012952a54\\\",\\\"ZI005_FNA\\\":\\\"Roman Graves\\\",\\\"FCSUBTYPE\\\":100082}}],\\\"links\\\":[{\\\"href\\\":\\\"https://demo.ldproxy.net/daraa/collections/CulturePnt/items?limit=250&f=json\\\",\\\"rel\\\":\\\"self\\\",\\\"type\\\":\\\"application/geo+json\\\",\\\"title\\\":\\\"This document\\\"},{\\\"href\\\":\\\"https://demo.ldproxy.net/daraa/collections/CulturePnt/items?limit=250&f=jsonfgc\\\",\\\"rel\\\":\\\"alternate\\\",\\\"type\\\":\\\"application/vnd.ogc.fg+json;compatibility=geojson\\\",\\\"title\\\":\\\"This document as JSON-FG (GeoJSON Compatibility Mode)\\\"},{\\\"href\\\":\\\"https://demo.ldproxy.net/daraa/collections/CulturePnt/items?limit=250&f=csv\\\",\\\"rel\\\":\\\"alternate\\\",\\\"type\\\":\\\"text/csv\\\",\\\"title\\\":\\\"This document as CSV\\\"},{\\\"href\\\":\\\"https://demo.ldproxy.net/daraa/collections/CulturePnt/items?limit=250&f=fgb\\\",\\\"rel\\\":\\\"alternate\\\",\\\"type\\\":\\\"application/flatgeobuf\\\",\\\"title\\\":\\\"This document as FlatGeobuf\\\"},{\\\"href\\\":\\\"https://demo.ldproxy.net/daraa/collections/CulturePnt/items?limit=250&f=html\\\",\\\"rel\\\":\\\"alternate\\\",\\\"type\\\":\\\"text/html\\\",\\\"title\\\":\\\"This document as HTML\\\"},{\\\"href\\\":\\\"https://demo.ldproxy.net/daraa/collections/CulturePnt/items?limit=250&f=jsonfg\\\",\\\"rel\\\":\\\"alternate\\\",\\\"type\\\":\\\"application/vnd.ogc.fg+json\\\",\\\"title\\\":\\\"This document as JSON-FG\\\"},{\\\"href\\\":\\\"http://www.opengis.net/def/profile/ogc/0/rel-as-link\\\",\\\"rel\\\":\\\"profile\\\",\\\"title\\\":\\\"Profile used in the response\\\"}]}\"\n    }\n  },\n  {\n    \"title\": \"fetch all CulturePnt features\",\n    \"value\": {\n      \"req\": {\n        \"method\": \"GET\",\n        \"url\": \"https://demo.ldproxy.net/daraa/collections/CulturePnt/items?limit=250\",\n        \"headers\": {\n          \"accept\": \"application/geo+json, application/problem+json;q=0.8\"\n        }\n      },\n      \"header\": {\n        \"content-crs\": \"<http://www.opengis.net/def/crs/OGC/1.3/CRS84>\",\n        \"content-disposition\": \"inline; filename=\\\"CulturePnt.json\\\"\",\n        \"content-encoding\": \"gzip\",\n        \"content-language\": \"en\",\n        \"content-length\": \"1045\",\n        \"content-type\": \"application/geo+json\",\n        \"date\": \"Thu, 25 May 2023 15:55:42 GMT\",\n        \"link\": \"<https://demo.ldproxy.net/daraa/collections/CulturePnt/items?limit=250&f=csv>; rel=\\\"alternate\\\"; title=\\\"This document as CSV\\\"; type=\\\"text/csv\\\", <https://demo.ldproxy.net/daraa/collections/CulturePnt/items?limit=250&f=fgb>; rel=\\\"alternate\\\"; title=\\\"This document as FlatGeobuf\\\"; type=\\\"application/flatgeobuf\\\", <https://demo.ldproxy.net/daraa/collections/CulturePnt/items?limit=250&f=html>; rel=\\\"alternate\\\"; title=\\\"This document as HTML\\\"; type=\\\"text/html\\\", <https://demo.ldproxy.net/daraa/collections/CulturePnt/items?limit=250&f=jsonfg>; rel=\\\"alternate\\\"; title=\\\"This document as JSON-FG\\\"; type=\\\"application/vnd.ogc.fg+json\\\", <https://demo.ldproxy.net/daraa/collections/CulturePnt/items?limit=250&f=jsonfgc>; rel=\\\"alternate\\\"; title=\\\"This document as JSON-FG (GeoJSON Compatibility Mode)\\\"; type=\\\"application/vnd.ogc.fg+json;compatibility=geojson\\\", <http://www.opengis.net/def/profile/ogc/0/rel-as-link>; rel=\\\"profile\\\"; title=\\\"Profile used in the response\\\", <https://demo.ldproxy.net/daraa/collections/CulturePnt/items?limit=250&f=json>; rel=\\\"self\\\"; title=\\\"This document\\\"; type=\\\"application/geo+json\\\"\",\n        \"vary\": \"Accept,Accept-Language,Accept-Encoding\",\n        \"x-request-id\": \"385775aa-b78c-4428-aa06-562fceecda41\",\n        \"connection\": \"close\"\n      },\n      \"status\": 200,\n      \"text\": \"{\\\"type\\\":\\\"FeatureCollection\\\",\\\"numberReturned\\\":5,\\\"numberMatched\\\":5,\\\"timeStamp\\\":\\\"2023-05-25T15:55:42Z\\\",\\\"features\\\":[{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":1,\\\"geometry\\\":{\\\"type\\\":\\\"MultiPoint\\\",\\\"coordinates\\\":[[36.0964930,32.6020820]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"AL030\\\",\\\"ZI001_SDV\\\":\\\"2011-12-27T18:39:59Z\\\",\\\"UFI\\\":\\\"7ab54c93-b054-406f-9cf1-6921fd633277\\\",\\\"ZI005_FNA\\\":\\\"مقبرة البحارة\\\",\\\"FCSUBTYPE\\\":100092,\\\"ZI037_REL\\\":11,\\\"ZI006_MEM\\\":\\\"<OSM>{\\\\\\\"name:ar\\\\\\\":\\\\\\\"مقبرة البحارة\\\\\\\",\\\\\\\"name:en\\\\\\\":\\\\\\\"Al Bahara Cemetery\\\\\\\"}</OSM>\\\"}},{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":2,\\\"geometry\\\":{\\\"type\\\":\\\"MultiPoint\\\",\\\"coordinates\\\":[[36.1009200,32.6121330]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"AL130\\\",\\\"ZI001_SDV\\\":\\\"2011-12-26T20:55:27Z\\\",\\\"UFI\\\":\\\"65854536-9ffa-433e-b0c7-5779ae88d705\\\",\\\"ZI005_FNA\\\":\\\"ساحة الكرامة\\\",\\\"FCSUBTYPE\\\":100108,\\\"ZI006_MEM\\\":\\\"<OSM>{\\\\\\\"name:ar\\\\\\\":\\\\\\\"ساحة الكرامة\\\\\\\",\\\\\\\"name:en\\\\\\\":\\\\\\\"Sahet al karama\\\\\\\"}</OSM>\\\"}},{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":3,\\\"geometry\\\":{\\\"type\\\":\\\"MultiPoint\\\",\\\"coordinates\\\":[[36.1085460,32.6405080]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"BH075\\\",\\\"ZI001_SDV\\\":\\\"2013-06-16T23:47:41Z\\\",\\\"UFI\\\":\\\"f4dbf4b1-9522-4dcb-a15b-a2b1359f6ee0\\\",\\\"ZI005_FNA\\\":\\\"نافورة البانوراما\\\",\\\"FCSUBTYPE\\\":100303}},{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":4,\\\"geometry\\\":{\\\"type\\\":\\\"MultiPoint\\\",\\\"coordinates\\\":[[36.0992670,32.6125650]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"AK121\\\",\\\"ZI001_SDV\\\":\\\"2011-01-03T06:31:15Z\\\",\\\"UFI\\\":\\\"a68ec353-e572-4523-9425-8f37b4a4cda6\\\",\\\"ZI005_FNA\\\":\\\"مدرج درعا الأثري\\\",\\\"FCSUBTYPE\\\":100066}},{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":5,\\\"geometry\\\":{\\\"type\\\":\\\"MultiPoint\\\",\\\"coordinates\\\":[[35.9535000,32.5920730]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"AL012\\\",\\\"ZI001_SDV\\\":\\\"2012-03-27T11:53:13Z\\\",\\\"UFI\\\":\\\"122207e5-5b0a-4da0-9672-0c1012952a54\\\",\\\"ZI005_FNA\\\":\\\"Roman Graves\\\",\\\"FCSUBTYPE\\\":100082}}],\\\"links\\\":[{\\\"href\\\":\\\"https://demo.ldproxy.net/daraa/collections/CulturePnt/items?limit=250&f=json\\\",\\\"rel\\\":\\\"self\\\",\\\"type\\\":\\\"application/geo+json\\\",\\\"title\\\":\\\"This document\\\"},{\\\"href\\\":\\\"https://demo.ldproxy.net/daraa/collections/CulturePnt/items?limit=250&f=jsonfgc\\\",\\\"rel\\\":\\\"alternate\\\",\\\"type\\\":\\\"application/vnd.ogc.fg+json;compatibility=geojson\\\",\\\"title\\\":\\\"This document as JSON-FG (GeoJSON Compatibility Mode)\\\"},{\\\"href\\\":\\\"https://demo.ldproxy.net/daraa/collections/CulturePnt/items?limit=250&f=csv\\\",\\\"rel\\\":\\\"alternate\\\",\\\"type\\\":\\\"text/csv\\\",\\\"title\\\":\\\"This document as CSV\\\"},{\\\"href\\\":\\\"https://demo.ldproxy.net/daraa/collections/CulturePnt/items?limit=250&f=fgb\\\",\\\"rel\\\":\\\"alternate\\\",\\\"type\\\":\\\"application/flatgeobuf\\\",\\\"title\\\":\\\"This document as FlatGeobuf\\\"},{\\\"href\\\":\\\"https://demo.ldproxy.net/daraa/collections/CulturePnt/items?limit=250&f=html\\\",\\\"rel\\\":\\\"alternate\\\",\\\"type\\\":\\\"text/html\\\",\\\"title\\\":\\\"This document as HTML\\\"},{\\\"href\\\":\\\"https://demo.ldproxy.net/daraa/collections/CulturePnt/items?limit=250&f=jsonfg\\\",\\\"rel\\\":\\\"alternate\\\",\\\"type\\\":\\\"application/vnd.ogc.fg+json\\\",\\\"title\\\":\\\"This document as JSON-FG\\\"},{\\\"href\\\":\\\"http://www.opengis.net/def/profile/ogc/0/rel-as-link\\\",\\\"rel\\\":\\\"profile\\\",\\\"title\\\":\\\"Profile used in the response\\\"}]}\"\n    }\n  },\n  {\n    \"title\": \"fetch all CulturePnt features\",\n    \"value\": {\n      \"req\": {\n        \"method\": \"GET\",\n        \"url\": \"https://demo.ldproxy.net/daraa/collections/CulturePnt/items?limit=250\",\n        \"headers\": {\n          \"accept\": \"application/geo+json, application/problem+json;q=0.8\"\n        }\n      },\n      \"header\": {\n        \"content-crs\": \"<http://www.opengis.net/def/crs/OGC/1.3/CRS84>\",\n        \"content-disposition\": \"inline; filename=\\\"CulturePnt.json\\\"\",\n        \"content-encoding\": \"gzip\",\n        \"content-language\": \"en\",\n        \"content-length\": \"1045\",\n        \"content-type\": \"application/geo+json\",\n        \"date\": \"Thu, 25 May 2023 15:55:42 GMT\",\n        \"link\": \"<https://demo.ldproxy.net/daraa/collections/CulturePnt/items?limit=250&f=csv>; rel=\\\"alternate\\\"; title=\\\"This document as CSV\\\"; type=\\\"text/csv\\\", <https://demo.ldproxy.net/daraa/collections/CulturePnt/items?limit=250&f=fgb>; rel=\\\"alternate\\\"; title=\\\"This document as FlatGeobuf\\\"; type=\\\"application/flatgeobuf\\\", <https://demo.ldproxy.net/daraa/collections/CulturePnt/items?limit=250&f=html>; rel=\\\"alternate\\\"; title=\\\"This document as HTML\\\"; type=\\\"text/html\\\", <https://demo.ldproxy.net/daraa/collections/CulturePnt/items?limit=250&f=jsonfg>; rel=\\\"alternate\\\"; title=\\\"This document as JSON-FG\\\"; type=\\\"application/vnd.ogc.fg+json\\\", <https://demo.ldproxy.net/daraa/collections/CulturePnt/items?limit=250&f=jsonfgc>; rel=\\\"alternate\\\"; title=\\\"This document as JSON-FG (GeoJSON Compatibility Mode)\\\"; type=\\\"application/vnd.ogc.fg+json;compatibility=geojson\\\", <http://www.opengis.net/def/profile/ogc/0/rel-as-link>; rel=\\\"profile\\\"; title=\\\"Profile used in the response\\\", <https://demo.ldproxy.net/daraa/collections/CulturePnt/items?limit=250&f=json>; rel=\\\"self\\\"; title=\\\"This document\\\"; type=\\\"application/geo+json\\\"\",\n        \"vary\": \"Accept,Accept-Language,Accept-Encoding\",\n        \"x-request-id\": \"9a9ef262-8acb-4cfe-ba56-a165046e019d\",\n        \"connection\": \"close\"\n      },\n      \"status\": 200,\n      \"text\": \"{\\\"type\\\":\\\"FeatureCollection\\\",\\\"numberReturned\\\":5,\\\"numberMatched\\\":5,\\\"timeStamp\\\":\\\"2023-05-25T15:55:42Z\\\",\\\"features\\\":[{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":1,\\\"geometry\\\":{\\\"type\\\":\\\"MultiPoint\\\",\\\"coordinates\\\":[[36.0964930,32.6020820]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"AL030\\\",\\\"ZI001_SDV\\\":\\\"2011-12-27T18:39:59Z\\\",\\\"UFI\\\":\\\"7ab54c93-b054-406f-9cf1-6921fd633277\\\",\\\"ZI005_FNA\\\":\\\"مقبرة البحارة\\\",\\\"FCSUBTYPE\\\":100092,\\\"ZI037_REL\\\":11,\\\"ZI006_MEM\\\":\\\"<OSM>{\\\\\\\"name:ar\\\\\\\":\\\\\\\"مقبرة البحارة\\\\\\\",\\\\\\\"name:en\\\\\\\":\\\\\\\"Al Bahara Cemetery\\\\\\\"}</OSM>\\\"}},{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":2,\\\"geometry\\\":{\\\"type\\\":\\\"MultiPoint\\\",\\\"coordinates\\\":[[36.1009200,32.6121330]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"AL130\\\",\\\"ZI001_SDV\\\":\\\"2011-12-26T20:55:27Z\\\",\\\"UFI\\\":\\\"65854536-9ffa-433e-b0c7-5779ae88d705\\\",\\\"ZI005_FNA\\\":\\\"ساحة الكرامة\\\",\\\"FCSUBTYPE\\\":100108,\\\"ZI006_MEM\\\":\\\"<OSM>{\\\\\\\"name:ar\\\\\\\":\\\\\\\"ساحة الكرامة\\\\\\\",\\\\\\\"name:en\\\\\\\":\\\\\\\"Sahet al karama\\\\\\\"}</OSM>\\\"}},{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":3,\\\"geometry\\\":{\\\"type\\\":\\\"MultiPoint\\\",\\\"coordinates\\\":[[36.1085460,32.6405080]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"BH075\\\",\\\"ZI001_SDV\\\":\\\"2013-06-16T23:47:41Z\\\",\\\"UFI\\\":\\\"f4dbf4b1-9522-4dcb-a15b-a2b1359f6ee0\\\",\\\"ZI005_FNA\\\":\\\"نافورة البانوراما\\\",\\\"FCSUBTYPE\\\":100303}},{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":4,\\\"geometry\\\":{\\\"type\\\":\\\"MultiPoint\\\",\\\"coordinates\\\":[[36.0992670,32.6125650]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"AK121\\\",\\\"ZI001_SDV\\\":\\\"2011-01-03T06:31:15Z\\\",\\\"UFI\\\":\\\"a68ec353-e572-4523-9425-8f37b4a4cda6\\\",\\\"ZI005_FNA\\\":\\\"مدرج درعا الأثري\\\",\\\"FCSUBTYPE\\\":100066}},{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":5,\\\"geometry\\\":{\\\"type\\\":\\\"MultiPoint\\\",\\\"coordinates\\\":[[35.9535000,32.5920730]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"AL012\\\",\\\"ZI001_SDV\\\":\\\"2012-03-27T11:53:13Z\\\",\\\"UFI\\\":\\\"122207e5-5b0a-4da0-9672-0c1012952a54\\\",\\\"ZI005_FNA\\\":\\\"Roman Graves\\\",\\\"FCSUBTYPE\\\":100082}}],\\\"links\\\":[{\\\"href\\\":\\\"https://demo.ldproxy.net/daraa/collections/CulturePnt/items?limit=250&f=json\\\",\\\"rel\\\":\\\"self\\\",\\\"type\\\":\\\"application/geo+json\\\",\\\"title\\\":\\\"This document\\\"},{\\\"href\\\":\\\"https://demo.ldproxy.net/daraa/collections/CulturePnt/items?limit=250&f=jsonfgc\\\",\\\"rel\\\":\\\"alternate\\\",\\\"type\\\":\\\"application/vnd.ogc.fg+json;compatibility=geojson\\\",\\\"title\\\":\\\"This document as JSON-FG (GeoJSON Compatibility Mode)\\\"},{\\\"href\\\":\\\"https://demo.ldproxy.net/daraa/collections/CulturePnt/items?limit=250&f=csv\\\",\\\"rel\\\":\\\"alternate\\\",\\\"type\\\":\\\"text/csv\\\",\\\"title\\\":\\\"This document as CSV\\\"},{\\\"href\\\":\\\"https://demo.ldproxy.net/daraa/collections/CulturePnt/items?limit=250&f=fgb\\\",\\\"rel\\\":\\\"alternate\\\",\\\"type\\\":\\\"application/flatgeobuf\\\",\\\"title\\\":\\\"This document as FlatGeobuf\\\"},{\\\"href\\\":\\\"https://demo.ldproxy.net/daraa/collections/CulturePnt/items?limit=250&f=html\\\",\\\"rel\\\":\\\"alternate\\\",\\\"type\\\":\\\"text/html\\\",\\\"title\\\":\\\"This document as HTML\\\"},{\\\"href\\\":\\\"https://demo.ldproxy.net/daraa/collections/CulturePnt/items?limit=250&f=jsonfg\\\",\\\"rel\\\":\\\"alternate\\\",\\\"type\\\":\\\"application/vnd.ogc.fg+json\\\",\\\"title\\\":\\\"This document as JSON-FG\\\"},{\\\"href\\\":\\\"http://www.opengis.net/def/profile/ogc/0/rel-as-link\\\",\\\"rel\\\":\\\"profile\\\",\\\"title\\\":\\\"Profile used in the response\\\"}]}\"\n    }\n  },\n  {\n    \"title\": \"fetch all CulturePnt features\",\n    \"value\": {\n      \"req\": {\n        \"method\": \"GET\",\n        \"url\": \"https://demo.ldproxy.net/daraa/collections/CulturePnt/items?limit=250\",\n        \"headers\": {\n          \"accept\": \"application/geo+json, application/problem+json;q=0.8\"\n        }\n      },\n      \"header\": {\n        \"content-crs\": \"<http://www.opengis.net/def/crs/OGC/1.3/CRS84>\",\n        \"content-disposition\": \"inline; filename=\\\"CulturePnt.json\\\"\",\n        \"content-encoding\": \"gzip\",\n        \"content-language\": \"en\",\n        \"content-length\": \"1045\",\n        \"content-type\": \"application/geo+json\",\n        \"date\": \"Thu, 25 May 2023 15:55:42 GMT\",\n        \"link\": \"<https://demo.ldproxy.net/daraa/collections/CulturePnt/items?limit=250&f=csv>; rel=\\\"alternate\\\"; title=\\\"This document as CSV\\\"; type=\\\"text/csv\\\", <https://demo.ldproxy.net/daraa/collections/CulturePnt/items?limit=250&f=fgb>; rel=\\\"alternate\\\"; title=\\\"This document as FlatGeobuf\\\"; type=\\\"application/flatgeobuf\\\", <https://demo.ldproxy.net/daraa/collections/CulturePnt/items?limit=250&f=html>; rel=\\\"alternate\\\"; title=\\\"This document as HTML\\\"; type=\\\"text/html\\\", <https://demo.ldproxy.net/daraa/collections/CulturePnt/items?limit=250&f=jsonfg>; rel=\\\"alternate\\\"; title=\\\"This document as JSON-FG\\\"; type=\\\"application/vnd.ogc.fg+json\\\", <https://demo.ldproxy.net/daraa/collections/CulturePnt/items?limit=250&f=jsonfgc>; rel=\\\"alternate\\\"; title=\\\"This document as JSON-FG (GeoJSON Compatibility Mode)\\\"; type=\\\"application/vnd.ogc.fg+json;compatibility=geojson\\\", <http://www.opengis.net/def/profile/ogc/0/rel-as-link>; rel=\\\"profile\\\"; title=\\\"Profile used in the response\\\", <https://demo.ldproxy.net/daraa/collections/CulturePnt/items?limit=250&f=json>; rel=\\\"self\\\"; title=\\\"This document\\\"; type=\\\"application/geo+json\\\"\",\n        \"vary\": \"Accept,Accept-Language,Accept-Encoding\",\n        \"x-request-id\": \"1e5fda23-40b6-44e1-8f70-1ba877cc2b95\",\n        \"connection\": \"close\"\n      },\n      \"status\": 200,\n      \"text\": \"{\\\"type\\\":\\\"FeatureCollection\\\",\\\"numberReturned\\\":5,\\\"numberMatched\\\":5,\\\"timeStamp\\\":\\\"2023-05-25T15:55:42Z\\\",\\\"features\\\":[{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":1,\\\"geometry\\\":{\\\"type\\\":\\\"MultiPoint\\\",\\\"coordinates\\\":[[36.0964930,32.6020820]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"AL030\\\",\\\"ZI001_SDV\\\":\\\"2011-12-27T18:39:59Z\\\",\\\"UFI\\\":\\\"7ab54c93-b054-406f-9cf1-6921fd633277\\\",\\\"ZI005_FNA\\\":\\\"مقبرة البحارة\\\",\\\"FCSUBTYPE\\\":100092,\\\"ZI037_REL\\\":11,\\\"ZI006_MEM\\\":\\\"<OSM>{\\\\\\\"name:ar\\\\\\\":\\\\\\\"مقبرة البحارة\\\\\\\",\\\\\\\"name:en\\\\\\\":\\\\\\\"Al Bahara Cemetery\\\\\\\"}</OSM>\\\"}},{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":2,\\\"geometry\\\":{\\\"type\\\":\\\"MultiPoint\\\",\\\"coordinates\\\":[[36.1009200,32.6121330]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"AL130\\\",\\\"ZI001_SDV\\\":\\\"2011-12-26T20:55:27Z\\\",\\\"UFI\\\":\\\"65854536-9ffa-433e-b0c7-5779ae88d705\\\",\\\"ZI005_FNA\\\":\\\"ساحة الكرامة\\\",\\\"FCSUBTYPE\\\":100108,\\\"ZI006_MEM\\\":\\\"<OSM>{\\\\\\\"name:ar\\\\\\\":\\\\\\\"ساحة الكرامة\\\\\\\",\\\\\\\"name:en\\\\\\\":\\\\\\\"Sahet al karama\\\\\\\"}</OSM>\\\"}},{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":3,\\\"geometry\\\":{\\\"type\\\":\\\"MultiPoint\\\",\\\"coordinates\\\":[[36.1085460,32.6405080]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"BH075\\\",\\\"ZI001_SDV\\\":\\\"2013-06-16T23:47:41Z\\\",\\\"UFI\\\":\\\"f4dbf4b1-9522-4dcb-a15b-a2b1359f6ee0\\\",\\\"ZI005_FNA\\\":\\\"نافورة البانوراما\\\",\\\"FCSUBTYPE\\\":100303}},{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":4,\\\"geometry\\\":{\\\"type\\\":\\\"MultiPoint\\\",\\\"coordinates\\\":[[36.0992670,32.6125650]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"AK121\\\",\\\"ZI001_SDV\\\":\\\"2011-01-03T06:31:15Z\\\",\\\"UFI\\\":\\\"a68ec353-e572-4523-9425-8f37b4a4cda6\\\",\\\"ZI005_FNA\\\":\\\"مدرج درعا الأثري\\\",\\\"FCSUBTYPE\\\":100066}},{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":5,\\\"geometry\\\":{\\\"type\\\":\\\"MultiPoint\\\",\\\"coordinates\\\":[[35.9535000,32.5920730]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"AL012\\\",\\\"ZI001_SDV\\\":\\\"2012-03-27T11:53:13Z\\\",\\\"UFI\\\":\\\"122207e5-5b0a-4da0-9672-0c1012952a54\\\",\\\"ZI005_FNA\\\":\\\"Roman Graves\\\",\\\"FCSUBTYPE\\\":100082}}],\\\"links\\\":[{\\\"href\\\":\\\"https://demo.ldproxy.net/daraa/collections/CulturePnt/items?limit=250&f=json\\\",\\\"rel\\\":\\\"self\\\",\\\"type\\\":\\\"application/geo+json\\\",\\\"title\\\":\\\"This document\\\"},{\\\"href\\\":\\\"https://demo.ldproxy.net/daraa/collections/CulturePnt/items?limit=250&f=jsonfgc\\\",\\\"rel\\\":\\\"alternate\\\",\\\"type\\\":\\\"application/vnd.ogc.fg+json;compatibility=geojson\\\",\\\"title\\\":\\\"This document as JSON-FG (GeoJSON Compatibility Mode)\\\"},{\\\"href\\\":\\\"https://demo.ldproxy.net/daraa/collections/CulturePnt/items?limit=250&f=csv\\\",\\\"rel\\\":\\\"alternate\\\",\\\"type\\\":\\\"text/csv\\\",\\\"title\\\":\\\"This document as CSV\\\"},{\\\"href\\\":\\\"https://demo.ldproxy.net/daraa/collections/CulturePnt/items?limit=250&f=fgb\\\",\\\"rel\\\":\\\"alternate\\\",\\\"type\\\":\\\"application/flatgeobuf\\\",\\\"title\\\":\\\"This document as FlatGeobuf\\\"},{\\\"href\\\":\\\"https://demo.ldproxy.net/daraa/collections/CulturePnt/items?limit=250&f=html\\\",\\\"rel\\\":\\\"alternate\\\",\\\"type\\\":\\\"text/html\\\",\\\"title\\\":\\\"This document as HTML\\\"},{\\\"href\\\":\\\"https://demo.ldproxy.net/daraa/collections/CulturePnt/items?limit=250&f=jsonfg\\\",\\\"rel\\\":\\\"alternate\\\",\\\"type\\\":\\\"application/vnd.ogc.fg+json\\\",\\\"title\\\":\\\"This document as JSON-FG\\\"},{\\\"href\\\":\\\"http://www.opengis.net/def/profile/ogc/0/rel-as-link\\\",\\\"rel\\\":\\\"profile\\\",\\\"title\\\":\\\"Profile used in the response\\\"}]}\"\n    }\n  }\n]",
          "code": "const hooks = getHooks();\nthis.test.parent.project = { ...options };\nfor (let i = 0; i < hooks.length; i++) {\n  addContext(this, hooks[i]);\n}\nthis.test.originalTitle = \"Setup\";\nthis.test.options = { empty: hooks.length === 0 };",
          "err": {},
          "uuid": "050763e5-799f-444f-ac17-bb4a0a14d01b",
          "parentUUID": "5da69ab0-b2ff-4462-b5f8-e65b074254d4",
          "isHook": true,
          "skipped": false,
          "options": {
            "empty": false
          }
        }
      ],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "1f17dfca-9cf9-4390-89c9-28e6645db535",
          "title": "between",
          "fullFile": "C:\\Users\\p.zahnen\\Documents\\Projekte\\demo-tests\\filter-queries\\spec\\between.js",
          "file": "\\spec\\between.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "filter=ZI037_REL BeTweeN ZI037_REL AnD ZI037_REL",
              "fullTitle": "between filter=ZI037_REL BeTweeN ZI037_REL AnD ZI037_REL",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Data is selected using filter\n        api\n          .get(\"/daraa/collections/CulturePnt/items\")\n          .query({ limit: LIMIT, ...test.query })\n          // Success and returns GeoJSON\n          .expect(200)\n          .expect(CONTENT_TYPE, GEO_JSON)\n          // returns correct amount of features\n          .expect((res) => {\n            const expected = vars\n              .load(CULTURE_PNT_FEATURES)\n              .features.filter(test.filter);\n            res.body.should.have\n              .property(\"numberReturned\")\n              .which.equals(expected.length);\n            //returns the expected features:\n            const actual = res.body.features;\n            for (let i = 0; i < actual.length; i++) {\n              actual[i].should.have.property(\"id\").which.equals(expected[i].id);\n              actual[i].should.have\n                .property(\"type\")\n                .which.equals(expected[i].type);\n              actual[i].should.have\n                .property(\"geometry\")\n                .which.deep.equals(expected[i].geometry);\n              actual[i].should.have\n                .property(\"properties\")\n                .which.deep.equals(expected[i].properties);\n            }\n          })",
              "err": {},
              "uuid": "6fc877d4-d297-4e60-9a51-a5a13024388a",
              "parentUUID": null,
              "isHook": false,
              "skipped": true,
              "options": {}
            },
            {
              "title": "filter=ZI037_REL not BeTweeN ZI037_REL AnD ZI037_REL",
              "fullTitle": "between filter=ZI037_REL not BeTweeN ZI037_REL AnD ZI037_REL",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Data is selected using filter\n        api\n          .get(\"/daraa/collections/CulturePnt/items\")\n          .query({ limit: LIMIT, ...test.query })\n          // Success and returns GeoJSON\n          .expect(200)\n          .expect(CONTENT_TYPE, GEO_JSON)\n          // returns correct amount of features\n          .expect((res) => {\n            const expected = vars\n              .load(CULTURE_PNT_FEATURES)\n              .features.filter(test.filter);\n            res.body.should.have\n              .property(\"numberReturned\")\n              .which.equals(expected.length);\n            //returns the expected features:\n            const actual = res.body.features;\n            for (let i = 0; i < actual.length; i++) {\n              actual[i].should.have.property(\"id\").which.equals(expected[i].id);\n              actual[i].should.have\n                .property(\"type\")\n                .which.equals(expected[i].type);\n              actual[i].should.have\n                .property(\"geometry\")\n                .which.deep.equals(expected[i].geometry);\n              actual[i].should.have\n                .property(\"properties\")\n                .which.deep.equals(expected[i].properties);\n            }\n          })",
              "err": {},
              "uuid": "9159f235-c1b8-4d09-9e79-126d95d99ffe",
              "parentUUID": null,
              "isHook": false,
              "skipped": true,
              "options": {}
            },
            {
              "title": "filter=ZI037_REL BeTweeN 0 AnD 10",
              "fullTitle": "between filter=ZI037_REL BeTweeN 0 AnD 10",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Data is selected using filter\n        api\n          .get(\"/daraa/collections/CulturePnt/items\")\n          .query({ limit: LIMIT, ...test.query })\n          // Success and returns GeoJSON\n          .expect(200)\n          .expect(CONTENT_TYPE, GEO_JSON)\n          // returns correct amount of features\n          .expect((res) => {\n            const expected = vars\n              .load(CULTURE_PNT_FEATURES)\n              .features.filter(test.filter);\n            res.body.should.have\n              .property(\"numberReturned\")\n              .which.equals(expected.length);\n            //returns the expected features:\n            const actual = res.body.features;\n            for (let i = 0; i < actual.length; i++) {\n              actual[i].should.have.property(\"id\").which.equals(expected[i].id);\n              actual[i].should.have\n                .property(\"type\")\n                .which.equals(expected[i].type);\n              actual[i].should.have\n                .property(\"geometry\")\n                .which.deep.equals(expected[i].geometry);\n              actual[i].should.have\n                .property(\"properties\")\n                .which.deep.equals(expected[i].properties);\n            }\n          })",
              "err": {},
              "uuid": "0716dc79-d3ff-42a8-bdbf-e9bc7385691d",
              "parentUUID": null,
              "isHook": false,
              "skipped": true,
              "options": {}
            },
            {
              "title": "filter=ZI037_REL BeTweeN 0 AnD 11",
              "fullTitle": "between filter=ZI037_REL BeTweeN 0 AnD 11",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Data is selected using filter\n        api\n          .get(\"/daraa/collections/CulturePnt/items\")\n          .query({ limit: LIMIT, ...test.query })\n          // Success and returns GeoJSON\n          .expect(200)\n          .expect(CONTENT_TYPE, GEO_JSON)\n          // returns correct amount of features\n          .expect((res) => {\n            const expected = vars\n              .load(CULTURE_PNT_FEATURES)\n              .features.filter(test.filter);\n            res.body.should.have\n              .property(\"numberReturned\")\n              .which.equals(expected.length);\n            //returns the expected features:\n            const actual = res.body.features;\n            for (let i = 0; i < actual.length; i++) {\n              actual[i].should.have.property(\"id\").which.equals(expected[i].id);\n              actual[i].should.have\n                .property(\"type\")\n                .which.equals(expected[i].type);\n              actual[i].should.have\n                .property(\"geometry\")\n                .which.deep.equals(expected[i].geometry);\n              actual[i].should.have\n                .property(\"properties\")\n                .which.deep.equals(expected[i].properties);\n            }\n          })",
              "err": {},
              "uuid": "5826329e-3196-4ef7-8efa-e185fb9b14a6",
              "parentUUID": null,
              "isHook": false,
              "skipped": true,
              "options": {}
            },
            {
              "title": "filter=ZI037_REL NoT BeTweeN 0 AnD 10",
              "fullTitle": "between filter=ZI037_REL NoT BeTweeN 0 AnD 10",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Data is selected using filter\n        api\n          .get(\"/daraa/collections/CulturePnt/items\")\n          .query({ limit: LIMIT, ...test.query })\n          // Success and returns GeoJSON\n          .expect(200)\n          .expect(CONTENT_TYPE, GEO_JSON)\n          // returns correct amount of features\n          .expect((res) => {\n            const expected = vars\n              .load(CULTURE_PNT_FEATURES)\n              .features.filter(test.filter);\n            res.body.should.have\n              .property(\"numberReturned\")\n              .which.equals(expected.length);\n            //returns the expected features:\n            const actual = res.body.features;\n            for (let i = 0; i < actual.length; i++) {\n              actual[i].should.have.property(\"id\").which.equals(expected[i].id);\n              actual[i].should.have\n                .property(\"type\")\n                .which.equals(expected[i].type);\n              actual[i].should.have\n                .property(\"geometry\")\n                .which.deep.equals(expected[i].geometry);\n              actual[i].should.have\n                .property(\"properties\")\n                .which.deep.equals(expected[i].properties);\n            }\n          })",
              "err": {},
              "uuid": "29e3599b-4047-4b4d-a30d-d5b34f571ec1",
              "parentUUID": null,
              "isHook": false,
              "skipped": true,
              "options": {}
            },
            {
              "title": "filter=ZI037_REL NoT BeTweeN 0 AnD 11",
              "fullTitle": "between filter=ZI037_REL NoT BeTweeN 0 AnD 11",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Data is selected using filter\n        api\n          .get(\"/daraa/collections/CulturePnt/items\")\n          .query({ limit: LIMIT, ...test.query })\n          // Success and returns GeoJSON\n          .expect(200)\n          .expect(CONTENT_TYPE, GEO_JSON)\n          // returns correct amount of features\n          .expect((res) => {\n            const expected = vars\n              .load(CULTURE_PNT_FEATURES)\n              .features.filter(test.filter);\n            res.body.should.have\n              .property(\"numberReturned\")\n              .which.equals(expected.length);\n            //returns the expected features:\n            const actual = res.body.features;\n            for (let i = 0; i < actual.length; i++) {\n              actual[i].should.have.property(\"id\").which.equals(expected[i].id);\n              actual[i].should.have\n                .property(\"type\")\n                .which.equals(expected[i].type);\n              actual[i].should.have\n                .property(\"geometry\")\n                .which.deep.equals(expected[i].geometry);\n              actual[i].should.have\n                .property(\"properties\")\n                .which.deep.equals(expected[i].properties);\n            }\n          })",
              "err": {},
              "uuid": "13e9f08c-8dd8-4511-9a48-91b1b8dbf448",
              "parentUUID": null,
              "isHook": false,
              "skipped": true,
              "options": {}
            },
            {
              "title": "filter=6 BeTweeN 0 AnD ZI037_REL",
              "fullTitle": "between filter=6 BeTweeN 0 AnD ZI037_REL",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Data is selected using filter\n        api\n          .get(\"/daraa/collections/CulturePnt/items\")\n          .query({ limit: LIMIT, ...test.query })\n          // Success and returns GeoJSON\n          .expect(200)\n          .expect(CONTENT_TYPE, GEO_JSON)\n          // returns correct amount of features\n          .expect((res) => {\n            const expected = vars\n              .load(CULTURE_PNT_FEATURES)\n              .features.filter(test.filter);\n            res.body.should.have\n              .property(\"numberReturned\")\n              .which.equals(expected.length);\n            //returns the expected features:\n            const actual = res.body.features;\n            for (let i = 0; i < actual.length; i++) {\n              actual[i].should.have.property(\"id\").which.equals(expected[i].id);\n              actual[i].should.have\n                .property(\"type\")\n                .which.equals(expected[i].type);\n              actual[i].should.have\n                .property(\"geometry\")\n                .which.deep.equals(expected[i].geometry);\n              actual[i].should.have\n                .property(\"properties\")\n                .which.deep.equals(expected[i].properties);\n            }\n          })",
              "err": {},
              "uuid": "bdb0c0b0-bb39-4d83-b447-7f1d3094326f",
              "parentUUID": null,
              "isHook": false,
              "skipped": true,
              "options": {}
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "6fc877d4-d297-4e60-9a51-a5a13024388a",
            "9159f235-c1b8-4d09-9e79-126d95d99ffe",
            "0716dc79-d3ff-42a8-bdbf-e9bc7385691d",
            "5826329e-3196-4ef7-8efa-e185fb9b14a6",
            "29e3599b-4047-4b4d-a30d-d5b34f571ec1",
            "13e9f08c-8dd8-4511-9a48-91b1b8dbf448",
            "bdb0c0b0-bb39-4d83-b447-7f1d3094326f"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 60000,
          "options": {
            "title": "between",
            "description": "Ensure that all queries involving operator **between** work correctly. <br/>      Collections: [Daraa - Cultural Points](https://demo.ldproxy.net/daraa/collections/CulturePnt/items?f=html)"
          }
        },
        {
          "uuid": "980f6ae3-12a4-4603-9bb2-21dc94992d7d",
          "title": "eq",
          "fullFile": "C:\\Users\\p.zahnen\\Documents\\Projekte\\demo-tests\\filter-queries\\spec\\eq.js",
          "file": "\\spec\\eq.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "filter=F_CODE=F_CODE",
              "fullTitle": "eq filter=F_CODE=F_CODE",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Data is selected using filter\n        api\n          .get(\"/daraa/collections/CulturePnt/items\")\n          .query({ limit: LIMIT, ...test.query })\n          // Success and returns GeoJSON\n          .expect(200)\n          .expect(CONTENT_TYPE, GEO_JSON)\n          // returns correct amount of features\n          .expect((res) => {\n            const expected = vars\n              .load(CULTURE_PNT_FEATURES)\n              .features.filter(test.filter);\n            res.body.should.have\n              .property(\"numberReturned\")\n              .which.equals(expected.length);\n            //returns the expected features:\n            const actual = res.body.features;\n            for (let i = 0; i < actual.length; i++) {\n              actual[i].should.have.property(\"id\").which.equals(expected[i].id);\n              actual[i].should.have\n                .property(\"type\")\n                .which.equals(expected[i].type);\n              actual[i].should.have\n                .property(\"geometry\")\n                .which.deep.equals(expected[i].geometry);\n              actual[i].should.have\n                .property(\"properties\")\n                .which.deep.equals(expected[i].properties);\n            }\n          })",
              "err": {},
              "uuid": "006b1163-57c6-4976-b99e-647b5bf6883d",
              "parentUUID": null,
              "isHook": false,
              "skipped": true,
              "options": {}
            },
            {
              "title": "filter=F_CODE='AL030'",
              "fullTitle": "eq filter=F_CODE='AL030'",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Data is selected using filter\n        api\n          .get(\"/daraa/collections/CulturePnt/items\")\n          .query({ limit: LIMIT, ...test.query })\n          // Success and returns GeoJSON\n          .expect(200)\n          .expect(CONTENT_TYPE, GEO_JSON)\n          // returns correct amount of features\n          .expect((res) => {\n            const expected = vars\n              .load(CULTURE_PNT_FEATURES)\n              .features.filter(test.filter);\n            res.body.should.have\n              .property(\"numberReturned\")\n              .which.equals(expected.length);\n            //returns the expected features:\n            const actual = res.body.features;\n            for (let i = 0; i < actual.length; i++) {\n              actual[i].should.have.property(\"id\").which.equals(expected[i].id);\n              actual[i].should.have\n                .property(\"type\")\n                .which.equals(expected[i].type);\n              actual[i].should.have\n                .property(\"geometry\")\n                .which.deep.equals(expected[i].geometry);\n              actual[i].should.have\n                .property(\"properties\")\n                .which.deep.equals(expected[i].properties);\n            }\n          })",
              "err": {},
              "uuid": "9f936f2c-4714-4534-aa37-a58c8c11af18",
              "parentUUID": null,
              "isHook": false,
              "skipped": true,
              "options": {}
            },
            {
              "title": "filter='AL030'=F_CODE",
              "fullTitle": "eq filter='AL030'=F_CODE",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Data is selected using filter\n        api\n          .get(\"/daraa/collections/CulturePnt/items\")\n          .query({ limit: LIMIT, ...test.query })\n          // Success and returns GeoJSON\n          .expect(200)\n          .expect(CONTENT_TYPE, GEO_JSON)\n          // returns correct amount of features\n          .expect((res) => {\n            const expected = vars\n              .load(CULTURE_PNT_FEATURES)\n              .features.filter(test.filter);\n            res.body.should.have\n              .property(\"numberReturned\")\n              .which.equals(expected.length);\n            //returns the expected features:\n            const actual = res.body.features;\n            for (let i = 0; i < actual.length; i++) {\n              actual[i].should.have.property(\"id\").which.equals(expected[i].id);\n              actual[i].should.have\n                .property(\"type\")\n                .which.equals(expected[i].type);\n              actual[i].should.have\n                .property(\"geometry\")\n                .which.deep.equals(expected[i].geometry);\n              actual[i].should.have\n                .property(\"properties\")\n                .which.deep.equals(expected[i].properties);\n            }\n          })",
              "err": {},
              "uuid": "cde26523-c695-49ea-8f81-6fad942e3f38",
              "parentUUID": null,
              "isHook": false,
              "skipped": true,
              "options": {}
            },
            {
              "title": "F_CODE=AL030",
              "fullTitle": "eq F_CODE=AL030",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Data is selected using filter\n        api\n          .get(\"/daraa/collections/CulturePnt/items\")\n          .query({ limit: LIMIT, ...test.query })\n          // Success and returns GeoJSON\n          .expect(200)\n          .expect(CONTENT_TYPE, GEO_JSON)\n          // returns correct amount of features\n          .expect((res) => {\n            const expected = vars\n              .load(CULTURE_PNT_FEATURES)\n              .features.filter(test.filter);\n            res.body.should.have\n              .property(\"numberReturned\")\n              .which.equals(expected.length);\n            //returns the expected features:\n            const actual = res.body.features;\n            for (let i = 0; i < actual.length; i++) {\n              actual[i].should.have.property(\"id\").which.equals(expected[i].id);\n              actual[i].should.have\n                .property(\"type\")\n                .which.equals(expected[i].type);\n              actual[i].should.have\n                .property(\"geometry\")\n                .which.deep.equals(expected[i].geometry);\n              actual[i].should.have\n                .property(\"properties\")\n                .which.deep.equals(expected[i].properties);\n            }\n          })",
              "err": {},
              "uuid": "fdf627cb-aff6-4dcb-8cf9-605086737a58",
              "parentUUID": null,
              "isHook": false,
              "skipped": true,
              "options": {}
            },
            {
              "title": "filter=ZI037_REL=11",
              "fullTitle": "eq filter=ZI037_REL=11",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Data is selected using filter\n        api\n          .get(\"/daraa/collections/CulturePnt/items\")\n          .query({ limit: LIMIT, ...test.query })\n          // Success and returns GeoJSON\n          .expect(200)\n          .expect(CONTENT_TYPE, GEO_JSON)\n          // returns correct amount of features\n          .expect((res) => {\n            const expected = vars\n              .load(CULTURE_PNT_FEATURES)\n              .features.filter(test.filter);\n            res.body.should.have\n              .property(\"numberReturned\")\n              .which.equals(expected.length);\n            //returns the expected features:\n            const actual = res.body.features;\n            for (let i = 0; i < actual.length; i++) {\n              actual[i].should.have.property(\"id\").which.equals(expected[i].id);\n              actual[i].should.have\n                .property(\"type\")\n                .which.equals(expected[i].type);\n              actual[i].should.have\n                .property(\"geometry\")\n                .which.deep.equals(expected[i].geometry);\n              actual[i].should.have\n                .property(\"properties\")\n                .which.deep.equals(expected[i].properties);\n            }\n          })",
              "err": {},
              "uuid": "a6443c83-f7c8-43f9-8bc7-527e7e2e3d2e",
              "parentUUID": null,
              "isHook": false,
              "skipped": true,
              "options": {}
            },
            {
              "title": "filter='A'='A'",
              "fullTitle": "eq filter='A'='A'",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Data is selected using filter\n        api\n          .get(\"/daraa/collections/CulturePnt/items\")\n          .query({ limit: LIMIT, ...test.query })\n          // Success and returns GeoJSON\n          .expect(200)\n          .expect(CONTENT_TYPE, GEO_JSON)\n          // returns correct amount of features\n          .expect((res) => {\n            const expected = vars\n              .load(CULTURE_PNT_FEATURES)\n              .features.filter(test.filter);\n            res.body.should.have\n              .property(\"numberReturned\")\n              .which.equals(expected.length);\n            //returns the expected features:\n            const actual = res.body.features;\n            for (let i = 0; i < actual.length; i++) {\n              actual[i].should.have.property(\"id\").which.equals(expected[i].id);\n              actual[i].should.have\n                .property(\"type\")\n                .which.equals(expected[i].type);\n              actual[i].should.have\n                .property(\"geometry\")\n                .which.deep.equals(expected[i].geometry);\n              actual[i].should.have\n                .property(\"properties\")\n                .which.deep.equals(expected[i].properties);\n            }\n          })",
              "err": {},
              "uuid": "0a82b3ba-ff11-4763-ac97-4ea0ef659346",
              "parentUUID": null,
              "isHook": false,
              "skipped": true,
              "options": {}
            },
            {
              "title": "filter=\"F_CODE\"='AL030'",
              "fullTitle": "eq filter=\"F_CODE\"='AL030'",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Data is selected using filter\n        api\n          .get(\"/daraa/collections/CulturePnt/items\")\n          .query({ limit: LIMIT, ...test.query })\n          // Success and returns GeoJSON\n          .expect(200)\n          .expect(CONTENT_TYPE, GEO_JSON)\n          // returns correct amount of features\n          .expect((res) => {\n            const expected = vars\n              .load(CULTURE_PNT_FEATURES)\n              .features.filter(test.filter);\n            res.body.should.have\n              .property(\"numberReturned\")\n              .which.equals(expected.length);\n            //returns the expected features:\n            const actual = res.body.features;\n            for (let i = 0; i < actual.length; i++) {\n              actual[i].should.have.property(\"id\").which.equals(expected[i].id);\n              actual[i].should.have\n                .property(\"type\")\n                .which.equals(expected[i].type);\n              actual[i].should.have\n                .property(\"geometry\")\n                .which.deep.equals(expected[i].geometry);\n              actual[i].should.have\n                .property(\"properties\")\n                .which.deep.equals(expected[i].properties);\n            }\n          })",
              "err": {},
              "uuid": "1f721cfe-2393-45ab-8951-c49c601f449f",
              "parentUUID": null,
              "isHook": false,
              "skipped": true,
              "options": {}
            },
            {
              "title": "filter=ZI001_SDV=TIMESTAMP('2011-12-26T20:55:27Z')",
              "fullTitle": "eq filter=ZI001_SDV=TIMESTAMP('2011-12-26T20:55:27Z')",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Data is selected using filter\n        api\n          .get(\"/daraa/collections/CulturePnt/items\")\n          .query({ limit: LIMIT, ...test.query })\n          // Success and returns GeoJSON\n          .expect(200)\n          .expect(CONTENT_TYPE, GEO_JSON)\n          // returns correct amount of features\n          .expect((res) => {\n            const expected = vars\n              .load(CULTURE_PNT_FEATURES)\n              .features.filter(test.filter);\n            res.body.should.have\n              .property(\"numberReturned\")\n              .which.equals(expected.length);\n            //returns the expected features:\n            const actual = res.body.features;\n            for (let i = 0; i < actual.length; i++) {\n              actual[i].should.have.property(\"id\").which.equals(expected[i].id);\n              actual[i].should.have\n                .property(\"type\")\n                .which.equals(expected[i].type);\n              actual[i].should.have\n                .property(\"geometry\")\n                .which.deep.equals(expected[i].geometry);\n              actual[i].should.have\n                .property(\"properties\")\n                .which.deep.equals(expected[i].properties);\n            }\n          })",
              "err": {},
              "uuid": "0319ae33-b50c-4f23-b619-8105d9c67bb5",
              "parentUUID": null,
              "isHook": false,
              "skipped": true,
              "options": {}
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "006b1163-57c6-4976-b99e-647b5bf6883d",
            "9f936f2c-4714-4534-aa37-a58c8c11af18",
            "cde26523-c695-49ea-8f81-6fad942e3f38",
            "fdf627cb-aff6-4dcb-8cf9-605086737a58",
            "a6443c83-f7c8-43f9-8bc7-527e7e2e3d2e",
            "0a82b3ba-ff11-4763-ac97-4ea0ef659346",
            "1f721cfe-2393-45ab-8951-c49c601f449f",
            "0319ae33-b50c-4f23-b619-8105d9c67bb5"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 60000,
          "options": {
            "title": "eq",
            "description": "Ensure that all queries involving operator **eq** work correctly. <br/>      Collections: [Daraa - Cultural Points](https://demo.ldproxy.net/daraa/collections/CulturePnt/items?f=html)"
          }
        },
        {
          "uuid": "d5469e06-85f9-4d81-ac82-4a9fc1cceaeb",
          "title": "gt",
          "fullFile": "C:\\Users\\p.zahnen\\Documents\\Projekte\\demo-tests\\filter-queries\\spec\\gt.js",
          "file": "\\spec\\gt.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "filter=F_CODE>F_CODE",
              "fullTitle": "gt filter=F_CODE>F_CODE",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Data is selected using filter\n        api\n          .get(\"/daraa/collections/CulturePnt/items\")\n          .query({ limit: LIMIT, ...test.query })\n          // Success and returns GeoJSON\n          .expect(200)\n          .expect(CONTENT_TYPE, GEO_JSON)\n          // returns correct amount of features\n          .expect((res) => {\n            const expected = vars\n              .load(CULTURE_PNT_FEATURES)\n              .features.filter(test.filter);\n            res.body.should.have\n              .property(\"numberReturned\")\n              .which.equals(expected.length);\n            //returns the expected features:\n            const actual = res.body.features;\n            for (let i = 0; i < actual.length; i++) {\n              actual[i].should.have.property(\"id\").which.equals(expected[i].id);\n              actual[i].should.have\n                .property(\"type\")\n                .which.equals(expected[i].type);\n              actual[i].should.have\n                .property(\"geometry\")\n                .which.deep.equals(expected[i].geometry);\n              actual[i].should.have\n                .property(\"properties\")\n                .which.deep.equals(expected[i].properties);\n            }\n          })",
              "err": {},
              "uuid": "52cb094d-8810-4a0a-adc0-b4c213caa76f",
              "parentUUID": null,
              "isHook": false,
              "skipped": true,
              "options": {}
            },
            {
              "title": "filter=F_CODE>'AL030'",
              "fullTitle": "gt filter=F_CODE>'AL030'",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Data is selected using filter\n        api\n          .get(\"/daraa/collections/CulturePnt/items\")\n          .query({ limit: LIMIT, ...test.query })\n          // Success and returns GeoJSON\n          .expect(200)\n          .expect(CONTENT_TYPE, GEO_JSON)\n          // returns correct amount of features\n          .expect((res) => {\n            const expected = vars\n              .load(CULTURE_PNT_FEATURES)\n              .features.filter(test.filter);\n            res.body.should.have\n              .property(\"numberReturned\")\n              .which.equals(expected.length);\n            //returns the expected features:\n            const actual = res.body.features;\n            for (let i = 0; i < actual.length; i++) {\n              actual[i].should.have.property(\"id\").which.equals(expected[i].id);\n              actual[i].should.have\n                .property(\"type\")\n                .which.equals(expected[i].type);\n              actual[i].should.have\n                .property(\"geometry\")\n                .which.deep.equals(expected[i].geometry);\n              actual[i].should.have\n                .property(\"properties\")\n                .which.deep.equals(expected[i].properties);\n            }\n          })",
              "err": {},
              "uuid": "2ede0b11-84c1-477e-bf2c-50d120b2a9f0",
              "parentUUID": null,
              "isHook": false,
              "skipped": true,
              "options": {}
            },
            {
              "title": "filter=ZI037_REL>11",
              "fullTitle": "gt filter=ZI037_REL>11",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Data is selected using filter\n        api\n          .get(\"/daraa/collections/CulturePnt/items\")\n          .query({ limit: LIMIT, ...test.query })\n          // Success and returns GeoJSON\n          .expect(200)\n          .expect(CONTENT_TYPE, GEO_JSON)\n          // returns correct amount of features\n          .expect((res) => {\n            const expected = vars\n              .load(CULTURE_PNT_FEATURES)\n              .features.filter(test.filter);\n            res.body.should.have\n              .property(\"numberReturned\")\n              .which.equals(expected.length);\n            //returns the expected features:\n            const actual = res.body.features;\n            for (let i = 0; i < actual.length; i++) {\n              actual[i].should.have.property(\"id\").which.equals(expected[i].id);\n              actual[i].should.have\n                .property(\"type\")\n                .which.equals(expected[i].type);\n              actual[i].should.have\n                .property(\"geometry\")\n                .which.deep.equals(expected[i].geometry);\n              actual[i].should.have\n                .property(\"properties\")\n                .which.deep.equals(expected[i].properties);\n            }\n          })",
              "err": {},
              "uuid": "d2e6dcd8-5e05-479f-8a36-e4bb39154693",
              "parentUUID": null,
              "isHook": false,
              "skipped": true,
              "options": {}
            },
            {
              "title": "filter=ZI037_REL>0",
              "fullTitle": "gt filter=ZI037_REL>0",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Data is selected using filter\n        api\n          .get(\"/daraa/collections/CulturePnt/items\")\n          .query({ limit: LIMIT, ...test.query })\n          // Success and returns GeoJSON\n          .expect(200)\n          .expect(CONTENT_TYPE, GEO_JSON)\n          // returns correct amount of features\n          .expect((res) => {\n            const expected = vars\n              .load(CULTURE_PNT_FEATURES)\n              .features.filter(test.filter);\n            res.body.should.have\n              .property(\"numberReturned\")\n              .which.equals(expected.length);\n            //returns the expected features:\n            const actual = res.body.features;\n            for (let i = 0; i < actual.length; i++) {\n              actual[i].should.have.property(\"id\").which.equals(expected[i].id);\n              actual[i].should.have\n                .property(\"type\")\n                .which.equals(expected[i].type);\n              actual[i].should.have\n                .property(\"geometry\")\n                .which.deep.equals(expected[i].geometry);\n              actual[i].should.have\n                .property(\"properties\")\n                .which.deep.equals(expected[i].properties);\n            }\n          })",
              "err": {},
              "uuid": "d8312a33-6652-467a-8157-da824e267395",
              "parentUUID": null,
              "isHook": false,
              "skipped": true,
              "options": {}
            },
            {
              "title": "filter='AL030'>F_CODE",
              "fullTitle": "gt filter='AL030'>F_CODE",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Data is selected using filter\n        api\n          .get(\"/daraa/collections/CulturePnt/items\")\n          .query({ limit: LIMIT, ...test.query })\n          // Success and returns GeoJSON\n          .expect(200)\n          .expect(CONTENT_TYPE, GEO_JSON)\n          // returns correct amount of features\n          .expect((res) => {\n            const expected = vars\n              .load(CULTURE_PNT_FEATURES)\n              .features.filter(test.filter);\n            res.body.should.have\n              .property(\"numberReturned\")\n              .which.equals(expected.length);\n            //returns the expected features:\n            const actual = res.body.features;\n            for (let i = 0; i < actual.length; i++) {\n              actual[i].should.have.property(\"id\").which.equals(expected[i].id);\n              actual[i].should.have\n                .property(\"type\")\n                .which.equals(expected[i].type);\n              actual[i].should.have\n                .property(\"geometry\")\n                .which.deep.equals(expected[i].geometry);\n              actual[i].should.have\n                .property(\"properties\")\n                .which.deep.equals(expected[i].properties);\n            }\n          })",
              "err": {},
              "uuid": "704689e8-789c-44ef-9ded-76481a98fe74",
              "parentUUID": null,
              "isHook": false,
              "skipped": true,
              "options": {}
            },
            {
              "title": "filter='A'>'A'",
              "fullTitle": "gt filter='A'>'A'",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Data is selected using filter\n        api\n          .get(\"/daraa/collections/CulturePnt/items\")\n          .query({ limit: LIMIT, ...test.query })\n          // Success and returns GeoJSON\n          .expect(200)\n          .expect(CONTENT_TYPE, GEO_JSON)\n          // returns correct amount of features\n          .expect((res) => {\n            const expected = vars\n              .load(CULTURE_PNT_FEATURES)\n              .features.filter(test.filter);\n            res.body.should.have\n              .property(\"numberReturned\")\n              .which.equals(expected.length);\n            //returns the expected features:\n            const actual = res.body.features;\n            for (let i = 0; i < actual.length; i++) {\n              actual[i].should.have.property(\"id\").which.equals(expected[i].id);\n              actual[i].should.have\n                .property(\"type\")\n                .which.equals(expected[i].type);\n              actual[i].should.have\n                .property(\"geometry\")\n                .which.deep.equals(expected[i].geometry);\n              actual[i].should.have\n                .property(\"properties\")\n                .which.deep.equals(expected[i].properties);\n            }\n          })",
              "err": {},
              "uuid": "ee61f38a-e4aa-4ca5-a178-1eba47d17e77",
              "parentUUID": null,
              "isHook": false,
              "skipped": true,
              "options": {}
            },
            {
              "title": "filter=ZI001_SDV>TIMESTAMP('2011-12-26T20:55:27Z')",
              "fullTitle": "gt filter=ZI001_SDV>TIMESTAMP('2011-12-26T20:55:27Z')",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Data is selected using filter\n        api\n          .get(\"/daraa/collections/CulturePnt/items\")\n          .query({ limit: LIMIT, ...test.query })\n          // Success and returns GeoJSON\n          .expect(200)\n          .expect(CONTENT_TYPE, GEO_JSON)\n          // returns correct amount of features\n          .expect((res) => {\n            const expected = vars\n              .load(CULTURE_PNT_FEATURES)\n              .features.filter(test.filter);\n            res.body.should.have\n              .property(\"numberReturned\")\n              .which.equals(expected.length);\n            //returns the expected features:\n            const actual = res.body.features;\n            for (let i = 0; i < actual.length; i++) {\n              actual[i].should.have.property(\"id\").which.equals(expected[i].id);\n              actual[i].should.have\n                .property(\"type\")\n                .which.equals(expected[i].type);\n              actual[i].should.have\n                .property(\"geometry\")\n                .which.deep.equals(expected[i].geometry);\n              actual[i].should.have\n                .property(\"properties\")\n                .which.deep.equals(expected[i].properties);\n            }\n          })",
              "err": {},
              "uuid": "7367d5e1-9a51-44d8-8390-4617ed6d5dd6",
              "parentUUID": null,
              "isHook": false,
              "skipped": true,
              "options": {}
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "52cb094d-8810-4a0a-adc0-b4c213caa76f",
            "2ede0b11-84c1-477e-bf2c-50d120b2a9f0",
            "d2e6dcd8-5e05-479f-8a36-e4bb39154693",
            "d8312a33-6652-467a-8157-da824e267395",
            "704689e8-789c-44ef-9ded-76481a98fe74",
            "ee61f38a-e4aa-4ca5-a178-1eba47d17e77",
            "7367d5e1-9a51-44d8-8390-4617ed6d5dd6"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 60000,
          "options": {
            "title": "gt",
            "description": "Ensure that all queries involving operator **gt** work correctly. <br/>      Collections: [Daraa - Cultural Points](https://demo.ldproxy.net/daraa/collections/CulturePnt/items?f=html)"
          }
        },
        {
          "uuid": "0a0403a6-385a-4f24-87ac-882fe0ee507b",
          "title": "gteq",
          "fullFile": "C:\\Users\\p.zahnen\\Documents\\Projekte\\demo-tests\\filter-queries\\spec\\gteq.js",
          "file": "\\spec\\gteq.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "filter=F_CODE>=F_CODE",
              "fullTitle": "gteq filter=F_CODE>=F_CODE",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Data is selected using filter\n        api\n          .get(\"/daraa/collections/CulturePnt/items\")\n          .query({ limit: LIMIT, ...test.query })\n          // Success and returns GeoJSON\n          .expect(200)\n          .expect(CONTENT_TYPE, GEO_JSON)\n          // returns correct amount of features\n          .expect((res) => {\n            const expected = vars\n              .load(CULTURE_PNT_FEATURES)\n              .features.filter(test.filter);\n            res.body.should.have\n              .property(\"numberReturned\")\n              .which.equals(expected.length);\n            //returns the expected features:\n            const actual = res.body.features;\n            for (let i = 0; i < actual.length; i++) {\n              actual[i].should.have.property(\"id\").which.equals(expected[i].id);\n              actual[i].should.have\n                .property(\"type\")\n                .which.equals(expected[i].type);\n              actual[i].should.have\n                .property(\"geometry\")\n                .which.deep.equals(expected[i].geometry);\n              actual[i].should.have\n                .property(\"properties\")\n                .which.deep.equals(expected[i].properties);\n            }\n          })",
              "err": {},
              "uuid": "f13dcd49-75a6-4d90-8e80-402d32d30d01",
              "parentUUID": null,
              "isHook": false,
              "skipped": true,
              "options": {}
            },
            {
              "title": "filter=F_CODE>='AL030'",
              "fullTitle": "gteq filter=F_CODE>='AL030'",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Data is selected using filter\n        api\n          .get(\"/daraa/collections/CulturePnt/items\")\n          .query({ limit: LIMIT, ...test.query })\n          // Success and returns GeoJSON\n          .expect(200)\n          .expect(CONTENT_TYPE, GEO_JSON)\n          // returns correct amount of features\n          .expect((res) => {\n            const expected = vars\n              .load(CULTURE_PNT_FEATURES)\n              .features.filter(test.filter);\n            res.body.should.have\n              .property(\"numberReturned\")\n              .which.equals(expected.length);\n            //returns the expected features:\n            const actual = res.body.features;\n            for (let i = 0; i < actual.length; i++) {\n              actual[i].should.have.property(\"id\").which.equals(expected[i].id);\n              actual[i].should.have\n                .property(\"type\")\n                .which.equals(expected[i].type);\n              actual[i].should.have\n                .property(\"geometry\")\n                .which.deep.equals(expected[i].geometry);\n              actual[i].should.have\n                .property(\"properties\")\n                .which.deep.equals(expected[i].properties);\n            }\n          })",
              "err": {},
              "uuid": "fc35a408-d53c-43e3-95d8-ae7517119d4d",
              "parentUUID": null,
              "isHook": false,
              "skipped": true,
              "options": {}
            },
            {
              "title": "filter=ZI037_REL>=11",
              "fullTitle": "gteq filter=ZI037_REL>=11",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Data is selected using filter\n        api\n          .get(\"/daraa/collections/CulturePnt/items\")\n          .query({ limit: LIMIT, ...test.query })\n          // Success and returns GeoJSON\n          .expect(200)\n          .expect(CONTENT_TYPE, GEO_JSON)\n          // returns correct amount of features\n          .expect((res) => {\n            const expected = vars\n              .load(CULTURE_PNT_FEATURES)\n              .features.filter(test.filter);\n            res.body.should.have\n              .property(\"numberReturned\")\n              .which.equals(expected.length);\n            //returns the expected features:\n            const actual = res.body.features;\n            for (let i = 0; i < actual.length; i++) {\n              actual[i].should.have.property(\"id\").which.equals(expected[i].id);\n              actual[i].should.have\n                .property(\"type\")\n                .which.equals(expected[i].type);\n              actual[i].should.have\n                .property(\"geometry\")\n                .which.deep.equals(expected[i].geometry);\n              actual[i].should.have\n                .property(\"properties\")\n                .which.deep.equals(expected[i].properties);\n            }\n          })",
              "err": {},
              "uuid": "3c772081-6b69-4f5a-b6a6-1fef45f97691",
              "parentUUID": null,
              "isHook": false,
              "skipped": true,
              "options": {}
            },
            {
              "title": "filter=ZI037_REL>=10",
              "fullTitle": "gteq filter=ZI037_REL>=10",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Data is selected using filter\n        api\n          .get(\"/daraa/collections/CulturePnt/items\")\n          .query({ limit: LIMIT, ...test.query })\n          // Success and returns GeoJSON\n          .expect(200)\n          .expect(CONTENT_TYPE, GEO_JSON)\n          // returns correct amount of features\n          .expect((res) => {\n            const expected = vars\n              .load(CULTURE_PNT_FEATURES)\n              .features.filter(test.filter);\n            res.body.should.have\n              .property(\"numberReturned\")\n              .which.equals(expected.length);\n            //returns the expected features:\n            const actual = res.body.features;\n            for (let i = 0; i < actual.length; i++) {\n              actual[i].should.have.property(\"id\").which.equals(expected[i].id);\n              actual[i].should.have\n                .property(\"type\")\n                .which.equals(expected[i].type);\n              actual[i].should.have\n                .property(\"geometry\")\n                .which.deep.equals(expected[i].geometry);\n              actual[i].should.have\n                .property(\"properties\")\n                .which.deep.equals(expected[i].properties);\n            }\n          })",
              "err": {},
              "uuid": "8e23610b-4006-4921-8c60-3ba900e67497",
              "parentUUID": null,
              "isHook": false,
              "skipped": true,
              "options": {}
            },
            {
              "title": "filter='AL030'>=F_CODE",
              "fullTitle": "gteq filter='AL030'>=F_CODE",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Data is selected using filter\n        api\n          .get(\"/daraa/collections/CulturePnt/items\")\n          .query({ limit: LIMIT, ...test.query })\n          // Success and returns GeoJSON\n          .expect(200)\n          .expect(CONTENT_TYPE, GEO_JSON)\n          // returns correct amount of features\n          .expect((res) => {\n            const expected = vars\n              .load(CULTURE_PNT_FEATURES)\n              .features.filter(test.filter);\n            res.body.should.have\n              .property(\"numberReturned\")\n              .which.equals(expected.length);\n            //returns the expected features:\n            const actual = res.body.features;\n            for (let i = 0; i < actual.length; i++) {\n              actual[i].should.have.property(\"id\").which.equals(expected[i].id);\n              actual[i].should.have\n                .property(\"type\")\n                .which.equals(expected[i].type);\n              actual[i].should.have\n                .property(\"geometry\")\n                .which.deep.equals(expected[i].geometry);\n              actual[i].should.have\n                .property(\"properties\")\n                .which.deep.equals(expected[i].properties);\n            }\n          })",
              "err": {},
              "uuid": "a171f07f-ef7d-4daf-b6f3-5efc83214872",
              "parentUUID": null,
              "isHook": false,
              "skipped": true,
              "options": {}
            },
            {
              "title": "filter='A'>='A'",
              "fullTitle": "gteq filter='A'>='A'",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Data is selected using filter\n        api\n          .get(\"/daraa/collections/CulturePnt/items\")\n          .query({ limit: LIMIT, ...test.query })\n          // Success and returns GeoJSON\n          .expect(200)\n          .expect(CONTENT_TYPE, GEO_JSON)\n          // returns correct amount of features\n          .expect((res) => {\n            const expected = vars\n              .load(CULTURE_PNT_FEATURES)\n              .features.filter(test.filter);\n            res.body.should.have\n              .property(\"numberReturned\")\n              .which.equals(expected.length);\n            //returns the expected features:\n            const actual = res.body.features;\n            for (let i = 0; i < actual.length; i++) {\n              actual[i].should.have.property(\"id\").which.equals(expected[i].id);\n              actual[i].should.have\n                .property(\"type\")\n                .which.equals(expected[i].type);\n              actual[i].should.have\n                .property(\"geometry\")\n                .which.deep.equals(expected[i].geometry);\n              actual[i].should.have\n                .property(\"properties\")\n                .which.deep.equals(expected[i].properties);\n            }\n          })",
              "err": {},
              "uuid": "3ebd019c-ab6b-4d9d-9d38-d1df3f832006",
              "parentUUID": null,
              "isHook": false,
              "skipped": true,
              "options": {}
            },
            {
              "title": "filter=ZI001_SDV>=TIMESTAMP('2011-12-26T20:55:27Z')",
              "fullTitle": "gteq filter=ZI001_SDV>=TIMESTAMP('2011-12-26T20:55:27Z')",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Data is selected using filter\n        api\n          .get(\"/daraa/collections/CulturePnt/items\")\n          .query({ limit: LIMIT, ...test.query })\n          // Success and returns GeoJSON\n          .expect(200)\n          .expect(CONTENT_TYPE, GEO_JSON)\n          // returns correct amount of features\n          .expect((res) => {\n            const expected = vars\n              .load(CULTURE_PNT_FEATURES)\n              .features.filter(test.filter);\n            res.body.should.have\n              .property(\"numberReturned\")\n              .which.equals(expected.length);\n            //returns the expected features:\n            const actual = res.body.features;\n            for (let i = 0; i < actual.length; i++) {\n              actual[i].should.have.property(\"id\").which.equals(expected[i].id);\n              actual[i].should.have\n                .property(\"type\")\n                .which.equals(expected[i].type);\n              actual[i].should.have\n                .property(\"geometry\")\n                .which.deep.equals(expected[i].geometry);\n              actual[i].should.have\n                .property(\"properties\")\n                .which.deep.equals(expected[i].properties);\n            }\n          })",
              "err": {},
              "uuid": "f027c27a-9f62-42c7-b7d2-01a40e88687c",
              "parentUUID": null,
              "isHook": false,
              "skipped": true,
              "options": {}
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "f13dcd49-75a6-4d90-8e80-402d32d30d01",
            "fc35a408-d53c-43e3-95d8-ae7517119d4d",
            "3c772081-6b69-4f5a-b6a6-1fef45f97691",
            "8e23610b-4006-4921-8c60-3ba900e67497",
            "a171f07f-ef7d-4daf-b6f3-5efc83214872",
            "3ebd019c-ab6b-4d9d-9d38-d1df3f832006",
            "f027c27a-9f62-42c7-b7d2-01a40e88687c"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 60000,
          "options": {
            "title": "gteq",
            "description": "Ensure that all queries involving operator **gteq** work correctly. <br/>      Collections: [Daraa - Cultural Points](https://demo.ldproxy.net/daraa/collections/CulturePnt/items?f=html)"
          }
        },
        {
          "uuid": "02bf38d0-5f94-4f5e-901d-213858ac0ab8",
          "title": "in",
          "fullFile": "C:\\Users\\p.zahnen\\Documents\\Projekte\\demo-tests\\filter-queries\\spec\\in.js",
          "file": "\\spec\\in.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "filter=CASEI(F_CODE) iN (CASEI('AL030'), CASEI('AL012'))",
              "fullTitle": "in filter=CASEI(F_CODE) iN (CASEI('AL030'), CASEI('AL012'))",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Data is selected using filter\n        api\n          .get(\"/daraa/collections/CulturePnt/items\")\n          .query({ limit: LIMIT, ...test.query })\n          // Success and returns GeoJSON\n          .expect(200)\n          .expect(CONTENT_TYPE, GEO_JSON)\n          // returns correct amount of features\n          .expect((res) => {\n            const expected = vars\n              .load(CULTURE_PNT_FEATURES)\n              .features.filter(test.filter);\n            res.body.should.have\n              .property(\"numberReturned\")\n              .which.equals(expected.length);\n            //returns the expected features:\n            const actual = res.body.features;\n            for (let i = 0; i < actual.length; i++) {\n              actual[i].should.have.property(\"id\").which.equals(expected[i].id);\n              actual[i].should.have\n                .property(\"type\")\n                .which.equals(expected[i].type);\n              actual[i].should.have\n                .property(\"geometry\")\n                .which.deep.equals(expected[i].geometry);\n              actual[i].should.have\n                .property(\"properties\")\n                .which.deep.equals(expected[i].properties);\n            }\n          })",
              "err": {},
              "uuid": "f9d3b920-7e20-4bf7-8f61-5579af37a993",
              "parentUUID": null,
              "isHook": false,
              "skipped": true,
              "options": {}
            },
            {
              "title": "filter=F_CODE NoT iN ('AL030', 'AL012')",
              "fullTitle": "in filter=F_CODE NoT iN ('AL030', 'AL012')",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Data is selected using filter\n        api\n          .get(\"/daraa/collections/CulturePnt/items\")\n          .query({ limit: LIMIT, ...test.query })\n          // Success and returns GeoJSON\n          .expect(200)\n          .expect(CONTENT_TYPE, GEO_JSON)\n          // returns correct amount of features\n          .expect((res) => {\n            const expected = vars\n              .load(CULTURE_PNT_FEATURES)\n              .features.filter(test.filter);\n            res.body.should.have\n              .property(\"numberReturned\")\n              .which.equals(expected.length);\n            //returns the expected features:\n            const actual = res.body.features;\n            for (let i = 0; i < actual.length; i++) {\n              actual[i].should.have.property(\"id\").which.equals(expected[i].id);\n              actual[i].should.have\n                .property(\"type\")\n                .which.equals(expected[i].type);\n              actual[i].should.have\n                .property(\"geometry\")\n                .which.deep.equals(expected[i].geometry);\n              actual[i].should.have\n                .property(\"properties\")\n                .which.deep.equals(expected[i].properties);\n            }\n          })",
              "err": {},
              "uuid": "451cbac6-90ac-40dc-8828-ddf5c01f605e",
              "parentUUID": null,
              "isHook": false,
              "skipped": true,
              "options": {}
            },
            {
              "title": "filter=ZI037_REL iN (11, 12)",
              "fullTitle": "in filter=ZI037_REL iN (11, 12)",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Data is selected using filter\n        api\n          .get(\"/daraa/collections/CulturePnt/items\")\n          .query({ limit: LIMIT, ...test.query })\n          // Success and returns GeoJSON\n          .expect(200)\n          .expect(CONTENT_TYPE, GEO_JSON)\n          // returns correct amount of features\n          .expect((res) => {\n            const expected = vars\n              .load(CULTURE_PNT_FEATURES)\n              .features.filter(test.filter);\n            res.body.should.have\n              .property(\"numberReturned\")\n              .which.equals(expected.length);\n            //returns the expected features:\n            const actual = res.body.features;\n            for (let i = 0; i < actual.length; i++) {\n              actual[i].should.have.property(\"id\").which.equals(expected[i].id);\n              actual[i].should.have\n                .property(\"type\")\n                .which.equals(expected[i].type);\n              actual[i].should.have\n                .property(\"geometry\")\n                .which.deep.equals(expected[i].geometry);\n              actual[i].should.have\n                .property(\"properties\")\n                .which.deep.equals(expected[i].properties);\n            }\n          })",
              "err": {},
              "uuid": "e1da2112-acae-4f8f-b9c5-56cf8567b2f8",
              "parentUUID": null,
              "isHook": false,
              "skipped": true,
              "options": {}
            },
            {
              "title": "filter=ZI037_REL not iN (11, 12)",
              "fullTitle": "in filter=ZI037_REL not iN (11, 12)",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Data is selected using filter\n        api\n          .get(\"/daraa/collections/CulturePnt/items\")\n          .query({ limit: LIMIT, ...test.query })\n          // Success and returns GeoJSON\n          .expect(200)\n          .expect(CONTENT_TYPE, GEO_JSON)\n          // returns correct amount of features\n          .expect((res) => {\n            const expected = vars\n              .load(CULTURE_PNT_FEATURES)\n              .features.filter(test.filter);\n            res.body.should.have\n              .property(\"numberReturned\")\n              .which.equals(expected.length);\n            //returns the expected features:\n            const actual = res.body.features;\n            for (let i = 0; i < actual.length; i++) {\n              actual[i].should.have.property(\"id\").which.equals(expected[i].id);\n              actual[i].should.have\n                .property(\"type\")\n                .which.equals(expected[i].type);\n              actual[i].should.have\n                .property(\"geometry\")\n                .which.deep.equals(expected[i].geometry);\n              actual[i].should.have\n                .property(\"properties\")\n                .which.deep.equals(expected[i].properties);\n            }\n          })",
              "err": {},
              "uuid": "81289e6c-0135-4596-b953-e26bd6f98496",
              "parentUUID": null,
              "isHook": false,
              "skipped": true,
              "options": {}
            },
            {
              "title": "filter=ZI001_SDV IN (TIMESTAMP('2011-12-26T20:55:27Z'),TIMESTAMP('2021-10-10T10:10:10Z'),TIMESTAMP('2011-12-27T18:39:59Z'))",
              "fullTitle": "in filter=ZI001_SDV IN (TIMESTAMP('2011-12-26T20:55:27Z'),TIMESTAMP('2021-10-10T10:10:10Z'),TIMESTAMP('2011-12-27T18:39:59Z'))",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Data is selected using filter\n        api\n          .get(\"/daraa/collections/CulturePnt/items\")\n          .query({ limit: LIMIT, ...test.query })\n          // Success and returns GeoJSON\n          .expect(200)\n          .expect(CONTENT_TYPE, GEO_JSON)\n          // returns correct amount of features\n          .expect((res) => {\n            const expected = vars\n              .load(CULTURE_PNT_FEATURES)\n              .features.filter(test.filter);\n            res.body.should.have\n              .property(\"numberReturned\")\n              .which.equals(expected.length);\n            //returns the expected features:\n            const actual = res.body.features;\n            for (let i = 0; i < actual.length; i++) {\n              actual[i].should.have.property(\"id\").which.equals(expected[i].id);\n              actual[i].should.have\n                .property(\"type\")\n                .which.equals(expected[i].type);\n              actual[i].should.have\n                .property(\"geometry\")\n                .which.deep.equals(expected[i].geometry);\n              actual[i].should.have\n                .property(\"properties\")\n                .which.deep.equals(expected[i].properties);\n            }\n          })",
              "err": {},
              "uuid": "bd7121f0-fe50-4e29-99cc-0c94845b7712",
              "parentUUID": null,
              "isHook": false,
              "skipped": true,
              "options": {}
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "f9d3b920-7e20-4bf7-8f61-5579af37a993",
            "451cbac6-90ac-40dc-8828-ddf5c01f605e",
            "e1da2112-acae-4f8f-b9c5-56cf8567b2f8",
            "81289e6c-0135-4596-b953-e26bd6f98496",
            "bd7121f0-fe50-4e29-99cc-0c94845b7712"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 60000,
          "options": {
            "title": "in",
            "description": "Ensure that all queries involving operator **in** work correctly. <br/>      Collections: [Daraa - Cultural Points](https://demo.ldproxy.net/daraa/collections/CulturePnt/items?f=html)"
          }
        },
        {
          "uuid": "3212e586-417d-4bb7-9f01-956f63936f9e",
          "title": "intersects",
          "fullFile": "C:\\Users\\p.zahnen\\Documents\\Projekte\\demo-tests\\filter-queries\\spec\\intersects.js",
          "file": "\\spec\\intersects.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "filter=s_InterSectS(geometry,geometry)",
              "fullTitle": "intersects filter=s_InterSectS(geometry,geometry)",
              "timedOut": false,
              "duration": 144,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "[\n  {\n    \"title\": \"Request\",\n    \"value\": \"GET https://demo.ldproxy.net/daraa/collections/AeronauticCrv/items?limit=250&filter=s_InterSectS%28geometry%2Cgeometry%29 HTTP/1.1\\nAccept: application/geo+json, application/problem+json;q=0.8\\n\",\n    \"language\": \"http\",\n    \"index\": 0\n  },\n  {\n    \"title\": \"Response\",\n    \"value\": \"Status Code: 200\\ncontent-crs: <http://www.opengis.net/def/crs/OGC/1.3/CRS84>\\ncontent-disposition: inline; filename=\\\"AeronauticCrv.json\\\"\\ncontent-encoding: gzip\\ncontent-language: en\\ncontent-type: application/geo+json\\ndate: Thu, 25 May 2023 15:55:43 GMT\\nlink: <https://demo.ldproxy.net/daraa/collections/AeronauticCrv/items?limit=250&filter=s_InterSectS%28geometry%2Cgeometry%29&f=csv>; rel=\\\"alternate\\\"; title=\\\"This document as CSV\\\"; type=\\\"text/csv\\\", <https://demo.ldproxy.net/daraa/collections/AeronauticCrv/items?limit=250&filter=s_InterSectS%28geometry%2Cgeometry%29&f=fgb>; rel=\\\"alternate\\\"; title=\\\"This document as FlatGeobuf\\\"; type=\\\"application/flatgeobuf\\\", <https://demo.ldproxy.net/daraa/collections/AeronauticCrv/items?limit=250&filter=s_InterSectS%28geometry%2Cgeometry%29&f=html>; rel=\\\"alternate\\\"; title=\\\"This document as HTML\\\"; type=\\\"text/html\\\", <https://demo.ldproxy.net/daraa/collections/AeronauticCrv/items?limit=250&filter=s_InterSectS%28geometry%2Cgeometry%29&f=jsonfg>; rel=\\\"alternate\\\"; title=\\\"This document as JSON-FG\\\"; type=\\\"application/vnd.ogc.fg+json\\\", <https://demo.ldproxy.net/daraa/collections/AeronauticCrv/items?limit=250&filter=s_InterSectS%28geometry%2Cgeometry%29&f=jsonfgc>; rel=\\\"alternate\\\"; title=\\\"This document as JSON-FG (GeoJSON Compatibility Mode)\\\"; type=\\\"application/vnd.ogc.fg+json;compatibility=geojson\\\", <http://www.opengis.net/def/profile/ogc/0/rel-as-link>; rel=\\\"profile\\\"; title=\\\"Profile used in the response\\\", <https://demo.ldproxy.net/daraa/collections/AeronauticCrv/items?limit=250&filter=s_InterSectS%28geometry%2Cgeometry%29&f=json>; rel=\\\"self\\\"; title=\\\"This document\\\"; type=\\\"application/geo+json\\\"\\nvary: Accept,Accept-Language,Accept-Encoding\\nx-request-id: 8aaf7539-fc23-405d-8e67-6db1581d59dc\\ncontent-length: 1775\\nconnection: close\\n\\n{\\\"type\\\":\\\"FeatureCollection\\\",\\\"numberReturned\\\":20,\\\"numberMatched\\\":20,\\\"timeStamp\\\":\\\"2023-05-25T15:55:43Z\\\",\\\"features\\\":[{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":1,\\\"geometry\\\":{\\\"type\\\":\\\"MultiLineString\\\",\\\"coordinates\\\":[[[36.4270030,32.7114540],[36.4251990,32.7137030]]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"GB075\\\",\\\"ZI001_SDV\\\":\\\"2011-03-16T14:51:12Z\\\",\\\"UFI\\\":\\\"2d008c34-4458-4226-b335-cf903d261ce9\\\",\\\"ZI005_FNA\\\":\\\"No Information\\\",\\\"FCSUBTYPE\\\":100454}},{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":2,\\\"geometry\\\":{\\\"type\\\":\\\"MultiLineString\\\",\\\"coordinates\\\":[[[36.4009090,32.7000770],[36.4031330,32.7013330],[36.4208880,32.7113020],[36.4231110,32.7125400],[36.4251990,32.7137030],[36.4252970,32.7137690]]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"GB075\\\",\\\"ZI001_SDV\\\":\\\"2015-09-11T19:15:35Z\\\",\\\"UFI\\\":\\\"1257bf27-3f91-461d-8a3b-a95af2ea1f5a\\\",\\\"ZI005_FNA\\\":\\\"No Information\\\",\\\"FCSUBTYPE\\\":100454}},{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":3,\\\"geometry\\\":{\\\"type\\\":\\\"MultiLineString\\\",\\\"coordinates\\\":[[[36.4049030,32.6990350],[36.4031330,32.7013330]]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"GB075\\\",\\\"ZI001_SDV\\\":\\\"2011-03-16T14:51:12Z\\\",\\\"UFI\\\":\\\"0ee76209-d69a-4cf5-b74f-dfe563ddede7\\\",\\\"ZI005_FNA\\\":\\\"No Information\\\",\\\"FCSUBTYPE\\\":100454}},{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":4,\\\"geometry\\\":{\\\"type\\\":\\\"MultiLineString\\\",\\\"coordinates\\\":[[[36.4226450,32.7090630],[36.4208880,32.7113020]]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"GB075\\\",\\\"ZI001_SDV\\\":\\\"2011-03-16T14:51:13Z\\\",\\\"UFI\\\":\\\"0463e92c-cf42-4c73-ac2f-81e0d7a0654c\\\",\\\"ZI005_FNA\\\":\\\"No Information\\\",\\\"FCSUBTYPE\\\":100454}},{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":5,\\\"geometry\\\":{\\\"type\\\":\\\"MultiLineString\\\",\\\"coordinates\\\":[[[36.3989300,32.6988040],[36.4005290,32.6965830]]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"GB075\\\",\\\"ZI001_SDV\\\":\\\"2015-09-11T19:15:35Z\\\",\\\"UFI\\\":\\\"944e084c-49dc-42b3-8566-bc75e5fecf39\\\",\\\"ZI005_FNA\\\":\\\"No Information\\\",\\\"FCSUBTYPE\\\":100454}},{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":6,\\\"geometry\\\":{\\\"type\\\":\\\"MultiLineString\\\",\\\"coordinates\\\":[[[36.4025330,32.6952330],[36.4019600,32.6953240],[36.4014490,32.6954050],[36.4012670,32.6955310],[36.4000010,32.6933010],[36.3994110,32.6935090],[36.3989490,32.6936710],[36.4000010,32.6933010],[36.4012670,32.6955310],[36.4005290,32.6965830],[36.4005160,32.6962630],[36.3995820,32.6946740]]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"GB075\\\",\\\"ZI001_SDV\\\":\\\"2012-01-03T16:24:13Z\\\",\\\"UFI\\\":\\\"6d64efa5-affb-474e-893f-47aabac7b5da\\\",\\\"ZI005_FNA\\\":\\\"No Information\\\",\\\"FCSUBTYPE\\\":100454}},{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":7,\\\"geometry\\\":{\\\"type\\\":\\\"MultiLineString\\\",\\\"coordinates\\\":[[[36.4234650,32.7141110],[36.4234560,32.7140710],[36.4231110,32.7125400]]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"GB075\\\",\\\"ZI001_SDV\\\":\\\"2012-01-03T16:24:13Z\\\",\\\"UFI\\\":\\\"5ccc277e-fa94-49ca-b566-d41246d3e42b\\\",\\\"ZI005_FNA\\\":\\\"No Information\\\",\\\"FCSUBTYPE\\\":100454}},{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":8,\\\"geometry\\\":{\\\"type\\\":\\\"MultiLineString\\\",\\\"coordinates\\\":[[[36.4294830,32.7114930],[36.4284420,32.7114460],[36.4272630,32.7113940],[36.4270030,32.7114540]]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"GB075\\\",\\\"ZI001_SDV\\\":\\\"2012-01-03T16:24:13Z\\\",\\\"UFI\\\":\\\"b9175c1f-43c2-455b-bdd0-f91cdffaaf6f\\\",\\\"ZI005_FNA\\\":\\\"No Information\\\",\\\"FCSUBTYPE\\\":100454}},{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":9,\\\"geometry\\\":{\\\"type\\\":\\\"MultiLineString\\\",\\\"coordinates\\\":[[[36.4259320,32.7173330],[36.4257630,32.7170350],[36.4245000,32.7148030],[36.4257630,32.7170350],[36.4263700,32.7167880],[36.4267580,32.7166290]]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"GB075\\\",\\\"ZI001_SDV\\\":\\\"2012-01-03T16:24:14Z\\\",\\\"UFI\\\":\\\"c9a2d4e5-67d6-458b-a89a-d664d99ea865\\\",\\\"ZI005_FNA\\\":\\\"No Information\\\",\\\"FCSUBTYPE\\\":100454}},{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":10,\\\"geometry\\\":{\\\"type\\\":\\\"MultiLineString\\\",\\\"coordinates\\\":[[[36.3993320,32.7003240],[36.4009090,32.7000770]]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"GB075\\\",\\\"ZI001_SDV\\\":\\\"2015-09-11T19:15:35Z\\\",\\\"UFI\\\":\\\"d6066359-c2cc-460e-98d4-332b915fb21f\\\",\\\"ZI005_FNA\\\":\\\"No Information\\\",\\\"FCSUBTYPE\\\":100454}},{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":11,\\\"geometry\\\":{\\\"type\\\":\\\"MultiLineString\\\",\\\"coordinates\\\":[[[36.4268870,32.7099400],[36.4248150,32.7102540]]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"GB075\\\",\\\"ZI001_SDV\\\":\\\"2012-01-03T16:24:15Z\\\",\\\"UFI\\\":\\\"e4d806b5-73ce-4a76-ba6b-f2d80b1cad30\\\",\\\"ZI005_FNA\\\":\\\"No Information\\\",\\\"FCSUBTYPE\\\":100454}},{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":12,\\\"geometry\\\":{\\\"type\\\":\\\"MultiLineString\\\",\\\"coordinates\\\":[[[36.4022750,32.6963170],[36.4026520,32.6977730]]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"GB075\\\",\\\"ZI001_SDV\\\":\\\"2012-01-03T16:24:16Z\\\",\\\"UFI\\\":\\\"096f8898-4886-408a-b3a3-af40829b8508\\\",\\\"ZI005_FNA\\\":\\\"No Information\\\",\\\"FCSUBTYPE\\\":100454}},{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":13,\\\"geometry\\\":{\\\"type\\\":\\\"MultiLineString\\\",\\\"coordinates\\\":[[[36.4233570,32.7150680],[36.4237650,32.7150030],[36.4244410,32.7148960],[36.4245000,32.7148030],[36.4250700,32.7139060],[36.4251990,32.7137030],[36.4250700,32.7139060],[36.4252450,32.7141020],[36.4262220,32.7157360]]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"GB075\\\",\\\"ZI001_SDV\\\":\\\"2012-01-03T16:24:16Z\\\",\\\"UFI\\\":\\\"d27b2fbd-01e2-44d2-81fc-dd4b1f1b89bb\\\",\\\"ZI005_FNA\\\":\\\"No Information\\\",\\\"FCSUBTYPE\\\":100454}},{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":14,\\\"geometry\\\":{\\\"type\\\":\\\"MultiLineString\\\",\\\"coordinates\\\":[[[36.4284420,32.7114460],[36.4292690,32.7106350],[36.4307820,32.7107260],[36.4308140,32.7112130],[36.4307490,32.7116100]]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"GB075\\\",\\\"ZI001_SDV\\\":\\\"2012-01-03T16:24:17Z\\\",\\\"UFI\\\":\\\"29c39f1d-9c5e-4950-9f9d-80a4ea9231bf\\\",\\\"ZI005_FNA\\\":\\\"No Information\\\",\\\"FCSUBTYPE\\\":100454}},{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":15,\\\"geometry\\\":{\\\"type\\\":\\\"MultiLineString\\\",\\\"coordinates\\\":[[[36.3987500,32.6989870],[36.3964050,32.6988310]]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"GB075\\\",\\\"ZI001_SDV\\\":\\\"2015-09-11T19:15:34Z\\\",\\\"UFI\\\":\\\"80c53866-0b64-4c42-9232-33b6b9a50f86\\\",\\\"ZI005_FNA\\\":\\\"No Information\\\",\\\"FCSUBTYPE\\\":100454}},{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":16,\\\"geometry\\\":{\\\"type\\\":\\\"MultiLineString\\\",\\\"coordinates\\\":[[[36.3951580,32.6996890],[36.3981120,32.6997940]]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"GB075\\\",\\\"ZI001_SDV\\\":\\\"2015-09-11T19:15:34Z\\\",\\\"UFI\\\":\\\"7e1929ee-480f-45eb-af1f-aa41017d079a\\\",\\\"ZI005_FNA\\\":\\\"No Information\\\",\\\"FCSUBTYPE\\\":100454}},{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":17,\\\"geometry\\\":{\\\"type\\\":\\\"MultiLineString\\\",\\\"coordinates\\\":[[[36.4009090,32.7000770],[36.3989300,32.6988040]]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"GB075\\\",\\\"ZI001_SDV\\\":\\\"2015-09-11T19:15:34Z\\\",\\\"UFI\\\":\\\"755c84a1-bee7-4a06-940a-2412271b6d98\\\",\\\"ZI005_FNA\\\":\\\"No Information\\\",\\\"FCSUBTYPE\\\":100454}},{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":18,\\\"geometry\\\":{\\\"type\\\":\\\"MultiLineString\\\",\\\"coordinates\\\":[[[36.3951580,32.6996890],[36.3951760,32.6991010],[36.3952030,32.6987410]]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"GB075\\\",\\\"ZI001_SDV\\\":\\\"2015-09-11T19:15:34Z\\\",\\\"UFI\\\":\\\"74265cb8-e821-4b6a-b1ec-aac5cf988761\\\",\\\"ZI005_FNA\\\":\\\"No Information\\\",\\\"FCSUBTYPE\\\":100454}},{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":19,\\\"geometry\\\":{\\\"type\\\":\\\"MultiLineString\\\",\\\"coordinates\\\":[[[36.3989300,32.6988040],[36.3987500,32.6989870],[36.3981120,32.6997940]]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"GB075\\\",\\\"ZI001_SDV\\\":\\\"2015-09-11T19:15:34Z\\\",\\\"UFI\\\":\\\"81bb2203-dda3-484e-9509-a8dd09e52ac0\\\",\\\"ZI005_FNA\\\":\\\"No Information\\\",\\\"FCSUBTYPE\\\":100454}},{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":20,\\\"geometry\\\":{\\\"type\\\":\\\"MultiLineString\\\",\\\"coordinates\\\":[[[36.3981120,32.6997940],[36.3982740,32.7004670],[36.3983450,32.7007660]]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"GB075\\\",\\\"ZI001_SDV\\\":\\\"2015-09-11T19:15:34Z\\\",\\\"UFI\\\":\\\"b3a4e01c-98e1-4076-852c-84363fbba283\\\",\\\"ZI005_FNA\\\":\\\"No Information\\\",\\\"FCSUBTYPE\\\":100454}}],\\\"links\\\":[{\\\"href\\\":\\\"https://demo.ldproxy.net/daraa/collections/AeronauticCrv/items?limit=250&filter=s_InterSectS%28geometry%2Cgeometry%29&f=json\\\",\\\"rel\\\":\\\"self\\\",\\\"type\\\":\\\"application/geo+json\\\",\\\"title\\\":\\\"This document\\\"},{\\\"href\\\":\\\"https://demo.ldproxy.net/daraa/collections/AeronauticCrv/items?limit=250&filter=s_InterSectS%28geometry%2Cgeometry%29&f=jsonfgc\\\",\\\"rel\\\":\\\"alternate\\\",\\\"type\\\":\\\"application/vnd.ogc.fg+json;compatibility=geojson\\\",\\\"title\\\":\\\"This document as JSON-FG (GeoJSON Compatibility Mode)\\\"},{\\\"href\\\":\\\"https://demo.ldproxy.net/daraa/collections/AeronauticCrv/items?limit=250&filter=s_InterSectS%28geometry%2Cgeometry%29&f=csv\\\",\\\"rel\\\":\\\"alternate\\\",\\\"type\\\":\\\"text/csv\\\",\\\"title\\\":\\\"This document as CSV\\\"},{\\\"href\\\":\\\"https://demo.ldproxy.net/daraa/collections/AeronauticCrv/items?limit=250&filter=s_InterSectS%28geometry%2Cgeometry%29&f=fgb\\\",\\\"rel\\\":\\\"alternate\\\",\\\"type\\\":\\\"application/flatgeobuf\\\",\\\"title\\\":\\\"This document as FlatGeobuf\\\"},{\\\"href\\\":\\\"https://demo.ldproxy.net/daraa/collections/AeronauticCrv/items?limit=250&filter=s_InterSectS%28geometry%2Cgeometry%29&f=html\\\",\\\"rel\\\":\\\"alternate\\\",\\\"type\\\":\\\"text/html\\\",\\\"title\\\":\\\"This document as HTML\\\"},{\\\"href\\\":\\\"https://demo.ldproxy.net/daraa/collections/AeronauticCrv/items?limit=250&filter=s_InterSectS%28geometry%2Cgeometry%29&f=jsonfg\\\",\\\"rel\\\":\\\"alternate\\\",\\\"type\\\":\\\"application/vnd.ogc.fg+json\\\",\\\"title\\\":\\\"This document as JSON-FG\\\"},{\\\"href\\\":\\\"http://www.opengis.net/def/profile/ogc/0/rel-as-link\\\",\\\"rel\\\":\\\"profile\\\",\\\"title\\\":\\\"Profile used in the response\\\"}]}\",\n    \"language\": \"http\",\n    \"index\": 0\n  }\n]",
              "code": "//Data is selected using filter\n        api\n          .get(\"/daraa/collections/AeronauticCrv/items\")\n          .query({ limit: LIMIT, ...test.query })\n          // Success and returns GeoJSON\n          .expect(200)\n          .expect(CONTENT_TYPE, GEO_JSON)\n          // Saves response if it is needed later\n          .expect(async (res) => {\n            if (test.withBody) {\n              await test.withBody(res.body);\n            }\n            // Either calls shouldIncludeId or featuresMatch\n            test.expect(res.body, test);\n          })",
              "err": {},
              "uuid": "3886497f-3423-4990-833d-cc2e519dc265",
              "parentUUID": "3212e586-417d-4bb7-9f01-956f63936f9e",
              "isHook": false,
              "skipped": false,
              "options": {}
            },
            {
              "title": "filter=s_InterSectS(geometry,ENVELOPE(36.395158,32.693301,36.430814,32.717333))",
              "fullTitle": "intersects filter=s_InterSectS(geometry,ENVELOPE(36.395158,32.693301,36.430814,32.717333))",
              "timedOut": false,
              "duration": 157,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "[\n  {\n    \"title\": \"Request\",\n    \"value\": \"GET https://demo.ldproxy.net/daraa/collections/AeronauticCrv/items?limit=250&filter=s_InterSectS%28geometry%2CENVELOPE%2836.395158%2C32.693301%2C36.430814%2C32.717333%29%29 HTTP/1.1\\nAccept: application/geo+json, application/problem+json;q=0.8\\n\",\n    \"language\": \"http\",\n    \"index\": 0\n  },\n  {\n    \"title\": \"Response\",\n    \"value\": \"Status Code: 200\\ncontent-crs: <http://www.opengis.net/def/crs/OGC/1.3/CRS84>\\ncontent-disposition: inline; filename=\\\"AeronauticCrv.json\\\"\\ncontent-encoding: gzip\\ncontent-language: en\\ncontent-type: application/geo+json\\ndate: Thu, 25 May 2023 15:55:43 GMT\\nlink: <https://demo.ldproxy.net/daraa/collections/AeronauticCrv/items?limit=250&filter=s_InterSectS%28geometry%2CENVELOPE%2836.395158%2C32.693301%2C36.430814%2C32.717333%29%29&f=csv>; rel=\\\"alternate\\\"; title=\\\"This document as CSV\\\"; type=\\\"text/csv\\\", <https://demo.ldproxy.net/daraa/collections/AeronauticCrv/items?limit=250&filter=s_InterSectS%28geometry%2CENVELOPE%2836.395158%2C32.693301%2C36.430814%2C32.717333%29%29&f=fgb>; rel=\\\"alternate\\\"; title=\\\"This document as FlatGeobuf\\\"; type=\\\"application/flatgeobuf\\\", <https://demo.ldproxy.net/daraa/collections/AeronauticCrv/items?limit=250&filter=s_InterSectS%28geometry%2CENVELOPE%2836.395158%2C32.693301%2C36.430814%2C32.717333%29%29&f=html>; rel=\\\"alternate\\\"; title=\\\"This document as HTML\\\"; type=\\\"text/html\\\", <https://demo.ldproxy.net/daraa/collections/AeronauticCrv/items?limit=250&filter=s_InterSectS%28geometry%2CENVELOPE%2836.395158%2C32.693301%2C36.430814%2C32.717333%29%29&f=jsonfg>; rel=\\\"alternate\\\"; title=\\\"This document as JSON-FG\\\"; type=\\\"application/vnd.ogc.fg+json\\\", <https://demo.ldproxy.net/daraa/collections/AeronauticCrv/items?limit=250&filter=s_InterSectS%28geometry%2CENVELOPE%2836.395158%2C32.693301%2C36.430814%2C32.717333%29%29&f=jsonfgc>; rel=\\\"alternate\\\"; title=\\\"This document as JSON-FG (GeoJSON Compatibility Mode)\\\"; type=\\\"application/vnd.ogc.fg+json;compatibility=geojson\\\", <http://www.opengis.net/def/profile/ogc/0/rel-as-link>; rel=\\\"profile\\\"; title=\\\"Profile used in the response\\\", <https://demo.ldproxy.net/daraa/collections/AeronauticCrv/items?limit=250&filter=s_InterSectS%28geometry%2CENVELOPE%2836.395158%2C32.693301%2C36.430814%2C32.717333%29%29&f=json>; rel=\\\"self\\\"; title=\\\"This document\\\"; type=\\\"application/geo+json\\\"\\nvary: Accept,Accept-Language,Accept-Encoding\\nx-request-id: 93f85537-6c85-4a9f-926d-b30fbb1e0e82\\ncontent-length: 1803\\nconnection: close\\n\\n{\\\"type\\\":\\\"FeatureCollection\\\",\\\"numberReturned\\\":20,\\\"numberMatched\\\":20,\\\"timeStamp\\\":\\\"2023-05-25T15:55:43Z\\\",\\\"features\\\":[{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":1,\\\"geometry\\\":{\\\"type\\\":\\\"MultiLineString\\\",\\\"coordinates\\\":[[[36.4270030,32.7114540],[36.4251990,32.7137030]]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"GB075\\\",\\\"ZI001_SDV\\\":\\\"2011-03-16T14:51:12Z\\\",\\\"UFI\\\":\\\"2d008c34-4458-4226-b335-cf903d261ce9\\\",\\\"ZI005_FNA\\\":\\\"No Information\\\",\\\"FCSUBTYPE\\\":100454}},{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":2,\\\"geometry\\\":{\\\"type\\\":\\\"MultiLineString\\\",\\\"coordinates\\\":[[[36.4009090,32.7000770],[36.4031330,32.7013330],[36.4208880,32.7113020],[36.4231110,32.7125400],[36.4251990,32.7137030],[36.4252970,32.7137690]]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"GB075\\\",\\\"ZI001_SDV\\\":\\\"2015-09-11T19:15:35Z\\\",\\\"UFI\\\":\\\"1257bf27-3f91-461d-8a3b-a95af2ea1f5a\\\",\\\"ZI005_FNA\\\":\\\"No Information\\\",\\\"FCSUBTYPE\\\":100454}},{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":3,\\\"geometry\\\":{\\\"type\\\":\\\"MultiLineString\\\",\\\"coordinates\\\":[[[36.4049030,32.6990350],[36.4031330,32.7013330]]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"GB075\\\",\\\"ZI001_SDV\\\":\\\"2011-03-16T14:51:12Z\\\",\\\"UFI\\\":\\\"0ee76209-d69a-4cf5-b74f-dfe563ddede7\\\",\\\"ZI005_FNA\\\":\\\"No Information\\\",\\\"FCSUBTYPE\\\":100454}},{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":4,\\\"geometry\\\":{\\\"type\\\":\\\"MultiLineString\\\",\\\"coordinates\\\":[[[36.4226450,32.7090630],[36.4208880,32.7113020]]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"GB075\\\",\\\"ZI001_SDV\\\":\\\"2011-03-16T14:51:13Z\\\",\\\"UFI\\\":\\\"0463e92c-cf42-4c73-ac2f-81e0d7a0654c\\\",\\\"ZI005_FNA\\\":\\\"No Information\\\",\\\"FCSUBTYPE\\\":100454}},{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":5,\\\"geometry\\\":{\\\"type\\\":\\\"MultiLineString\\\",\\\"coordinates\\\":[[[36.3989300,32.6988040],[36.4005290,32.6965830]]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"GB075\\\",\\\"ZI001_SDV\\\":\\\"2015-09-11T19:15:35Z\\\",\\\"UFI\\\":\\\"944e084c-49dc-42b3-8566-bc75e5fecf39\\\",\\\"ZI005_FNA\\\":\\\"No Information\\\",\\\"FCSUBTYPE\\\":100454}},{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":6,\\\"geometry\\\":{\\\"type\\\":\\\"MultiLineString\\\",\\\"coordinates\\\":[[[36.4025330,32.6952330],[36.4019600,32.6953240],[36.4014490,32.6954050],[36.4012670,32.6955310],[36.4000010,32.6933010],[36.3994110,32.6935090],[36.3989490,32.6936710],[36.4000010,32.6933010],[36.4012670,32.6955310],[36.4005290,32.6965830],[36.4005160,32.6962630],[36.3995820,32.6946740]]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"GB075\\\",\\\"ZI001_SDV\\\":\\\"2012-01-03T16:24:13Z\\\",\\\"UFI\\\":\\\"6d64efa5-affb-474e-893f-47aabac7b5da\\\",\\\"ZI005_FNA\\\":\\\"No Information\\\",\\\"FCSUBTYPE\\\":100454}},{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":7,\\\"geometry\\\":{\\\"type\\\":\\\"MultiLineString\\\",\\\"coordinates\\\":[[[36.4234650,32.7141110],[36.4234560,32.7140710],[36.4231110,32.7125400]]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"GB075\\\",\\\"ZI001_SDV\\\":\\\"2012-01-03T16:24:13Z\\\",\\\"UFI\\\":\\\"5ccc277e-fa94-49ca-b566-d41246d3e42b\\\",\\\"ZI005_FNA\\\":\\\"No Information\\\",\\\"FCSUBTYPE\\\":100454}},{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":8,\\\"geometry\\\":{\\\"type\\\":\\\"MultiLineString\\\",\\\"coordinates\\\":[[[36.4294830,32.7114930],[36.4284420,32.7114460],[36.4272630,32.7113940],[36.4270030,32.7114540]]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"GB075\\\",\\\"ZI001_SDV\\\":\\\"2012-01-03T16:24:13Z\\\",\\\"UFI\\\":\\\"b9175c1f-43c2-455b-bdd0-f91cdffaaf6f\\\",\\\"ZI005_FNA\\\":\\\"No Information\\\",\\\"FCSUBTYPE\\\":100454}},{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":9,\\\"geometry\\\":{\\\"type\\\":\\\"MultiLineString\\\",\\\"coordinates\\\":[[[36.4259320,32.7173330],[36.4257630,32.7170350],[36.4245000,32.7148030],[36.4257630,32.7170350],[36.4263700,32.7167880],[36.4267580,32.7166290]]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"GB075\\\",\\\"ZI001_SDV\\\":\\\"2012-01-03T16:24:14Z\\\",\\\"UFI\\\":\\\"c9a2d4e5-67d6-458b-a89a-d664d99ea865\\\",\\\"ZI005_FNA\\\":\\\"No Information\\\",\\\"FCSUBTYPE\\\":100454}},{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":10,\\\"geometry\\\":{\\\"type\\\":\\\"MultiLineString\\\",\\\"coordinates\\\":[[[36.3993320,32.7003240],[36.4009090,32.7000770]]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"GB075\\\",\\\"ZI001_SDV\\\":\\\"2015-09-11T19:15:35Z\\\",\\\"UFI\\\":\\\"d6066359-c2cc-460e-98d4-332b915fb21f\\\",\\\"ZI005_FNA\\\":\\\"No Information\\\",\\\"FCSUBTYPE\\\":100454}},{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":11,\\\"geometry\\\":{\\\"type\\\":\\\"MultiLineString\\\",\\\"coordinates\\\":[[[36.4268870,32.7099400],[36.4248150,32.7102540]]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"GB075\\\",\\\"ZI001_SDV\\\":\\\"2012-01-03T16:24:15Z\\\",\\\"UFI\\\":\\\"e4d806b5-73ce-4a76-ba6b-f2d80b1cad30\\\",\\\"ZI005_FNA\\\":\\\"No Information\\\",\\\"FCSUBTYPE\\\":100454}},{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":12,\\\"geometry\\\":{\\\"type\\\":\\\"MultiLineString\\\",\\\"coordinates\\\":[[[36.4022750,32.6963170],[36.4026520,32.6977730]]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"GB075\\\",\\\"ZI001_SDV\\\":\\\"2012-01-03T16:24:16Z\\\",\\\"UFI\\\":\\\"096f8898-4886-408a-b3a3-af40829b8508\\\",\\\"ZI005_FNA\\\":\\\"No Information\\\",\\\"FCSUBTYPE\\\":100454}},{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":13,\\\"geometry\\\":{\\\"type\\\":\\\"MultiLineString\\\",\\\"coordinates\\\":[[[36.4233570,32.7150680],[36.4237650,32.7150030],[36.4244410,32.7148960],[36.4245000,32.7148030],[36.4250700,32.7139060],[36.4251990,32.7137030],[36.4250700,32.7139060],[36.4252450,32.7141020],[36.4262220,32.7157360]]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"GB075\\\",\\\"ZI001_SDV\\\":\\\"2012-01-03T16:24:16Z\\\",\\\"UFI\\\":\\\"d27b2fbd-01e2-44d2-81fc-dd4b1f1b89bb\\\",\\\"ZI005_FNA\\\":\\\"No Information\\\",\\\"FCSUBTYPE\\\":100454}},{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":14,\\\"geometry\\\":{\\\"type\\\":\\\"MultiLineString\\\",\\\"coordinates\\\":[[[36.4284420,32.7114460],[36.4292690,32.7106350],[36.4307820,32.7107260],[36.4308140,32.7112130],[36.4307490,32.7116100]]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"GB075\\\",\\\"ZI001_SDV\\\":\\\"2012-01-03T16:24:17Z\\\",\\\"UFI\\\":\\\"29c39f1d-9c5e-4950-9f9d-80a4ea9231bf\\\",\\\"ZI005_FNA\\\":\\\"No Information\\\",\\\"FCSUBTYPE\\\":100454}},{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":15,\\\"geometry\\\":{\\\"type\\\":\\\"MultiLineString\\\",\\\"coordinates\\\":[[[36.3987500,32.6989870],[36.3964050,32.6988310]]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"GB075\\\",\\\"ZI001_SDV\\\":\\\"2015-09-11T19:15:34Z\\\",\\\"UFI\\\":\\\"80c53866-0b64-4c42-9232-33b6b9a50f86\\\",\\\"ZI005_FNA\\\":\\\"No Information\\\",\\\"FCSUBTYPE\\\":100454}},{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":16,\\\"geometry\\\":{\\\"type\\\":\\\"MultiLineString\\\",\\\"coordinates\\\":[[[36.3951580,32.6996890],[36.3981120,32.6997940]]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"GB075\\\",\\\"ZI001_SDV\\\":\\\"2015-09-11T19:15:34Z\\\",\\\"UFI\\\":\\\"7e1929ee-480f-45eb-af1f-aa41017d079a\\\",\\\"ZI005_FNA\\\":\\\"No Information\\\",\\\"FCSUBTYPE\\\":100454}},{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":17,\\\"geometry\\\":{\\\"type\\\":\\\"MultiLineString\\\",\\\"coordinates\\\":[[[36.4009090,32.7000770],[36.3989300,32.6988040]]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"GB075\\\",\\\"ZI001_SDV\\\":\\\"2015-09-11T19:15:34Z\\\",\\\"UFI\\\":\\\"755c84a1-bee7-4a06-940a-2412271b6d98\\\",\\\"ZI005_FNA\\\":\\\"No Information\\\",\\\"FCSUBTYPE\\\":100454}},{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":18,\\\"geometry\\\":{\\\"type\\\":\\\"MultiLineString\\\",\\\"coordinates\\\":[[[36.3951580,32.6996890],[36.3951760,32.6991010],[36.3952030,32.6987410]]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"GB075\\\",\\\"ZI001_SDV\\\":\\\"2015-09-11T19:15:34Z\\\",\\\"UFI\\\":\\\"74265cb8-e821-4b6a-b1ec-aac5cf988761\\\",\\\"ZI005_FNA\\\":\\\"No Information\\\",\\\"FCSUBTYPE\\\":100454}},{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":19,\\\"geometry\\\":{\\\"type\\\":\\\"MultiLineString\\\",\\\"coordinates\\\":[[[36.3989300,32.6988040],[36.3987500,32.6989870],[36.3981120,32.6997940]]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"GB075\\\",\\\"ZI001_SDV\\\":\\\"2015-09-11T19:15:34Z\\\",\\\"UFI\\\":\\\"81bb2203-dda3-484e-9509-a8dd09e52ac0\\\",\\\"ZI005_FNA\\\":\\\"No Information\\\",\\\"FCSUBTYPE\\\":100454}},{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":20,\\\"geometry\\\":{\\\"type\\\":\\\"MultiLineString\\\",\\\"coordinates\\\":[[[36.3981120,32.6997940],[36.3982740,32.7004670],[36.3983450,32.7007660]]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"GB075\\\",\\\"ZI001_SDV\\\":\\\"2015-09-11T19:15:34Z\\\",\\\"UFI\\\":\\\"b3a4e01c-98e1-4076-852c-84363fbba283\\\",\\\"ZI005_FNA\\\":\\\"No Information\\\",\\\"FCSUBTYPE\\\":100454}}],\\\"links\\\":[{\\\"href\\\":\\\"https://demo.ldproxy.net/daraa/collections/AeronauticCrv/items?limit=250&filter=s_InterSectS%28geometry%2CENVELOPE%2836.395158%2C32.693301%2C36.430814%2C32.717333%29%29&f=json\\\",\\\"rel\\\":\\\"self\\\",\\\"type\\\":\\\"application/geo+json\\\",\\\"title\\\":\\\"This document\\\"},{\\\"href\\\":\\\"https://demo.ldproxy.net/daraa/collections/AeronauticCrv/items?limit=250&filter=s_InterSectS%28geometry%2CENVELOPE%2836.395158%2C32.693301%2C36.430814%2C32.717333%29%29&f=jsonfgc\\\",\\\"rel\\\":\\\"alternate\\\",\\\"type\\\":\\\"application/vnd.ogc.fg+json;compatibility=geojson\\\",\\\"title\\\":\\\"This document as JSON-FG (GeoJSON Compatibility Mode)\\\"},{\\\"href\\\":\\\"https://demo.ldproxy.net/daraa/collections/AeronauticCrv/items?limit=250&filter=s_InterSectS%28geometry%2CENVELOPE%2836.395158%2C32.693301%2C36.430814%2C32.717333%29%29&f=csv\\\",\\\"rel\\\":\\\"alternate\\\",\\\"type\\\":\\\"text/csv\\\",\\\"title\\\":\\\"This document as CSV\\\"},{\\\"href\\\":\\\"https://demo.ldproxy.net/daraa/collections/AeronauticCrv/items?limit=250&filter=s_InterSectS%28geometry%2CENVELOPE%2836.395158%2C32.693301%2C36.430814%2C32.717333%29%29&f=fgb\\\",\\\"rel\\\":\\\"alternate\\\",\\\"type\\\":\\\"application/flatgeobuf\\\",\\\"title\\\":\\\"This document as FlatGeobuf\\\"},{\\\"href\\\":\\\"https://demo.ldproxy.net/daraa/collections/AeronauticCrv/items?limit=250&filter=s_InterSectS%28geometry%2CENVELOPE%2836.395158%2C32.693301%2C36.430814%2C32.717333%29%29&f=html\\\",\\\"rel\\\":\\\"alternate\\\",\\\"type\\\":\\\"text/html\\\",\\\"title\\\":\\\"This document as HTML\\\"},{\\\"href\\\":\\\"https://demo.ldproxy.net/daraa/collections/AeronauticCrv/items?limit=250&filter=s_InterSectS%28geometry%2CENVELOPE%2836.395158%2C32.693301%2C36.430814%2C32.717333%29%29&f=jsonfg\\\",\\\"rel\\\":\\\"alternate\\\",\\\"type\\\":\\\"application/vnd.ogc.fg+json\\\",\\\"title\\\":\\\"This document as JSON-FG\\\"},{\\\"href\\\":\\\"http://www.opengis.net/def/profile/ogc/0/rel-as-link\\\",\\\"rel\\\":\\\"profile\\\",\\\"title\\\":\\\"Profile used in the response\\\"}]}\",\n    \"language\": \"http\",\n    \"index\": 0\n  }\n]",
              "code": "//Data is selected using filter\n        api\n          .get(\"/daraa/collections/AeronauticCrv/items\")\n          .query({ limit: LIMIT, ...test.query })\n          // Success and returns GeoJSON\n          .expect(200)\n          .expect(CONTENT_TYPE, GEO_JSON)\n          // Saves response if it is needed later\n          .expect(async (res) => {\n            if (test.withBody) {\n              await test.withBody(res.body);\n            }\n            // Either calls shouldIncludeId or featuresMatch\n            test.expect(res.body, test);\n          })",
              "err": {},
              "uuid": "b7402bad-2351-44a9-9611-acf7d8a226c9",
              "parentUUID": "3212e586-417d-4bb7-9f01-956f63936f9e",
              "isHook": false,
              "skipped": false,
              "options": {}
            },
            {
              "title": "filter=s_InterSectS(ENVELOPE(36.395158,32.693301,36.430814,32.717333),geometry)",
              "fullTitle": "intersects filter=s_InterSectS(ENVELOPE(36.395158,32.693301,36.430814,32.717333),geometry)",
              "timedOut": false,
              "duration": 139,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "[\n  {\n    \"title\": \"Request\",\n    \"value\": \"GET https://demo.ldproxy.net/daraa/collections/AeronauticCrv/items?limit=250&filter=s_InterSectS%28ENVELOPE%2836.395158%2C32.693301%2C36.430814%2C32.717333%29%2Cgeometry%29 HTTP/1.1\\nAccept: application/geo+json, application/problem+json;q=0.8\\n\",\n    \"language\": \"http\",\n    \"index\": 0\n  },\n  {\n    \"title\": \"Response\",\n    \"value\": \"Status Code: 200\\ncontent-crs: <http://www.opengis.net/def/crs/OGC/1.3/CRS84>\\ncontent-disposition: inline; filename=\\\"AeronauticCrv.json\\\"\\ncontent-encoding: gzip\\ncontent-language: en\\ncontent-type: application/geo+json\\ndate: Thu, 25 May 2023 15:55:43 GMT\\nlink: <https://demo.ldproxy.net/daraa/collections/AeronauticCrv/items?limit=250&filter=s_InterSectS%28ENVELOPE%2836.395158%2C32.693301%2C36.430814%2C32.717333%29%2Cgeometry%29&f=csv>; rel=\\\"alternate\\\"; title=\\\"This document as CSV\\\"; type=\\\"text/csv\\\", <https://demo.ldproxy.net/daraa/collections/AeronauticCrv/items?limit=250&filter=s_InterSectS%28ENVELOPE%2836.395158%2C32.693301%2C36.430814%2C32.717333%29%2Cgeometry%29&f=fgb>; rel=\\\"alternate\\\"; title=\\\"This document as FlatGeobuf\\\"; type=\\\"application/flatgeobuf\\\", <https://demo.ldproxy.net/daraa/collections/AeronauticCrv/items?limit=250&filter=s_InterSectS%28ENVELOPE%2836.395158%2C32.693301%2C36.430814%2C32.717333%29%2Cgeometry%29&f=html>; rel=\\\"alternate\\\"; title=\\\"This document as HTML\\\"; type=\\\"text/html\\\", <https://demo.ldproxy.net/daraa/collections/AeronauticCrv/items?limit=250&filter=s_InterSectS%28ENVELOPE%2836.395158%2C32.693301%2C36.430814%2C32.717333%29%2Cgeometry%29&f=jsonfg>; rel=\\\"alternate\\\"; title=\\\"This document as JSON-FG\\\"; type=\\\"application/vnd.ogc.fg+json\\\", <https://demo.ldproxy.net/daraa/collections/AeronauticCrv/items?limit=250&filter=s_InterSectS%28ENVELOPE%2836.395158%2C32.693301%2C36.430814%2C32.717333%29%2Cgeometry%29&f=jsonfgc>; rel=\\\"alternate\\\"; title=\\\"This document as JSON-FG (GeoJSON Compatibility Mode)\\\"; type=\\\"application/vnd.ogc.fg+json;compatibility=geojson\\\", <http://www.opengis.net/def/profile/ogc/0/rel-as-link>; rel=\\\"profile\\\"; title=\\\"Profile used in the response\\\", <https://demo.ldproxy.net/daraa/collections/AeronauticCrv/items?limit=250&filter=s_InterSectS%28ENVELOPE%2836.395158%2C32.693301%2C36.430814%2C32.717333%29%2Cgeometry%29&f=json>; rel=\\\"self\\\"; title=\\\"This document\\\"; type=\\\"application/geo+json\\\"\\nvary: Accept,Accept-Language,Accept-Encoding\\nx-request-id: b3ac10d1-bb32-45aa-8d56-37238f9f86dc\\ncontent-length: 1803\\nconnection: close\\n\\n{\\\"type\\\":\\\"FeatureCollection\\\",\\\"numberReturned\\\":20,\\\"numberMatched\\\":20,\\\"timeStamp\\\":\\\"2023-05-25T15:55:43Z\\\",\\\"features\\\":[{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":1,\\\"geometry\\\":{\\\"type\\\":\\\"MultiLineString\\\",\\\"coordinates\\\":[[[36.4270030,32.7114540],[36.4251990,32.7137030]]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"GB075\\\",\\\"ZI001_SDV\\\":\\\"2011-03-16T14:51:12Z\\\",\\\"UFI\\\":\\\"2d008c34-4458-4226-b335-cf903d261ce9\\\",\\\"ZI005_FNA\\\":\\\"No Information\\\",\\\"FCSUBTYPE\\\":100454}},{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":2,\\\"geometry\\\":{\\\"type\\\":\\\"MultiLineString\\\",\\\"coordinates\\\":[[[36.4009090,32.7000770],[36.4031330,32.7013330],[36.4208880,32.7113020],[36.4231110,32.7125400],[36.4251990,32.7137030],[36.4252970,32.7137690]]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"GB075\\\",\\\"ZI001_SDV\\\":\\\"2015-09-11T19:15:35Z\\\",\\\"UFI\\\":\\\"1257bf27-3f91-461d-8a3b-a95af2ea1f5a\\\",\\\"ZI005_FNA\\\":\\\"No Information\\\",\\\"FCSUBTYPE\\\":100454}},{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":3,\\\"geometry\\\":{\\\"type\\\":\\\"MultiLineString\\\",\\\"coordinates\\\":[[[36.4049030,32.6990350],[36.4031330,32.7013330]]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"GB075\\\",\\\"ZI001_SDV\\\":\\\"2011-03-16T14:51:12Z\\\",\\\"UFI\\\":\\\"0ee76209-d69a-4cf5-b74f-dfe563ddede7\\\",\\\"ZI005_FNA\\\":\\\"No Information\\\",\\\"FCSUBTYPE\\\":100454}},{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":4,\\\"geometry\\\":{\\\"type\\\":\\\"MultiLineString\\\",\\\"coordinates\\\":[[[36.4226450,32.7090630],[36.4208880,32.7113020]]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"GB075\\\",\\\"ZI001_SDV\\\":\\\"2011-03-16T14:51:13Z\\\",\\\"UFI\\\":\\\"0463e92c-cf42-4c73-ac2f-81e0d7a0654c\\\",\\\"ZI005_FNA\\\":\\\"No Information\\\",\\\"FCSUBTYPE\\\":100454}},{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":5,\\\"geometry\\\":{\\\"type\\\":\\\"MultiLineString\\\",\\\"coordinates\\\":[[[36.3989300,32.6988040],[36.4005290,32.6965830]]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"GB075\\\",\\\"ZI001_SDV\\\":\\\"2015-09-11T19:15:35Z\\\",\\\"UFI\\\":\\\"944e084c-49dc-42b3-8566-bc75e5fecf39\\\",\\\"ZI005_FNA\\\":\\\"No Information\\\",\\\"FCSUBTYPE\\\":100454}},{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":6,\\\"geometry\\\":{\\\"type\\\":\\\"MultiLineString\\\",\\\"coordinates\\\":[[[36.4025330,32.6952330],[36.4019600,32.6953240],[36.4014490,32.6954050],[36.4012670,32.6955310],[36.4000010,32.6933010],[36.3994110,32.6935090],[36.3989490,32.6936710],[36.4000010,32.6933010],[36.4012670,32.6955310],[36.4005290,32.6965830],[36.4005160,32.6962630],[36.3995820,32.6946740]]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"GB075\\\",\\\"ZI001_SDV\\\":\\\"2012-01-03T16:24:13Z\\\",\\\"UFI\\\":\\\"6d64efa5-affb-474e-893f-47aabac7b5da\\\",\\\"ZI005_FNA\\\":\\\"No Information\\\",\\\"FCSUBTYPE\\\":100454}},{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":7,\\\"geometry\\\":{\\\"type\\\":\\\"MultiLineString\\\",\\\"coordinates\\\":[[[36.4234650,32.7141110],[36.4234560,32.7140710],[36.4231110,32.7125400]]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"GB075\\\",\\\"ZI001_SDV\\\":\\\"2012-01-03T16:24:13Z\\\",\\\"UFI\\\":\\\"5ccc277e-fa94-49ca-b566-d41246d3e42b\\\",\\\"ZI005_FNA\\\":\\\"No Information\\\",\\\"FCSUBTYPE\\\":100454}},{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":8,\\\"geometry\\\":{\\\"type\\\":\\\"MultiLineString\\\",\\\"coordinates\\\":[[[36.4294830,32.7114930],[36.4284420,32.7114460],[36.4272630,32.7113940],[36.4270030,32.7114540]]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"GB075\\\",\\\"ZI001_SDV\\\":\\\"2012-01-03T16:24:13Z\\\",\\\"UFI\\\":\\\"b9175c1f-43c2-455b-bdd0-f91cdffaaf6f\\\",\\\"ZI005_FNA\\\":\\\"No Information\\\",\\\"FCSUBTYPE\\\":100454}},{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":9,\\\"geometry\\\":{\\\"type\\\":\\\"MultiLineString\\\",\\\"coordinates\\\":[[[36.4259320,32.7173330],[36.4257630,32.7170350],[36.4245000,32.7148030],[36.4257630,32.7170350],[36.4263700,32.7167880],[36.4267580,32.7166290]]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"GB075\\\",\\\"ZI001_SDV\\\":\\\"2012-01-03T16:24:14Z\\\",\\\"UFI\\\":\\\"c9a2d4e5-67d6-458b-a89a-d664d99ea865\\\",\\\"ZI005_FNA\\\":\\\"No Information\\\",\\\"FCSUBTYPE\\\":100454}},{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":10,\\\"geometry\\\":{\\\"type\\\":\\\"MultiLineString\\\",\\\"coordinates\\\":[[[36.3993320,32.7003240],[36.4009090,32.7000770]]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"GB075\\\",\\\"ZI001_SDV\\\":\\\"2015-09-11T19:15:35Z\\\",\\\"UFI\\\":\\\"d6066359-c2cc-460e-98d4-332b915fb21f\\\",\\\"ZI005_FNA\\\":\\\"No Information\\\",\\\"FCSUBTYPE\\\":100454}},{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":11,\\\"geometry\\\":{\\\"type\\\":\\\"MultiLineString\\\",\\\"coordinates\\\":[[[36.4268870,32.7099400],[36.4248150,32.7102540]]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"GB075\\\",\\\"ZI001_SDV\\\":\\\"2012-01-03T16:24:15Z\\\",\\\"UFI\\\":\\\"e4d806b5-73ce-4a76-ba6b-f2d80b1cad30\\\",\\\"ZI005_FNA\\\":\\\"No Information\\\",\\\"FCSUBTYPE\\\":100454}},{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":12,\\\"geometry\\\":{\\\"type\\\":\\\"MultiLineString\\\",\\\"coordinates\\\":[[[36.4022750,32.6963170],[36.4026520,32.6977730]]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"GB075\\\",\\\"ZI001_SDV\\\":\\\"2012-01-03T16:24:16Z\\\",\\\"UFI\\\":\\\"096f8898-4886-408a-b3a3-af40829b8508\\\",\\\"ZI005_FNA\\\":\\\"No Information\\\",\\\"FCSUBTYPE\\\":100454}},{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":13,\\\"geometry\\\":{\\\"type\\\":\\\"MultiLineString\\\",\\\"coordinates\\\":[[[36.4233570,32.7150680],[36.4237650,32.7150030],[36.4244410,32.7148960],[36.4245000,32.7148030],[36.4250700,32.7139060],[36.4251990,32.7137030],[36.4250700,32.7139060],[36.4252450,32.7141020],[36.4262220,32.7157360]]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"GB075\\\",\\\"ZI001_SDV\\\":\\\"2012-01-03T16:24:16Z\\\",\\\"UFI\\\":\\\"d27b2fbd-01e2-44d2-81fc-dd4b1f1b89bb\\\",\\\"ZI005_FNA\\\":\\\"No Information\\\",\\\"FCSUBTYPE\\\":100454}},{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":14,\\\"geometry\\\":{\\\"type\\\":\\\"MultiLineString\\\",\\\"coordinates\\\":[[[36.4284420,32.7114460],[36.4292690,32.7106350],[36.4307820,32.7107260],[36.4308140,32.7112130],[36.4307490,32.7116100]]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"GB075\\\",\\\"ZI001_SDV\\\":\\\"2012-01-03T16:24:17Z\\\",\\\"UFI\\\":\\\"29c39f1d-9c5e-4950-9f9d-80a4ea9231bf\\\",\\\"ZI005_FNA\\\":\\\"No Information\\\",\\\"FCSUBTYPE\\\":100454}},{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":15,\\\"geometry\\\":{\\\"type\\\":\\\"MultiLineString\\\",\\\"coordinates\\\":[[[36.3987500,32.6989870],[36.3964050,32.6988310]]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"GB075\\\",\\\"ZI001_SDV\\\":\\\"2015-09-11T19:15:34Z\\\",\\\"UFI\\\":\\\"80c53866-0b64-4c42-9232-33b6b9a50f86\\\",\\\"ZI005_FNA\\\":\\\"No Information\\\",\\\"FCSUBTYPE\\\":100454}},{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":16,\\\"geometry\\\":{\\\"type\\\":\\\"MultiLineString\\\",\\\"coordinates\\\":[[[36.3951580,32.6996890],[36.3981120,32.6997940]]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"GB075\\\",\\\"ZI001_SDV\\\":\\\"2015-09-11T19:15:34Z\\\",\\\"UFI\\\":\\\"7e1929ee-480f-45eb-af1f-aa41017d079a\\\",\\\"ZI005_FNA\\\":\\\"No Information\\\",\\\"FCSUBTYPE\\\":100454}},{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":17,\\\"geometry\\\":{\\\"type\\\":\\\"MultiLineString\\\",\\\"coordinates\\\":[[[36.4009090,32.7000770],[36.3989300,32.6988040]]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"GB075\\\",\\\"ZI001_SDV\\\":\\\"2015-09-11T19:15:34Z\\\",\\\"UFI\\\":\\\"755c84a1-bee7-4a06-940a-2412271b6d98\\\",\\\"ZI005_FNA\\\":\\\"No Information\\\",\\\"FCSUBTYPE\\\":100454}},{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":18,\\\"geometry\\\":{\\\"type\\\":\\\"MultiLineString\\\",\\\"coordinates\\\":[[[36.3951580,32.6996890],[36.3951760,32.6991010],[36.3952030,32.6987410]]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"GB075\\\",\\\"ZI001_SDV\\\":\\\"2015-09-11T19:15:34Z\\\",\\\"UFI\\\":\\\"74265cb8-e821-4b6a-b1ec-aac5cf988761\\\",\\\"ZI005_FNA\\\":\\\"No Information\\\",\\\"FCSUBTYPE\\\":100454}},{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":19,\\\"geometry\\\":{\\\"type\\\":\\\"MultiLineString\\\",\\\"coordinates\\\":[[[36.3989300,32.6988040],[36.3987500,32.6989870],[36.3981120,32.6997940]]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"GB075\\\",\\\"ZI001_SDV\\\":\\\"2015-09-11T19:15:34Z\\\",\\\"UFI\\\":\\\"81bb2203-dda3-484e-9509-a8dd09e52ac0\\\",\\\"ZI005_FNA\\\":\\\"No Information\\\",\\\"FCSUBTYPE\\\":100454}},{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":20,\\\"geometry\\\":{\\\"type\\\":\\\"MultiLineString\\\",\\\"coordinates\\\":[[[36.3981120,32.6997940],[36.3982740,32.7004670],[36.3983450,32.7007660]]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"GB075\\\",\\\"ZI001_SDV\\\":\\\"2015-09-11T19:15:34Z\\\",\\\"UFI\\\":\\\"b3a4e01c-98e1-4076-852c-84363fbba283\\\",\\\"ZI005_FNA\\\":\\\"No Information\\\",\\\"FCSUBTYPE\\\":100454}}],\\\"links\\\":[{\\\"href\\\":\\\"https://demo.ldproxy.net/daraa/collections/AeronauticCrv/items?limit=250&filter=s_InterSectS%28ENVELOPE%2836.395158%2C32.693301%2C36.430814%2C32.717333%29%2Cgeometry%29&f=json\\\",\\\"rel\\\":\\\"self\\\",\\\"type\\\":\\\"application/geo+json\\\",\\\"title\\\":\\\"This document\\\"},{\\\"href\\\":\\\"https://demo.ldproxy.net/daraa/collections/AeronauticCrv/items?limit=250&filter=s_InterSectS%28ENVELOPE%2836.395158%2C32.693301%2C36.430814%2C32.717333%29%2Cgeometry%29&f=jsonfgc\\\",\\\"rel\\\":\\\"alternate\\\",\\\"type\\\":\\\"application/vnd.ogc.fg+json;compatibility=geojson\\\",\\\"title\\\":\\\"This document as JSON-FG (GeoJSON Compatibility Mode)\\\"},{\\\"href\\\":\\\"https://demo.ldproxy.net/daraa/collections/AeronauticCrv/items?limit=250&filter=s_InterSectS%28ENVELOPE%2836.395158%2C32.693301%2C36.430814%2C32.717333%29%2Cgeometry%29&f=csv\\\",\\\"rel\\\":\\\"alternate\\\",\\\"type\\\":\\\"text/csv\\\",\\\"title\\\":\\\"This document as CSV\\\"},{\\\"href\\\":\\\"https://demo.ldproxy.net/daraa/collections/AeronauticCrv/items?limit=250&filter=s_InterSectS%28ENVELOPE%2836.395158%2C32.693301%2C36.430814%2C32.717333%29%2Cgeometry%29&f=fgb\\\",\\\"rel\\\":\\\"alternate\\\",\\\"type\\\":\\\"application/flatgeobuf\\\",\\\"title\\\":\\\"This document as FlatGeobuf\\\"},{\\\"href\\\":\\\"https://demo.ldproxy.net/daraa/collections/AeronauticCrv/items?limit=250&filter=s_InterSectS%28ENVELOPE%2836.395158%2C32.693301%2C36.430814%2C32.717333%29%2Cgeometry%29&f=html\\\",\\\"rel\\\":\\\"alternate\\\",\\\"type\\\":\\\"text/html\\\",\\\"title\\\":\\\"This document as HTML\\\"},{\\\"href\\\":\\\"https://demo.ldproxy.net/daraa/collections/AeronauticCrv/items?limit=250&filter=s_InterSectS%28ENVELOPE%2836.395158%2C32.693301%2C36.430814%2C32.717333%29%2Cgeometry%29&f=jsonfg\\\",\\\"rel\\\":\\\"alternate\\\",\\\"type\\\":\\\"application/vnd.ogc.fg+json\\\",\\\"title\\\":\\\"This document as JSON-FG\\\"},{\\\"href\\\":\\\"http://www.opengis.net/def/profile/ogc/0/rel-as-link\\\",\\\"rel\\\":\\\"profile\\\",\\\"title\\\":\\\"Profile used in the response\\\"}]}\",\n    \"language\": \"http\",\n    \"index\": 0\n  }\n]",
              "code": "//Data is selected using filter\n        api\n          .get(\"/daraa/collections/AeronauticCrv/items\")\n          .query({ limit: LIMIT, ...test.query })\n          // Success and returns GeoJSON\n          .expect(200)\n          .expect(CONTENT_TYPE, GEO_JSON)\n          // Saves response if it is needed later\n          .expect(async (res) => {\n            if (test.withBody) {\n              await test.withBody(res.body);\n            }\n            // Either calls shouldIncludeId or featuresMatch\n            test.expect(res.body, test);\n          })",
              "err": {},
              "uuid": "bfd6c019-6dab-4308-aeb3-cd890a8c4e71",
              "parentUUID": "3212e586-417d-4bb7-9f01-956f63936f9e",
              "isHook": false,
              "skipped": false,
              "options": {}
            },
            {
              "title": "filter=s_InterSectS(geometry,ENVELOPE(36.409482999999994,32.691492999999994,36.449483,32.731493))",
              "fullTitle": "intersects filter=s_InterSectS(geometry,ENVELOPE(36.409482999999994,32.691492999999994,36.449483,32.731493))",
              "timedOut": false,
              "duration": 132,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "[\n  {\n    \"title\": \"Request\",\n    \"value\": \"GET https://demo.ldproxy.net/daraa/collections/AeronauticCrv/items?limit=250&filter=s_InterSectS%28geometry%2CENVELOPE%2836.409482999999994%2C32.691492999999994%2C36.449483%2C32.731493%29%29 HTTP/1.1\\nAccept: application/geo+json, application/problem+json;q=0.8\\n\",\n    \"language\": \"http\",\n    \"index\": 0\n  },\n  {\n    \"title\": \"Response\",\n    \"value\": \"Status Code: 200\\ncontent-crs: <http://www.opengis.net/def/crs/OGC/1.3/CRS84>\\ncontent-disposition: inline; filename=\\\"AeronauticCrv.json\\\"\\ncontent-encoding: gzip\\ncontent-language: en\\ncontent-length: 1235\\ncontent-type: application/geo+json\\ndate: Thu, 25 May 2023 15:55:43 GMT\\nlink: <https://demo.ldproxy.net/daraa/collections/AeronauticCrv/items?limit=250&filter=s_InterSectS%28geometry%2CENVELOPE%2836.409482999999994%2C32.691492999999994%2C36.449483%2C32.731493%29%29&f=csv>; rel=\\\"alternate\\\"; title=\\\"This document as CSV\\\"; type=\\\"text/csv\\\", <https://demo.ldproxy.net/daraa/collections/AeronauticCrv/items?limit=250&filter=s_InterSectS%28geometry%2CENVELOPE%2836.409482999999994%2C32.691492999999994%2C36.449483%2C32.731493%29%29&f=fgb>; rel=\\\"alternate\\\"; title=\\\"This document as FlatGeobuf\\\"; type=\\\"application/flatgeobuf\\\", <https://demo.ldproxy.net/daraa/collections/AeronauticCrv/items?limit=250&filter=s_InterSectS%28geometry%2CENVELOPE%2836.409482999999994%2C32.691492999999994%2C36.449483%2C32.731493%29%29&f=html>; rel=\\\"alternate\\\"; title=\\\"This document as HTML\\\"; type=\\\"text/html\\\", <https://demo.ldproxy.net/daraa/collections/AeronauticCrv/items?limit=250&filter=s_InterSectS%28geometry%2CENVELOPE%2836.409482999999994%2C32.691492999999994%2C36.449483%2C32.731493%29%29&f=jsonfg>; rel=\\\"alternate\\\"; title=\\\"This document as JSON-FG\\\"; type=\\\"application/vnd.ogc.fg+json\\\", <https://demo.ldproxy.net/daraa/collections/AeronauticCrv/items?limit=250&filter=s_InterSectS%28geometry%2CENVELOPE%2836.409482999999994%2C32.691492999999994%2C36.449483%2C32.731493%29%29&f=jsonfgc>; rel=\\\"alternate\\\"; title=\\\"This document as JSON-FG (GeoJSON Compatibility Mode)\\\"; type=\\\"application/vnd.ogc.fg+json;compatibility=geojson\\\", <http://www.opengis.net/def/profile/ogc/0/rel-as-link>; rel=\\\"profile\\\"; title=\\\"Profile used in the response\\\", <https://demo.ldproxy.net/daraa/collections/AeronauticCrv/items?limit=250&filter=s_InterSectS%28geometry%2CENVELOPE%2836.409482999999994%2C32.691492999999994%2C36.449483%2C32.731493%29%29&f=json>; rel=\\\"self\\\"; title=\\\"This document\\\"; type=\\\"application/geo+json\\\"\\nvary: Accept,Accept-Language,Accept-Encoding\\nx-request-id: 6839c448-7e99-445e-9aa8-cc941b5b3ee5\\nconnection: close\\n\\n{\\\"type\\\":\\\"FeatureCollection\\\",\\\"numberReturned\\\":9,\\\"numberMatched\\\":9,\\\"timeStamp\\\":\\\"2023-05-25T15:55:43Z\\\",\\\"features\\\":[{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":1,\\\"geometry\\\":{\\\"type\\\":\\\"MultiLineString\\\",\\\"coordinates\\\":[[[36.4270030,32.7114540],[36.4251990,32.7137030]]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"GB075\\\",\\\"ZI001_SDV\\\":\\\"2011-03-16T14:51:12Z\\\",\\\"UFI\\\":\\\"2d008c34-4458-4226-b335-cf903d261ce9\\\",\\\"ZI005_FNA\\\":\\\"No Information\\\",\\\"FCSUBTYPE\\\":100454}},{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":2,\\\"geometry\\\":{\\\"type\\\":\\\"MultiLineString\\\",\\\"coordinates\\\":[[[36.4009090,32.7000770],[36.4031330,32.7013330],[36.4208880,32.7113020],[36.4231110,32.7125400],[36.4251990,32.7137030],[36.4252970,32.7137690]]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"GB075\\\",\\\"ZI001_SDV\\\":\\\"2015-09-11T19:15:35Z\\\",\\\"UFI\\\":\\\"1257bf27-3f91-461d-8a3b-a95af2ea1f5a\\\",\\\"ZI005_FNA\\\":\\\"No Information\\\",\\\"FCSUBTYPE\\\":100454}},{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":4,\\\"geometry\\\":{\\\"type\\\":\\\"MultiLineString\\\",\\\"coordinates\\\":[[[36.4226450,32.7090630],[36.4208880,32.7113020]]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"GB075\\\",\\\"ZI001_SDV\\\":\\\"2011-03-16T14:51:13Z\\\",\\\"UFI\\\":\\\"0463e92c-cf42-4c73-ac2f-81e0d7a0654c\\\",\\\"ZI005_FNA\\\":\\\"No Information\\\",\\\"FCSUBTYPE\\\":100454}},{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":7,\\\"geometry\\\":{\\\"type\\\":\\\"MultiLineString\\\",\\\"coordinates\\\":[[[36.4234650,32.7141110],[36.4234560,32.7140710],[36.4231110,32.7125400]]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"GB075\\\",\\\"ZI001_SDV\\\":\\\"2012-01-03T16:24:13Z\\\",\\\"UFI\\\":\\\"5ccc277e-fa94-49ca-b566-d41246d3e42b\\\",\\\"ZI005_FNA\\\":\\\"No Information\\\",\\\"FCSUBTYPE\\\":100454}},{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":8,\\\"geometry\\\":{\\\"type\\\":\\\"MultiLineString\\\",\\\"coordinates\\\":[[[36.4294830,32.7114930],[36.4284420,32.7114460],[36.4272630,32.7113940],[36.4270030,32.7114540]]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"GB075\\\",\\\"ZI001_SDV\\\":\\\"2012-01-03T16:24:13Z\\\",\\\"UFI\\\":\\\"b9175c1f-43c2-455b-bdd0-f91cdffaaf6f\\\",\\\"ZI005_FNA\\\":\\\"No Information\\\",\\\"FCSUBTYPE\\\":100454}},{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":9,\\\"geometry\\\":{\\\"type\\\":\\\"MultiLineString\\\",\\\"coordinates\\\":[[[36.4259320,32.7173330],[36.4257630,32.7170350],[36.4245000,32.7148030],[36.4257630,32.7170350],[36.4263700,32.7167880],[36.4267580,32.7166290]]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"GB075\\\",\\\"ZI001_SDV\\\":\\\"2012-01-03T16:24:14Z\\\",\\\"UFI\\\":\\\"c9a2d4e5-67d6-458b-a89a-d664d99ea865\\\",\\\"ZI005_FNA\\\":\\\"No Information\\\",\\\"FCSUBTYPE\\\":100454}},{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":11,\\\"geometry\\\":{\\\"type\\\":\\\"MultiLineString\\\",\\\"coordinates\\\":[[[36.4268870,32.7099400],[36.4248150,32.7102540]]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"GB075\\\",\\\"ZI001_SDV\\\":\\\"2012-01-03T16:24:15Z\\\",\\\"UFI\\\":\\\"e4d806b5-73ce-4a76-ba6b-f2d80b1cad30\\\",\\\"ZI005_FNA\\\":\\\"No Information\\\",\\\"FCSUBTYPE\\\":100454}},{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":13,\\\"geometry\\\":{\\\"type\\\":\\\"MultiLineString\\\",\\\"coordinates\\\":[[[36.4233570,32.7150680],[36.4237650,32.7150030],[36.4244410,32.7148960],[36.4245000,32.7148030],[36.4250700,32.7139060],[36.4251990,32.7137030],[36.4250700,32.7139060],[36.4252450,32.7141020],[36.4262220,32.7157360]]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"GB075\\\",\\\"ZI001_SDV\\\":\\\"2012-01-03T16:24:16Z\\\",\\\"UFI\\\":\\\"d27b2fbd-01e2-44d2-81fc-dd4b1f1b89bb\\\",\\\"ZI005_FNA\\\":\\\"No Information\\\",\\\"FCSUBTYPE\\\":100454}},{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":14,\\\"geometry\\\":{\\\"type\\\":\\\"MultiLineString\\\",\\\"coordinates\\\":[[[36.4284420,32.7114460],[36.4292690,32.7106350],[36.4307820,32.7107260],[36.4308140,32.7112130],[36.4307490,32.7116100]]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"GB075\\\",\\\"ZI001_SDV\\\":\\\"2012-01-03T16:24:17Z\\\",\\\"UFI\\\":\\\"29c39f1d-9c5e-4950-9f9d-80a4ea9231bf\\\",\\\"ZI005_FNA\\\":\\\"No Information\\\",\\\"FCSUBTYPE\\\":100454}}],\\\"links\\\":[{\\\"href\\\":\\\"https://demo.ldproxy.net/daraa/collections/AeronauticCrv/items?limit=250&filter=s_InterSectS%28geometry%2CENVELOPE%2836.409482999999994%2C32.691492999999994%2C36.449483%2C32.731493%29%29&f=json\\\",\\\"rel\\\":\\\"self\\\",\\\"type\\\":\\\"application/geo+json\\\",\\\"title\\\":\\\"This document\\\"},{\\\"href\\\":\\\"https://demo.ldproxy.net/daraa/collections/AeronauticCrv/items?limit=250&filter=s_InterSectS%28geometry%2CENVELOPE%2836.409482999999994%2C32.691492999999994%2C36.449483%2C32.731493%29%29&f=jsonfgc\\\",\\\"rel\\\":\\\"alternate\\\",\\\"type\\\":\\\"application/vnd.ogc.fg+json;compatibility=geojson\\\",\\\"title\\\":\\\"This document as JSON-FG (GeoJSON Compatibility Mode)\\\"},{\\\"href\\\":\\\"https://demo.ldproxy.net/daraa/collections/AeronauticCrv/items?limit=250&filter=s_InterSectS%28geometry%2CENVELOPE%2836.409482999999994%2C32.691492999999994%2C36.449483%2C32.731493%29%29&f=csv\\\",\\\"rel\\\":\\\"alternate\\\",\\\"type\\\":\\\"text/csv\\\",\\\"title\\\":\\\"This document as CSV\\\"},{\\\"href\\\":\\\"https://demo.ldproxy.net/daraa/collections/AeronauticCrv/items?limit=250&filter=s_InterSectS%28geometry%2CENVELOPE%2836.409482999999994%2C32.691492999999994%2C36.449483%2C32.731493%29%29&f=fgb\\\",\\\"rel\\\":\\\"alternate\\\",\\\"type\\\":\\\"application/flatgeobuf\\\",\\\"title\\\":\\\"This document as FlatGeobuf\\\"},{\\\"href\\\":\\\"https://demo.ldproxy.net/daraa/collections/AeronauticCrv/items?limit=250&filter=s_InterSectS%28geometry%2CENVELOPE%2836.409482999999994%2C32.691492999999994%2C36.449483%2C32.731493%29%29&f=html\\\",\\\"rel\\\":\\\"alternate\\\",\\\"type\\\":\\\"text/html\\\",\\\"title\\\":\\\"This document as HTML\\\"},{\\\"href\\\":\\\"https://demo.ldproxy.net/daraa/collections/AeronauticCrv/items?limit=250&filter=s_InterSectS%28geometry%2CENVELOPE%2836.409482999999994%2C32.691492999999994%2C36.449483%2C32.731493%29%29&f=jsonfg\\\",\\\"rel\\\":\\\"alternate\\\",\\\"type\\\":\\\"application/vnd.ogc.fg+json\\\",\\\"title\\\":\\\"This document as JSON-FG\\\"},{\\\"href\\\":\\\"http://www.opengis.net/def/profile/ogc/0/rel-as-link\\\",\\\"rel\\\":\\\"profile\\\",\\\"title\\\":\\\"Profile used in the response\\\"}]}\",\n    \"language\": \"http\",\n    \"index\": 0\n  }\n]",
              "code": "//Data is selected using filter\n        api\n          .get(\"/daraa/collections/AeronauticCrv/items\")\n          .query({ limit: LIMIT, ...test.query })\n          // Success and returns GeoJSON\n          .expect(200)\n          .expect(CONTENT_TYPE, GEO_JSON)\n          // Saves response if it is needed later\n          .expect(async (res) => {\n            if (test.withBody) {\n              await test.withBody(res.body);\n            }\n            // Either calls shouldIncludeId or featuresMatch\n            test.expect(res.body, test);\n          })",
              "err": {},
              "uuid": "85a62da0-dbf0-4b6f-a4f9-3d575187bcf5",
              "parentUUID": "3212e586-417d-4bb7-9f01-956f63936f9e",
              "isHook": false,
              "skipped": false,
              "options": {}
            },
            {
              "title": "filter=s_InterSectS(ENVELOPE(36.409482999999994,32.691492999999994,36.449483,32.731493),geometry)",
              "fullTitle": "intersects filter=s_InterSectS(ENVELOPE(36.409482999999994,32.691492999999994,36.449483,32.731493),geometry)",
              "timedOut": false,
              "duration": 154,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "[\n  {\n    \"title\": \"Request\",\n    \"value\": \"GET https://demo.ldproxy.net/daraa/collections/AeronauticCrv/items?limit=250&filter=s_InterSectS%28ENVELOPE%2836.409482999999994%2C32.691492999999994%2C36.449483%2C32.731493%29%2Cgeometry%29 HTTP/1.1\\nAccept: application/geo+json, application/problem+json;q=0.8\\n\",\n    \"language\": \"http\",\n    \"index\": 0\n  },\n  {\n    \"title\": \"Response\",\n    \"value\": \"Status Code: 200\\ncontent-crs: <http://www.opengis.net/def/crs/OGC/1.3/CRS84>\\ncontent-disposition: inline; filename=\\\"AeronauticCrv.json\\\"\\ncontent-encoding: gzip\\ncontent-language: en\\ncontent-length: 1235\\ncontent-type: application/geo+json\\ndate: Thu, 25 May 2023 15:55:43 GMT\\nlink: <https://demo.ldproxy.net/daraa/collections/AeronauticCrv/items?limit=250&filter=s_InterSectS%28ENVELOPE%2836.409482999999994%2C32.691492999999994%2C36.449483%2C32.731493%29%2Cgeometry%29&f=csv>; rel=\\\"alternate\\\"; title=\\\"This document as CSV\\\"; type=\\\"text/csv\\\", <https://demo.ldproxy.net/daraa/collections/AeronauticCrv/items?limit=250&filter=s_InterSectS%28ENVELOPE%2836.409482999999994%2C32.691492999999994%2C36.449483%2C32.731493%29%2Cgeometry%29&f=fgb>; rel=\\\"alternate\\\"; title=\\\"This document as FlatGeobuf\\\"; type=\\\"application/flatgeobuf\\\", <https://demo.ldproxy.net/daraa/collections/AeronauticCrv/items?limit=250&filter=s_InterSectS%28ENVELOPE%2836.409482999999994%2C32.691492999999994%2C36.449483%2C32.731493%29%2Cgeometry%29&f=html>; rel=\\\"alternate\\\"; title=\\\"This document as HTML\\\"; type=\\\"text/html\\\", <https://demo.ldproxy.net/daraa/collections/AeronauticCrv/items?limit=250&filter=s_InterSectS%28ENVELOPE%2836.409482999999994%2C32.691492999999994%2C36.449483%2C32.731493%29%2Cgeometry%29&f=jsonfg>; rel=\\\"alternate\\\"; title=\\\"This document as JSON-FG\\\"; type=\\\"application/vnd.ogc.fg+json\\\", <https://demo.ldproxy.net/daraa/collections/AeronauticCrv/items?limit=250&filter=s_InterSectS%28ENVELOPE%2836.409482999999994%2C32.691492999999994%2C36.449483%2C32.731493%29%2Cgeometry%29&f=jsonfgc>; rel=\\\"alternate\\\"; title=\\\"This document as JSON-FG (GeoJSON Compatibility Mode)\\\"; type=\\\"application/vnd.ogc.fg+json;compatibility=geojson\\\", <http://www.opengis.net/def/profile/ogc/0/rel-as-link>; rel=\\\"profile\\\"; title=\\\"Profile used in the response\\\", <https://demo.ldproxy.net/daraa/collections/AeronauticCrv/items?limit=250&filter=s_InterSectS%28ENVELOPE%2836.409482999999994%2C32.691492999999994%2C36.449483%2C32.731493%29%2Cgeometry%29&f=json>; rel=\\\"self\\\"; title=\\\"This document\\\"; type=\\\"application/geo+json\\\"\\nvary: Accept,Accept-Language,Accept-Encoding\\nx-request-id: 08cd8c7a-016e-46b0-adfd-e6223696d1d1\\nconnection: close\\n\\n{\\\"type\\\":\\\"FeatureCollection\\\",\\\"numberReturned\\\":9,\\\"numberMatched\\\":9,\\\"timeStamp\\\":\\\"2023-05-25T15:55:43Z\\\",\\\"features\\\":[{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":1,\\\"geometry\\\":{\\\"type\\\":\\\"MultiLineString\\\",\\\"coordinates\\\":[[[36.4270030,32.7114540],[36.4251990,32.7137030]]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"GB075\\\",\\\"ZI001_SDV\\\":\\\"2011-03-16T14:51:12Z\\\",\\\"UFI\\\":\\\"2d008c34-4458-4226-b335-cf903d261ce9\\\",\\\"ZI005_FNA\\\":\\\"No Information\\\",\\\"FCSUBTYPE\\\":100454}},{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":2,\\\"geometry\\\":{\\\"type\\\":\\\"MultiLineString\\\",\\\"coordinates\\\":[[[36.4009090,32.7000770],[36.4031330,32.7013330],[36.4208880,32.7113020],[36.4231110,32.7125400],[36.4251990,32.7137030],[36.4252970,32.7137690]]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"GB075\\\",\\\"ZI001_SDV\\\":\\\"2015-09-11T19:15:35Z\\\",\\\"UFI\\\":\\\"1257bf27-3f91-461d-8a3b-a95af2ea1f5a\\\",\\\"ZI005_FNA\\\":\\\"No Information\\\",\\\"FCSUBTYPE\\\":100454}},{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":4,\\\"geometry\\\":{\\\"type\\\":\\\"MultiLineString\\\",\\\"coordinates\\\":[[[36.4226450,32.7090630],[36.4208880,32.7113020]]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"GB075\\\",\\\"ZI001_SDV\\\":\\\"2011-03-16T14:51:13Z\\\",\\\"UFI\\\":\\\"0463e92c-cf42-4c73-ac2f-81e0d7a0654c\\\",\\\"ZI005_FNA\\\":\\\"No Information\\\",\\\"FCSUBTYPE\\\":100454}},{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":7,\\\"geometry\\\":{\\\"type\\\":\\\"MultiLineString\\\",\\\"coordinates\\\":[[[36.4234650,32.7141110],[36.4234560,32.7140710],[36.4231110,32.7125400]]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"GB075\\\",\\\"ZI001_SDV\\\":\\\"2012-01-03T16:24:13Z\\\",\\\"UFI\\\":\\\"5ccc277e-fa94-49ca-b566-d41246d3e42b\\\",\\\"ZI005_FNA\\\":\\\"No Information\\\",\\\"FCSUBTYPE\\\":100454}},{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":8,\\\"geometry\\\":{\\\"type\\\":\\\"MultiLineString\\\",\\\"coordinates\\\":[[[36.4294830,32.7114930],[36.4284420,32.7114460],[36.4272630,32.7113940],[36.4270030,32.7114540]]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"GB075\\\",\\\"ZI001_SDV\\\":\\\"2012-01-03T16:24:13Z\\\",\\\"UFI\\\":\\\"b9175c1f-43c2-455b-bdd0-f91cdffaaf6f\\\",\\\"ZI005_FNA\\\":\\\"No Information\\\",\\\"FCSUBTYPE\\\":100454}},{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":9,\\\"geometry\\\":{\\\"type\\\":\\\"MultiLineString\\\",\\\"coordinates\\\":[[[36.4259320,32.7173330],[36.4257630,32.7170350],[36.4245000,32.7148030],[36.4257630,32.7170350],[36.4263700,32.7167880],[36.4267580,32.7166290]]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"GB075\\\",\\\"ZI001_SDV\\\":\\\"2012-01-03T16:24:14Z\\\",\\\"UFI\\\":\\\"c9a2d4e5-67d6-458b-a89a-d664d99ea865\\\",\\\"ZI005_FNA\\\":\\\"No Information\\\",\\\"FCSUBTYPE\\\":100454}},{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":11,\\\"geometry\\\":{\\\"type\\\":\\\"MultiLineString\\\",\\\"coordinates\\\":[[[36.4268870,32.7099400],[36.4248150,32.7102540]]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"GB075\\\",\\\"ZI001_SDV\\\":\\\"2012-01-03T16:24:15Z\\\",\\\"UFI\\\":\\\"e4d806b5-73ce-4a76-ba6b-f2d80b1cad30\\\",\\\"ZI005_FNA\\\":\\\"No Information\\\",\\\"FCSUBTYPE\\\":100454}},{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":13,\\\"geometry\\\":{\\\"type\\\":\\\"MultiLineString\\\",\\\"coordinates\\\":[[[36.4233570,32.7150680],[36.4237650,32.7150030],[36.4244410,32.7148960],[36.4245000,32.7148030],[36.4250700,32.7139060],[36.4251990,32.7137030],[36.4250700,32.7139060],[36.4252450,32.7141020],[36.4262220,32.7157360]]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"GB075\\\",\\\"ZI001_SDV\\\":\\\"2012-01-03T16:24:16Z\\\",\\\"UFI\\\":\\\"d27b2fbd-01e2-44d2-81fc-dd4b1f1b89bb\\\",\\\"ZI005_FNA\\\":\\\"No Information\\\",\\\"FCSUBTYPE\\\":100454}},{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":14,\\\"geometry\\\":{\\\"type\\\":\\\"MultiLineString\\\",\\\"coordinates\\\":[[[36.4284420,32.7114460],[36.4292690,32.7106350],[36.4307820,32.7107260],[36.4308140,32.7112130],[36.4307490,32.7116100]]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"GB075\\\",\\\"ZI001_SDV\\\":\\\"2012-01-03T16:24:17Z\\\",\\\"UFI\\\":\\\"29c39f1d-9c5e-4950-9f9d-80a4ea9231bf\\\",\\\"ZI005_FNA\\\":\\\"No Information\\\",\\\"FCSUBTYPE\\\":100454}}],\\\"links\\\":[{\\\"href\\\":\\\"https://demo.ldproxy.net/daraa/collections/AeronauticCrv/items?limit=250&filter=s_InterSectS%28ENVELOPE%2836.409482999999994%2C32.691492999999994%2C36.449483%2C32.731493%29%2Cgeometry%29&f=json\\\",\\\"rel\\\":\\\"self\\\",\\\"type\\\":\\\"application/geo+json\\\",\\\"title\\\":\\\"This document\\\"},{\\\"href\\\":\\\"https://demo.ldproxy.net/daraa/collections/AeronauticCrv/items?limit=250&filter=s_InterSectS%28ENVELOPE%2836.409482999999994%2C32.691492999999994%2C36.449483%2C32.731493%29%2Cgeometry%29&f=jsonfgc\\\",\\\"rel\\\":\\\"alternate\\\",\\\"type\\\":\\\"application/vnd.ogc.fg+json;compatibility=geojson\\\",\\\"title\\\":\\\"This document as JSON-FG (GeoJSON Compatibility Mode)\\\"},{\\\"href\\\":\\\"https://demo.ldproxy.net/daraa/collections/AeronauticCrv/items?limit=250&filter=s_InterSectS%28ENVELOPE%2836.409482999999994%2C32.691492999999994%2C36.449483%2C32.731493%29%2Cgeometry%29&f=csv\\\",\\\"rel\\\":\\\"alternate\\\",\\\"type\\\":\\\"text/csv\\\",\\\"title\\\":\\\"This document as CSV\\\"},{\\\"href\\\":\\\"https://demo.ldproxy.net/daraa/collections/AeronauticCrv/items?limit=250&filter=s_InterSectS%28ENVELOPE%2836.409482999999994%2C32.691492999999994%2C36.449483%2C32.731493%29%2Cgeometry%29&f=fgb\\\",\\\"rel\\\":\\\"alternate\\\",\\\"type\\\":\\\"application/flatgeobuf\\\",\\\"title\\\":\\\"This document as FlatGeobuf\\\"},{\\\"href\\\":\\\"https://demo.ldproxy.net/daraa/collections/AeronauticCrv/items?limit=250&filter=s_InterSectS%28ENVELOPE%2836.409482999999994%2C32.691492999999994%2C36.449483%2C32.731493%29%2Cgeometry%29&f=html\\\",\\\"rel\\\":\\\"alternate\\\",\\\"type\\\":\\\"text/html\\\",\\\"title\\\":\\\"This document as HTML\\\"},{\\\"href\\\":\\\"https://demo.ldproxy.net/daraa/collections/AeronauticCrv/items?limit=250&filter=s_InterSectS%28ENVELOPE%2836.409482999999994%2C32.691492999999994%2C36.449483%2C32.731493%29%2Cgeometry%29&f=jsonfg\\\",\\\"rel\\\":\\\"alternate\\\",\\\"type\\\":\\\"application/vnd.ogc.fg+json\\\",\\\"title\\\":\\\"This document as JSON-FG\\\"},{\\\"href\\\":\\\"http://www.opengis.net/def/profile/ogc/0/rel-as-link\\\",\\\"rel\\\":\\\"profile\\\",\\\"title\\\":\\\"Profile used in the response\\\"}]}\",\n    \"language\": \"http\",\n    \"index\": 0\n  }\n]",
              "code": "//Data is selected using filter\n        api\n          .get(\"/daraa/collections/AeronauticCrv/items\")\n          .query({ limit: LIMIT, ...test.query })\n          // Success and returns GeoJSON\n          .expect(200)\n          .expect(CONTENT_TYPE, GEO_JSON)\n          // Saves response if it is needed later\n          .expect(async (res) => {\n            if (test.withBody) {\n              await test.withBody(res.body);\n            }\n            // Either calls shouldIncludeId or featuresMatch\n            test.expect(res.body, test);\n          })",
              "err": {},
              "uuid": "d5ce9a63-e184-4cb1-bea2-8e2406b7aaee",
              "parentUUID": "3212e586-417d-4bb7-9f01-956f63936f9e",
              "isHook": false,
              "skipped": false,
              "options": {}
            },
            {
              "title": "filter=s_InterSectS(ENVELOPE(32.691492999999994,36.409482999999994,32.731493,36.449483),geometry)&filter-crs=http://www.opengis.net/def/crs/EPSG/0/4326",
              "fullTitle": "intersects filter=s_InterSectS(ENVELOPE(32.691492999999994,36.409482999999994,32.731493,36.449483),geometry)&filter-crs=http://www.opengis.net/def/crs/EPSG/0/4326",
              "timedOut": false,
              "duration": 130,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "[\n  {\n    \"title\": \"Request\",\n    \"value\": \"GET https://demo.ldproxy.net/daraa/collections/AeronauticCrv/items?limit=250&filter=s_InterSectS%28ENVELOPE%2832.691492999999994%2C36.409482999999994%2C32.731493%2C36.449483%29%2Cgeometry%29&filter-crs=http%3A%2F%2Fwww.opengis.net%2Fdef%2Fcrs%2FEPSG%2F0%2F4326 HTTP/1.1\\nAccept: application/geo+json, application/problem+json;q=0.8\\n\",\n    \"language\": \"http\",\n    \"index\": 0\n  },\n  {\n    \"title\": \"Response\",\n    \"value\": \"Status Code: 200\\ncontent-crs: <http://www.opengis.net/def/crs/OGC/1.3/CRS84>\\ncontent-disposition: inline; filename=\\\"AeronauticCrv.json\\\"\\ncontent-encoding: gzip\\ncontent-language: en\\ncontent-length: 1278\\ncontent-type: application/geo+json\\ndate: Thu, 25 May 2023 15:55:43 GMT\\nvary: Accept,Accept-Language,Accept-Encoding\\nx-request-id: 44fd913a-1b90-4b87-b873-5147bc19a644\\nconnection: close\\n\\n{\\\"type\\\":\\\"FeatureCollection\\\",\\\"numberReturned\\\":9,\\\"numberMatched\\\":9,\\\"timeStamp\\\":\\\"2023-05-25T15:55:43Z\\\",\\\"features\\\":[{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":1,\\\"geometry\\\":{\\\"type\\\":\\\"MultiLineString\\\",\\\"coordinates\\\":[[[36.4270030,32.7114540],[36.4251990,32.7137030]]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"GB075\\\",\\\"ZI001_SDV\\\":\\\"2011-03-16T14:51:12Z\\\",\\\"UFI\\\":\\\"2d008c34-4458-4226-b335-cf903d261ce9\\\",\\\"ZI005_FNA\\\":\\\"No Information\\\",\\\"FCSUBTYPE\\\":100454}},{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":2,\\\"geometry\\\":{\\\"type\\\":\\\"MultiLineString\\\",\\\"coordinates\\\":[[[36.4009090,32.7000770],[36.4031330,32.7013330],[36.4208880,32.7113020],[36.4231110,32.7125400],[36.4251990,32.7137030],[36.4252970,32.7137690]]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"GB075\\\",\\\"ZI001_SDV\\\":\\\"2015-09-11T19:15:35Z\\\",\\\"UFI\\\":\\\"1257bf27-3f91-461d-8a3b-a95af2ea1f5a\\\",\\\"ZI005_FNA\\\":\\\"No Information\\\",\\\"FCSUBTYPE\\\":100454}},{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":4,\\\"geometry\\\":{\\\"type\\\":\\\"MultiLineString\\\",\\\"coordinates\\\":[[[36.4226450,32.7090630],[36.4208880,32.7113020]]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"GB075\\\",\\\"ZI001_SDV\\\":\\\"2011-03-16T14:51:13Z\\\",\\\"UFI\\\":\\\"0463e92c-cf42-4c73-ac2f-81e0d7a0654c\\\",\\\"ZI005_FNA\\\":\\\"No Information\\\",\\\"FCSUBTYPE\\\":100454}},{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":7,\\\"geometry\\\":{\\\"type\\\":\\\"MultiLineString\\\",\\\"coordinates\\\":[[[36.4234650,32.7141110],[36.4234560,32.7140710],[36.4231110,32.7125400]]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"GB075\\\",\\\"ZI001_SDV\\\":\\\"2012-01-03T16:24:13Z\\\",\\\"UFI\\\":\\\"5ccc277e-fa94-49ca-b566-d41246d3e42b\\\",\\\"ZI005_FNA\\\":\\\"No Information\\\",\\\"FCSUBTYPE\\\":100454}},{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":8,\\\"geometry\\\":{\\\"type\\\":\\\"MultiLineString\\\",\\\"coordinates\\\":[[[36.4294830,32.7114930],[36.4284420,32.7114460],[36.4272630,32.7113940],[36.4270030,32.7114540]]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"GB075\\\",\\\"ZI001_SDV\\\":\\\"2012-01-03T16:24:13Z\\\",\\\"UFI\\\":\\\"b9175c1f-43c2-455b-bdd0-f91cdffaaf6f\\\",\\\"ZI005_FNA\\\":\\\"No Information\\\",\\\"FCSUBTYPE\\\":100454}},{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":9,\\\"geometry\\\":{\\\"type\\\":\\\"MultiLineString\\\",\\\"coordinates\\\":[[[36.4259320,32.7173330],[36.4257630,32.7170350],[36.4245000,32.7148030],[36.4257630,32.7170350],[36.4263700,32.7167880],[36.4267580,32.7166290]]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"GB075\\\",\\\"ZI001_SDV\\\":\\\"2012-01-03T16:24:14Z\\\",\\\"UFI\\\":\\\"c9a2d4e5-67d6-458b-a89a-d664d99ea865\\\",\\\"ZI005_FNA\\\":\\\"No Information\\\",\\\"FCSUBTYPE\\\":100454}},{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":11,\\\"geometry\\\":{\\\"type\\\":\\\"MultiLineString\\\",\\\"coordinates\\\":[[[36.4268870,32.7099400],[36.4248150,32.7102540]]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"GB075\\\",\\\"ZI001_SDV\\\":\\\"2012-01-03T16:24:15Z\\\",\\\"UFI\\\":\\\"e4d806b5-73ce-4a76-ba6b-f2d80b1cad30\\\",\\\"ZI005_FNA\\\":\\\"No Information\\\",\\\"FCSUBTYPE\\\":100454}},{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":13,\\\"geometry\\\":{\\\"type\\\":\\\"MultiLineString\\\",\\\"coordinates\\\":[[[36.4233570,32.7150680],[36.4237650,32.7150030],[36.4244410,32.7148960],[36.4245000,32.7148030],[36.4250700,32.7139060],[36.4251990,32.7137030],[36.4250700,32.7139060],[36.4252450,32.7141020],[36.4262220,32.7157360]]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"GB075\\\",\\\"ZI001_SDV\\\":\\\"2012-01-03T16:24:16Z\\\",\\\"UFI\\\":\\\"d27b2fbd-01e2-44d2-81fc-dd4b1f1b89bb\\\",\\\"ZI005_FNA\\\":\\\"No Information\\\",\\\"FCSUBTYPE\\\":100454}},{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":14,\\\"geometry\\\":{\\\"type\\\":\\\"MultiLineString\\\",\\\"coordinates\\\":[[[36.4284420,32.7114460],[36.4292690,32.7106350],[36.4307820,32.7107260],[36.4308140,32.7112130],[36.4307490,32.7116100]]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"GB075\\\",\\\"ZI001_SDV\\\":\\\"2012-01-03T16:24:17Z\\\",\\\"UFI\\\":\\\"29c39f1d-9c5e-4950-9f9d-80a4ea9231bf\\\",\\\"ZI005_FNA\\\":\\\"No Information\\\",\\\"FCSUBTYPE\\\":100454}}],\\\"links\\\":[{\\\"href\\\":\\\"https://demo.ldproxy.net/daraa/collections/AeronauticCrv/items?limit=250&filter=s_InterSectS%28ENVELOPE%2832.691492999999994%2C36.409482999999994%2C32.731493%2C36.449483%29%2Cgeometry%29&filter-crs=http%3A%2F%2Fwww.opengis.net%2Fdef%2Fcrs%2FEPSG%2F0%2F4326&f=json\\\",\\\"rel\\\":\\\"self\\\",\\\"type\\\":\\\"application/geo+json\\\",\\\"title\\\":\\\"This document\\\"},{\\\"href\\\":\\\"https://demo.ldproxy.net/daraa/collections/AeronauticCrv/items?limit=250&filter=s_InterSectS%28ENVELOPE%2832.691492999999994%2C36.409482999999994%2C32.731493%2C36.449483%29%2Cgeometry%29&filter-crs=http%3A%2F%2Fwww.opengis.net%2Fdef%2Fcrs%2FEPSG%2F0%2F4326&f=jsonfgc\\\",\\\"rel\\\":\\\"alternate\\\",\\\"type\\\":\\\"application/vnd.ogc.fg+json;compatibility=geojson\\\",\\\"title\\\":\\\"This document as JSON-FG (GeoJSON Compatibility Mode)\\\"},{\\\"href\\\":\\\"https://demo.ldproxy.net/daraa/collections/AeronauticCrv/items?limit=250&filter=s_InterSectS%28ENVELOPE%2832.691492999999994%2C36.409482999999994%2C32.731493%2C36.449483%29%2Cgeometry%29&filter-crs=http%3A%2F%2Fwww.opengis.net%2Fdef%2Fcrs%2FEPSG%2F0%2F4326&f=csv\\\",\\\"rel\\\":\\\"alternate\\\",\\\"type\\\":\\\"text/csv\\\",\\\"title\\\":\\\"This document as CSV\\\"},{\\\"href\\\":\\\"https://demo.ldproxy.net/daraa/collections/AeronauticCrv/items?limit=250&filter=s_InterSectS%28ENVELOPE%2832.691492999999994%2C36.409482999999994%2C32.731493%2C36.449483%29%2Cgeometry%29&filter-crs=http%3A%2F%2Fwww.opengis.net%2Fdef%2Fcrs%2FEPSG%2F0%2F4326&f=fgb\\\",\\\"rel\\\":\\\"alternate\\\",\\\"type\\\":\\\"application/flatgeobuf\\\",\\\"title\\\":\\\"This document as FlatGeobuf\\\"},{\\\"href\\\":\\\"https://demo.ldproxy.net/daraa/collections/AeronauticCrv/items?limit=250&filter=s_InterSectS%28ENVELOPE%2832.691492999999994%2C36.409482999999994%2C32.731493%2C36.449483%29%2Cgeometry%29&filter-crs=http%3A%2F%2Fwww.opengis.net%2Fdef%2Fcrs%2FEPSG%2F0%2F4326&f=html\\\",\\\"rel\\\":\\\"alternate\\\",\\\"type\\\":\\\"text/html\\\",\\\"title\\\":\\\"This document as HTML\\\"},{\\\"href\\\":\\\"https://demo.ldproxy.net/daraa/collections/AeronauticCrv/items?limit=250&filter=s_InterSectS%28ENVELOPE%2832.691492999999994%2C36.409482999999994%2C32.731493%2C36.449483%29%2Cgeometry%29&filter-crs=http%3A%2F%2Fwww.opengis.net%2Fdef%2Fcrs%2FEPSG%2F0%2F4326&f=jsonfg\\\",\\\"rel\\\":\\\"alternate\\\",\\\"type\\\":\\\"application/vnd.ogc.fg+json\\\",\\\"title\\\":\\\"This document as JSON-FG\\\"},{\\\"href\\\":\\\"http://www.opengis.net/def/profile/ogc/0/rel-as-link\\\",\\\"rel\\\":\\\"profile\\\",\\\"title\\\":\\\"Profile used in the response\\\"}]}\",\n    \"language\": \"http\",\n    \"index\": 0\n  }\n]",
              "code": "//Data is selected using filter\n        api\n          .get(\"/daraa/collections/AeronauticCrv/items\")\n          .query({ limit: LIMIT, ...test.query })\n          // Success and returns GeoJSON\n          .expect(200)\n          .expect(CONTENT_TYPE, GEO_JSON)\n          // Saves response if it is needed later\n          .expect(async (res) => {\n            if (test.withBody) {\n              await test.withBody(res.body);\n            }\n            // Either calls shouldIncludeId or featuresMatch\n            test.expect(res.body, test);\n          })",
              "err": {},
              "uuid": "adf41c17-c698-488f-8bcb-3c7d6f61c9cf",
              "parentUUID": "3212e586-417d-4bb7-9f01-956f63936f9e",
              "isHook": false,
              "skipped": false,
              "options": {}
            },
            {
              "title": "filter=s_InterSectS(geometry,POLYGON((36.409482999999994 32.711493,36.429483 32.691492999999994,36.449483 32.711493,36.429483 32.731493,36.409482999999994 32.711493)))",
              "fullTitle": "intersects filter=s_InterSectS(geometry,POLYGON((36.409482999999994 32.711493,36.429483 32.691492999999994,36.449483 32.711493,36.429483 32.731493,36.409482999999994 32.711493)))",
              "timedOut": false,
              "duration": 136,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "[\n  {\n    \"title\": \"Request\",\n    \"value\": \"GET https://demo.ldproxy.net/daraa/collections/AeronauticCrv/items?limit=250&filter=s_InterSectS%28geometry%2CPOLYGON%28%2836.409482999999994%2032.711493%2C36.429483%2032.691492999999994%2C36.449483%2032.711493%2C36.429483%2032.731493%2C36.409482999999994%2032.711493%29%29%29 HTTP/1.1\\nAccept: application/geo+json, application/problem+json;q=0.8\\n\",\n    \"language\": \"http\",\n    \"index\": 0\n  },\n  {\n    \"title\": \"Response\",\n    \"value\": \"Status Code: 200\\ncontent-crs: <http://www.opengis.net/def/crs/OGC/1.3/CRS84>\\ncontent-disposition: inline; filename=\\\"AeronauticCrv.json\\\"\\ncontent-encoding: gzip\\ncontent-language: en\\ncontent-length: 1249\\ncontent-type: application/geo+json\\ndate: Thu, 25 May 2023 15:55:43 GMT\\nvary: Accept,Accept-Language,Accept-Encoding\\nx-request-id: be8c8cc6-cbe6-4ab8-b322-ac5a867e4211\\nconnection: close\\n\\n{\\\"type\\\":\\\"FeatureCollection\\\",\\\"numberReturned\\\":9,\\\"numberMatched\\\":9,\\\"timeStamp\\\":\\\"2023-05-25T15:55:43Z\\\",\\\"features\\\":[{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":1,\\\"geometry\\\":{\\\"type\\\":\\\"MultiLineString\\\",\\\"coordinates\\\":[[[36.4270030,32.7114540],[36.4251990,32.7137030]]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"GB075\\\",\\\"ZI001_SDV\\\":\\\"2011-03-16T14:51:12Z\\\",\\\"UFI\\\":\\\"2d008c34-4458-4226-b335-cf903d261ce9\\\",\\\"ZI005_FNA\\\":\\\"No Information\\\",\\\"FCSUBTYPE\\\":100454}},{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":2,\\\"geometry\\\":{\\\"type\\\":\\\"MultiLineString\\\",\\\"coordinates\\\":[[[36.4009090,32.7000770],[36.4031330,32.7013330],[36.4208880,32.7113020],[36.4231110,32.7125400],[36.4251990,32.7137030],[36.4252970,32.7137690]]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"GB075\\\",\\\"ZI001_SDV\\\":\\\"2015-09-11T19:15:35Z\\\",\\\"UFI\\\":\\\"1257bf27-3f91-461d-8a3b-a95af2ea1f5a\\\",\\\"ZI005_FNA\\\":\\\"No Information\\\",\\\"FCSUBTYPE\\\":100454}},{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":4,\\\"geometry\\\":{\\\"type\\\":\\\"MultiLineString\\\",\\\"coordinates\\\":[[[36.4226450,32.7090630],[36.4208880,32.7113020]]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"GB075\\\",\\\"ZI001_SDV\\\":\\\"2011-03-16T14:51:13Z\\\",\\\"UFI\\\":\\\"0463e92c-cf42-4c73-ac2f-81e0d7a0654c\\\",\\\"ZI005_FNA\\\":\\\"No Information\\\",\\\"FCSUBTYPE\\\":100454}},{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":7,\\\"geometry\\\":{\\\"type\\\":\\\"MultiLineString\\\",\\\"coordinates\\\":[[[36.4234650,32.7141110],[36.4234560,32.7140710],[36.4231110,32.7125400]]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"GB075\\\",\\\"ZI001_SDV\\\":\\\"2012-01-03T16:24:13Z\\\",\\\"UFI\\\":\\\"5ccc277e-fa94-49ca-b566-d41246d3e42b\\\",\\\"ZI005_FNA\\\":\\\"No Information\\\",\\\"FCSUBTYPE\\\":100454}},{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":8,\\\"geometry\\\":{\\\"type\\\":\\\"MultiLineString\\\",\\\"coordinates\\\":[[[36.4294830,32.7114930],[36.4284420,32.7114460],[36.4272630,32.7113940],[36.4270030,32.7114540]]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"GB075\\\",\\\"ZI001_SDV\\\":\\\"2012-01-03T16:24:13Z\\\",\\\"UFI\\\":\\\"b9175c1f-43c2-455b-bdd0-f91cdffaaf6f\\\",\\\"ZI005_FNA\\\":\\\"No Information\\\",\\\"FCSUBTYPE\\\":100454}},{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":9,\\\"geometry\\\":{\\\"type\\\":\\\"MultiLineString\\\",\\\"coordinates\\\":[[[36.4259320,32.7173330],[36.4257630,32.7170350],[36.4245000,32.7148030],[36.4257630,32.7170350],[36.4263700,32.7167880],[36.4267580,32.7166290]]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"GB075\\\",\\\"ZI001_SDV\\\":\\\"2012-01-03T16:24:14Z\\\",\\\"UFI\\\":\\\"c9a2d4e5-67d6-458b-a89a-d664d99ea865\\\",\\\"ZI005_FNA\\\":\\\"No Information\\\",\\\"FCSUBTYPE\\\":100454}},{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":11,\\\"geometry\\\":{\\\"type\\\":\\\"MultiLineString\\\",\\\"coordinates\\\":[[[36.4268870,32.7099400],[36.4248150,32.7102540]]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"GB075\\\",\\\"ZI001_SDV\\\":\\\"2012-01-03T16:24:15Z\\\",\\\"UFI\\\":\\\"e4d806b5-73ce-4a76-ba6b-f2d80b1cad30\\\",\\\"ZI005_FNA\\\":\\\"No Information\\\",\\\"FCSUBTYPE\\\":100454}},{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":13,\\\"geometry\\\":{\\\"type\\\":\\\"MultiLineString\\\",\\\"coordinates\\\":[[[36.4233570,32.7150680],[36.4237650,32.7150030],[36.4244410,32.7148960],[36.4245000,32.7148030],[36.4250700,32.7139060],[36.4251990,32.7137030],[36.4250700,32.7139060],[36.4252450,32.7141020],[36.4262220,32.7157360]]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"GB075\\\",\\\"ZI001_SDV\\\":\\\"2012-01-03T16:24:16Z\\\",\\\"UFI\\\":\\\"d27b2fbd-01e2-44d2-81fc-dd4b1f1b89bb\\\",\\\"ZI005_FNA\\\":\\\"No Information\\\",\\\"FCSUBTYPE\\\":100454}},{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":14,\\\"geometry\\\":{\\\"type\\\":\\\"MultiLineString\\\",\\\"coordinates\\\":[[[36.4284420,32.7114460],[36.4292690,32.7106350],[36.4307820,32.7107260],[36.4308140,32.7112130],[36.4307490,32.7116100]]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"GB075\\\",\\\"ZI001_SDV\\\":\\\"2012-01-03T16:24:17Z\\\",\\\"UFI\\\":\\\"29c39f1d-9c5e-4950-9f9d-80a4ea9231bf\\\",\\\"ZI005_FNA\\\":\\\"No Information\\\",\\\"FCSUBTYPE\\\":100454}}],\\\"links\\\":[{\\\"href\\\":\\\"https://demo.ldproxy.net/daraa/collections/AeronauticCrv/items?limit=250&filter=s_InterSectS%28geometry%2CPOLYGON%28%2836.409482999999994+32.711493%2C36.429483+32.691492999999994%2C36.449483+32.711493%2C36.429483+32.731493%2C36.409482999999994+32.711493%29%29%29&f=json\\\",\\\"rel\\\":\\\"self\\\",\\\"type\\\":\\\"application/geo+json\\\",\\\"title\\\":\\\"This document\\\"},{\\\"href\\\":\\\"https://demo.ldproxy.net/daraa/collections/AeronauticCrv/items?limit=250&filter=s_InterSectS%28geometry%2CPOLYGON%28%2836.409482999999994+32.711493%2C36.429483+32.691492999999994%2C36.449483+32.711493%2C36.429483+32.731493%2C36.409482999999994+32.711493%29%29%29&f=jsonfgc\\\",\\\"rel\\\":\\\"alternate\\\",\\\"type\\\":\\\"application/vnd.ogc.fg+json;compatibility=geojson\\\",\\\"title\\\":\\\"This document as JSON-FG (GeoJSON Compatibility Mode)\\\"},{\\\"href\\\":\\\"https://demo.ldproxy.net/daraa/collections/AeronauticCrv/items?limit=250&filter=s_InterSectS%28geometry%2CPOLYGON%28%2836.409482999999994+32.711493%2C36.429483+32.691492999999994%2C36.449483+32.711493%2C36.429483+32.731493%2C36.409482999999994+32.711493%29%29%29&f=csv\\\",\\\"rel\\\":\\\"alternate\\\",\\\"type\\\":\\\"text/csv\\\",\\\"title\\\":\\\"This document as CSV\\\"},{\\\"href\\\":\\\"https://demo.ldproxy.net/daraa/collections/AeronauticCrv/items?limit=250&filter=s_InterSectS%28geometry%2CPOLYGON%28%2836.409482999999994+32.711493%2C36.429483+32.691492999999994%2C36.449483+32.711493%2C36.429483+32.731493%2C36.409482999999994+32.711493%29%29%29&f=fgb\\\",\\\"rel\\\":\\\"alternate\\\",\\\"type\\\":\\\"application/flatgeobuf\\\",\\\"title\\\":\\\"This document as FlatGeobuf\\\"},{\\\"href\\\":\\\"https://demo.ldproxy.net/daraa/collections/AeronauticCrv/items?limit=250&filter=s_InterSectS%28geometry%2CPOLYGON%28%2836.409482999999994+32.711493%2C36.429483+32.691492999999994%2C36.449483+32.711493%2C36.429483+32.731493%2C36.409482999999994+32.711493%29%29%29&f=html\\\",\\\"rel\\\":\\\"alternate\\\",\\\"type\\\":\\\"text/html\\\",\\\"title\\\":\\\"This document as HTML\\\"},{\\\"href\\\":\\\"https://demo.ldproxy.net/daraa/collections/AeronauticCrv/items?limit=250&filter=s_InterSectS%28geometry%2CPOLYGON%28%2836.409482999999994+32.711493%2C36.429483+32.691492999999994%2C36.449483+32.711493%2C36.429483+32.731493%2C36.409482999999994+32.711493%29%29%29&f=jsonfg\\\",\\\"rel\\\":\\\"alternate\\\",\\\"type\\\":\\\"application/vnd.ogc.fg+json\\\",\\\"title\\\":\\\"This document as JSON-FG\\\"},{\\\"href\\\":\\\"http://www.opengis.net/def/profile/ogc/0/rel-as-link\\\",\\\"rel\\\":\\\"profile\\\",\\\"title\\\":\\\"Profile used in the response\\\"}]}\",\n    \"language\": \"http\",\n    \"index\": 0\n  }\n]",
              "code": "//Data is selected using filter\n        api\n          .get(\"/daraa/collections/AeronauticCrv/items\")\n          .query({ limit: LIMIT, ...test.query })\n          // Success and returns GeoJSON\n          .expect(200)\n          .expect(CONTENT_TYPE, GEO_JSON)\n          // Saves response if it is needed later\n          .expect(async (res) => {\n            if (test.withBody) {\n              await test.withBody(res.body);\n            }\n            // Either calls shouldIncludeId or featuresMatch\n            test.expect(res.body, test);\n          })",
              "err": {},
              "uuid": "6c6f530a-7854-4c48-84ef-0171ecf93502",
              "parentUUID": "3212e586-417d-4bb7-9f01-956f63936f9e",
              "isHook": false,
              "skipped": false,
              "options": {}
            },
            {
              "title": "filter=s_InterSectS(geometry, POLYGON((32.711493 36.409482999999994, 32.691492999999994 36.429483, 32.711493 36.449483, 32.731493 36.429483, 32.711493 36.409482999999994)))&filter-crs=http://www.opengis.net/def/crs/EPSG/0/4326",
              "fullTitle": "intersects filter=s_InterSectS(geometry, POLYGON((32.711493 36.409482999999994, 32.691492999999994 36.429483, 32.711493 36.449483, 32.731493 36.429483, 32.711493 36.409482999999994)))&filter-crs=http://www.opengis.net/def/crs/EPSG/0/4326",
              "timedOut": false,
              "duration": 139,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "[\n  {\n    \"title\": \"Request\",\n    \"value\": \"GET https://demo.ldproxy.net/daraa/collections/AeronauticCrv/items?limit=250&filter=s_InterSectS%28geometry%2C%20POLYGON%28%2832.711493%2036.409482999999994%2C%2032.691492999999994%2036.429483%2C%2032.711493%2036.449483%2C%2032.731493%2036.429483%2C%2032.711493%2036.409482999999994%29%29%29&filter-crs=http%3A%2F%2Fwww.opengis.net%2Fdef%2Fcrs%2FEPSG%2F0%2F4326 HTTP/1.1\\nAccept: application/geo+json, application/problem+json;q=0.8\\n\",\n    \"language\": \"http\",\n    \"index\": 0\n  },\n  {\n    \"title\": \"Response\",\n    \"value\": \"Status Code: 200\\ncontent-crs: <http://www.opengis.net/def/crs/OGC/1.3/CRS84>\\ncontent-disposition: inline; filename=\\\"AeronauticCrv.json\\\"\\ncontent-encoding: gzip\\ncontent-language: en\\ncontent-length: 1292\\ncontent-type: application/geo+json\\ndate: Thu, 25 May 2023 15:55:44 GMT\\nvary: Accept,Accept-Language,Accept-Encoding\\nx-request-id: 2eb29aec-e071-4281-8b8e-b15063b8b562\\nconnection: close\\n\\n{\\\"type\\\":\\\"FeatureCollection\\\",\\\"numberReturned\\\":9,\\\"numberMatched\\\":9,\\\"timeStamp\\\":\\\"2023-05-25T15:55:44Z\\\",\\\"features\\\":[{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":1,\\\"geometry\\\":{\\\"type\\\":\\\"MultiLineString\\\",\\\"coordinates\\\":[[[36.4270030,32.7114540],[36.4251990,32.7137030]]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"GB075\\\",\\\"ZI001_SDV\\\":\\\"2011-03-16T14:51:12Z\\\",\\\"UFI\\\":\\\"2d008c34-4458-4226-b335-cf903d261ce9\\\",\\\"ZI005_FNA\\\":\\\"No Information\\\",\\\"FCSUBTYPE\\\":100454}},{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":2,\\\"geometry\\\":{\\\"type\\\":\\\"MultiLineString\\\",\\\"coordinates\\\":[[[36.4009090,32.7000770],[36.4031330,32.7013330],[36.4208880,32.7113020],[36.4231110,32.7125400],[36.4251990,32.7137030],[36.4252970,32.7137690]]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"GB075\\\",\\\"ZI001_SDV\\\":\\\"2015-09-11T19:15:35Z\\\",\\\"UFI\\\":\\\"1257bf27-3f91-461d-8a3b-a95af2ea1f5a\\\",\\\"ZI005_FNA\\\":\\\"No Information\\\",\\\"FCSUBTYPE\\\":100454}},{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":4,\\\"geometry\\\":{\\\"type\\\":\\\"MultiLineString\\\",\\\"coordinates\\\":[[[36.4226450,32.7090630],[36.4208880,32.7113020]]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"GB075\\\",\\\"ZI001_SDV\\\":\\\"2011-03-16T14:51:13Z\\\",\\\"UFI\\\":\\\"0463e92c-cf42-4c73-ac2f-81e0d7a0654c\\\",\\\"ZI005_FNA\\\":\\\"No Information\\\",\\\"FCSUBTYPE\\\":100454}},{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":7,\\\"geometry\\\":{\\\"type\\\":\\\"MultiLineString\\\",\\\"coordinates\\\":[[[36.4234650,32.7141110],[36.4234560,32.7140710],[36.4231110,32.7125400]]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"GB075\\\",\\\"ZI001_SDV\\\":\\\"2012-01-03T16:24:13Z\\\",\\\"UFI\\\":\\\"5ccc277e-fa94-49ca-b566-d41246d3e42b\\\",\\\"ZI005_FNA\\\":\\\"No Information\\\",\\\"FCSUBTYPE\\\":100454}},{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":8,\\\"geometry\\\":{\\\"type\\\":\\\"MultiLineString\\\",\\\"coordinates\\\":[[[36.4294830,32.7114930],[36.4284420,32.7114460],[36.4272630,32.7113940],[36.4270030,32.7114540]]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"GB075\\\",\\\"ZI001_SDV\\\":\\\"2012-01-03T16:24:13Z\\\",\\\"UFI\\\":\\\"b9175c1f-43c2-455b-bdd0-f91cdffaaf6f\\\",\\\"ZI005_FNA\\\":\\\"No Information\\\",\\\"FCSUBTYPE\\\":100454}},{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":9,\\\"geometry\\\":{\\\"type\\\":\\\"MultiLineString\\\",\\\"coordinates\\\":[[[36.4259320,32.7173330],[36.4257630,32.7170350],[36.4245000,32.7148030],[36.4257630,32.7170350],[36.4263700,32.7167880],[36.4267580,32.7166290]]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"GB075\\\",\\\"ZI001_SDV\\\":\\\"2012-01-03T16:24:14Z\\\",\\\"UFI\\\":\\\"c9a2d4e5-67d6-458b-a89a-d664d99ea865\\\",\\\"ZI005_FNA\\\":\\\"No Information\\\",\\\"FCSUBTYPE\\\":100454}},{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":11,\\\"geometry\\\":{\\\"type\\\":\\\"MultiLineString\\\",\\\"coordinates\\\":[[[36.4268870,32.7099400],[36.4248150,32.7102540]]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"GB075\\\",\\\"ZI001_SDV\\\":\\\"2012-01-03T16:24:15Z\\\",\\\"UFI\\\":\\\"e4d806b5-73ce-4a76-ba6b-f2d80b1cad30\\\",\\\"ZI005_FNA\\\":\\\"No Information\\\",\\\"FCSUBTYPE\\\":100454}},{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":13,\\\"geometry\\\":{\\\"type\\\":\\\"MultiLineString\\\",\\\"coordinates\\\":[[[36.4233570,32.7150680],[36.4237650,32.7150030],[36.4244410,32.7148960],[36.4245000,32.7148030],[36.4250700,32.7139060],[36.4251990,32.7137030],[36.4250700,32.7139060],[36.4252450,32.7141020],[36.4262220,32.7157360]]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"GB075\\\",\\\"ZI001_SDV\\\":\\\"2012-01-03T16:24:16Z\\\",\\\"UFI\\\":\\\"d27b2fbd-01e2-44d2-81fc-dd4b1f1b89bb\\\",\\\"ZI005_FNA\\\":\\\"No Information\\\",\\\"FCSUBTYPE\\\":100454}},{\\\"type\\\":\\\"Feature\\\",\\\"id\\\":14,\\\"geometry\\\":{\\\"type\\\":\\\"MultiLineString\\\",\\\"coordinates\\\":[[[36.4284420,32.7114460],[36.4292690,32.7106350],[36.4307820,32.7107260],[36.4308140,32.7112130],[36.4307490,32.7116100]]]},\\\"properties\\\":{\\\"F_CODE\\\":\\\"GB075\\\",\\\"ZI001_SDV\\\":\\\"2012-01-03T16:24:17Z\\\",\\\"UFI\\\":\\\"29c39f1d-9c5e-4950-9f9d-80a4ea9231bf\\\",\\\"ZI005_FNA\\\":\\\"No Information\\\",\\\"FCSUBTYPE\\\":100454}}],\\\"links\\\":[{\\\"href\\\":\\\"https://demo.ldproxy.net/daraa/collections/AeronauticCrv/items?limit=250&filter=s_InterSectS%28geometry%2C+POLYGON%28%2832.711493+36.409482999999994%2C+32.691492999999994+36.429483%2C+32.711493+36.449483%2C+32.731493+36.429483%2C+32.711493+36.409482999999994%29%29%29&filter-crs=http%3A%2F%2Fwww.opengis.net%2Fdef%2Fcrs%2FEPSG%2F0%2F4326&f=json\\\",\\\"rel\\\":\\\"self\\\",\\\"type\\\":\\\"application/geo+json\\\",\\\"title\\\":\\\"This document\\\"},{\\\"href\\\":\\\"https://demo.ldproxy.net/daraa/collections/AeronauticCrv/items?limit=250&filter=s_InterSectS%28geometry%2C+POLYGON%28%2832.711493+36.409482999999994%2C+32.691492999999994+36.429483%2C+32.711493+36.449483%2C+32.731493+36.429483%2C+32.711493+36.409482999999994%29%29%29&filter-crs=http%3A%2F%2Fwww.opengis.net%2Fdef%2Fcrs%2FEPSG%2F0%2F4326&f=jsonfgc\\\",\\\"rel\\\":\\\"alternate\\\",\\\"type\\\":\\\"application/vnd.ogc.fg+json;compatibility=geojson\\\",\\\"title\\\":\\\"This document as JSON-FG (GeoJSON Compatibility Mode)\\\"},{\\\"href\\\":\\\"https://demo.ldproxy.net/daraa/collections/AeronauticCrv/items?limit=250&filter=s_InterSectS%28geometry%2C+POLYGON%28%2832.711493+36.409482999999994%2C+32.691492999999994+36.429483%2C+32.711493+36.449483%2C+32.731493+36.429483%2C+32.711493+36.409482999999994%29%29%29&filter-crs=http%3A%2F%2Fwww.opengis.net%2Fdef%2Fcrs%2FEPSG%2F0%2F4326&f=csv\\\",\\\"rel\\\":\\\"alternate\\\",\\\"type\\\":\\\"text/csv\\\",\\\"title\\\":\\\"This document as CSV\\\"},{\\\"href\\\":\\\"https://demo.ldproxy.net/daraa/collections/AeronauticCrv/items?limit=250&filter=s_InterSectS%28geometry%2C+POLYGON%28%2832.711493+36.409482999999994%2C+32.691492999999994+36.429483%2C+32.711493+36.449483%2C+32.731493+36.429483%2C+32.711493+36.409482999999994%29%29%29&filter-crs=http%3A%2F%2Fwww.opengis.net%2Fdef%2Fcrs%2FEPSG%2F0%2F4326&f=fgb\\\",\\\"rel\\\":\\\"alternate\\\",\\\"type\\\":\\\"application/flatgeobuf\\\",\\\"title\\\":\\\"This document as FlatGeobuf\\\"},{\\\"href\\\":\\\"https://demo.ldproxy.net/daraa/collections/AeronauticCrv/items?limit=250&filter=s_InterSectS%28geometry%2C+POLYGON%28%2832.711493+36.409482999999994%2C+32.691492999999994+36.429483%2C+32.711493+36.449483%2C+32.731493+36.429483%2C+32.711493+36.409482999999994%29%29%29&filter-crs=http%3A%2F%2Fwww.opengis.net%2Fdef%2Fcrs%2FEPSG%2F0%2F4326&f=html\\\",\\\"rel\\\":\\\"alternate\\\",\\\"type\\\":\\\"text/html\\\",\\\"title\\\":\\\"This document as HTML\\\"},{\\\"href\\\":\\\"https://demo.ldproxy.net/daraa/collections/AeronauticCrv/items?limit=250&filter=s_InterSectS%28geometry%2C+POLYGON%28%2832.711493+36.409482999999994%2C+32.691492999999994+36.429483%2C+32.711493+36.449483%2C+32.731493+36.429483%2C+32.711493+36.409482999999994%29%29%29&filter-crs=http%3A%2F%2Fwww.opengis.net%2Fdef%2Fcrs%2FEPSG%2F0%2F4326&f=jsonfg\\\",\\\"rel\\\":\\\"alternate\\\",\\\"type\\\":\\\"application/vnd.ogc.fg+json\\\",\\\"title\\\":\\\"This document as JSON-FG\\\"},{\\\"href\\\":\\\"http://www.opengis.net/def/profile/ogc/0/rel-as-link\\\",\\\"rel\\\":\\\"profile\\\",\\\"title\\\":\\\"Profile used in the response\\\"}]}\",\n    \"language\": \"http\",\n    \"index\": 0\n  }\n]",
              "code": "//Data is selected using filter\n        api\n          .get(\"/daraa/collections/AeronauticCrv/items\")\n          .query({ limit: LIMIT, ...test.query })\n          // Success and returns GeoJSON\n          .expect(200)\n          .expect(CONTENT_TYPE, GEO_JSON)\n          // Saves response if it is needed later\n          .expect(async (res) => {\n            if (test.withBody) {\n              await test.withBody(res.body);\n            }\n            // Either calls shouldIncludeId or featuresMatch\n            test.expect(res.body, test);\n          })",
              "err": {},
              "uuid": "037ad5ab-6b79-4e9c-8e6c-261fa5b00011",
              "parentUUID": "3212e586-417d-4bb7-9f01-956f63936f9e",
              "isHook": false,
              "skipped": false,
              "options": {}
            }
          ],
          "suites": [],
          "passes": [
            "3886497f-3423-4990-833d-cc2e519dc265",
            "b7402bad-2351-44a9-9611-acf7d8a226c9",
            "bfd6c019-6dab-4308-aeb3-cd890a8c4e71",
            "85a62da0-dbf0-4b6f-a4f9-3d575187bcf5",
            "d5ce9a63-e184-4cb1-bea2-8e2406b7aaee",
            "adf41c17-c698-488f-8bcb-3c7d6f61c9cf",
            "6c6f530a-7854-4c48-84ef-0171ecf93502",
            "037ad5ab-6b79-4e9c-8e6c-261fa5b00011"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1131,
          "root": false,
          "rootEmpty": false,
          "_timeout": 60000,
          "options": {
            "title": "intersects",
            "description": "Ensure that all queries involving operator **intersects** work correctly. <br/>      Collections: [Daraa - Aeronautic (Curves)](https://demo.ldproxy.net/daraa/collections/AeronauticCrv/items?f=html)"
          }
        },
        {
          "uuid": "ff6e44ef-db9c-424b-825b-4c616b5ec1ac",
          "title": "like",
          "fullFile": "C:\\Users\\p.zahnen\\Documents\\Projekte\\demo-tests\\filter-queries\\spec\\like.js",
          "file": "\\spec\\like.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "filter=F_CODE LiKe 'AL0%'",
              "fullTitle": "like filter=F_CODE LiKe 'AL0%'",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Data is selected using filter\n        api\n          .get(\"/daraa/collections/CulturePnt/items\")\n          .query({ limit: LIMIT, ...test.query })\n          // Success and returns GeoJSON\n          .expect(200)\n          .expect(CONTENT_TYPE, GEO_JSON)\n          // returns correct amount of features\n          .expect((res) => {\n            const expected = vars\n              .load(CULTURE_PNT_FEATURES)\n              .features.filter(test.filter);\n            res.body.should.have\n              .property(\"numberReturned\")\n              .which.equals(expected.length);\n            //returns the expected features:\n            const actual = res.body.features;\n            for (let i = 0; i < actual.length; i++) {\n              actual[i].should.have.property(\"id\").which.equals(expected[i].id);\n              actual[i].should.have\n                .property(\"type\")\n                .which.equals(expected[i].type);\n              actual[i].should.have\n                .property(\"geometry\")\n                .which.deep.equals(expected[i].geometry);\n              actual[i].should.have\n                .property(\"properties\")\n                .which.deep.equals(expected[i].properties);\n            }\n          })",
              "err": {},
              "uuid": "18200bd8-6694-4d1c-868e-d51b6e0c8d20",
              "parentUUID": null,
              "isHook": false,
              "skipped": true,
              "options": {}
            },
            {
              "title": "filter=F_CODE LiKe 'AL0__'",
              "fullTitle": "like filter=F_CODE LiKe 'AL0__'",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Data is selected using filter\n        api\n          .get(\"/daraa/collections/CulturePnt/items\")\n          .query({ limit: LIMIT, ...test.query })\n          // Success and returns GeoJSON\n          .expect(200)\n          .expect(CONTENT_TYPE, GEO_JSON)\n          // returns correct amount of features\n          .expect((res) => {\n            const expected = vars\n              .load(CULTURE_PNT_FEATURES)\n              .features.filter(test.filter);\n            res.body.should.have\n              .property(\"numberReturned\")\n              .which.equals(expected.length);\n            //returns the expected features:\n            const actual = res.body.features;\n            for (let i = 0; i < actual.length; i++) {\n              actual[i].should.have.property(\"id\").which.equals(expected[i].id);\n              actual[i].should.have\n                .property(\"type\")\n                .which.equals(expected[i].type);\n              actual[i].should.have\n                .property(\"geometry\")\n                .which.deep.equals(expected[i].geometry);\n              actual[i].should.have\n                .property(\"properties\")\n                .which.deep.equals(expected[i].properties);\n            }\n          })",
              "err": {},
              "uuid": "786e3baa-3ada-427c-8905-1b6dfafc734f",
              "parentUUID": null,
              "isHook": false,
              "skipped": true,
              "options": {}
            },
            {
              "title": "filter=CASEI(F_CODE) LiKe casei('al0__')",
              "fullTitle": "like filter=CASEI(F_CODE) LiKe casei('al0__')",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Data is selected using filter\n        api\n          .get(\"/daraa/collections/CulturePnt/items\")\n          .query({ limit: LIMIT, ...test.query })\n          // Success and returns GeoJSON\n          .expect(200)\n          .expect(CONTENT_TYPE, GEO_JSON)\n          // returns correct amount of features\n          .expect((res) => {\n            const expected = vars\n              .load(CULTURE_PNT_FEATURES)\n              .features.filter(test.filter);\n            res.body.should.have\n              .property(\"numberReturned\")\n              .which.equals(expected.length);\n            //returns the expected features:\n            const actual = res.body.features;\n            for (let i = 0; i < actual.length; i++) {\n              actual[i].should.have.property(\"id\").which.equals(expected[i].id);\n              actual[i].should.have\n                .property(\"type\")\n                .which.equals(expected[i].type);\n              actual[i].should.have\n                .property(\"geometry\")\n                .which.deep.equals(expected[i].geometry);\n              actual[i].should.have\n                .property(\"properties\")\n                .which.deep.equals(expected[i].properties);\n            }\n          })",
              "err": {},
              "uuid": "976d0e30-a36c-4ccf-b587-8b320cad54e4",
              "parentUUID": null,
              "isHook": false,
              "skipped": true,
              "options": {}
            },
            {
              "title": "filter=CASEI(F_CODE) LiKe casei('al0%')",
              "fullTitle": "like filter=CASEI(F_CODE) LiKe casei('al0%')",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Data is selected using filter\n        api\n          .get(\"/daraa/collections/CulturePnt/items\")\n          .query({ limit: LIMIT, ...test.query })\n          // Success and returns GeoJSON\n          .expect(200)\n          .expect(CONTENT_TYPE, GEO_JSON)\n          // returns correct amount of features\n          .expect((res) => {\n            const expected = vars\n              .load(CULTURE_PNT_FEATURES)\n              .features.filter(test.filter);\n            res.body.should.have\n              .property(\"numberReturned\")\n              .which.equals(expected.length);\n            //returns the expected features:\n            const actual = res.body.features;\n            for (let i = 0; i < actual.length; i++) {\n              actual[i].should.have.property(\"id\").which.equals(expected[i].id);\n              actual[i].should.have\n                .property(\"type\")\n                .which.equals(expected[i].type);\n              actual[i].should.have\n                .property(\"geometry\")\n                .which.deep.equals(expected[i].geometry);\n              actual[i].should.have\n                .property(\"properties\")\n                .which.deep.equals(expected[i].properties);\n            }\n          })",
              "err": {},
              "uuid": "591aa970-45f2-4131-8970-298da83b3842",
              "parentUUID": null,
              "isHook": false,
              "skipped": true,
              "options": {}
            },
            {
              "title": "filter=F_CODE LiKe 'al0%'",
              "fullTitle": "like filter=F_CODE LiKe 'al0%'",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Data is selected using filter\n        api\n          .get(\"/daraa/collections/CulturePnt/items\")\n          .query({ limit: LIMIT, ...test.query })\n          // Success and returns GeoJSON\n          .expect(200)\n          .expect(CONTENT_TYPE, GEO_JSON)\n          // returns correct amount of features\n          .expect((res) => {\n            const expected = vars\n              .load(CULTURE_PNT_FEATURES)\n              .features.filter(test.filter);\n            res.body.should.have\n              .property(\"numberReturned\")\n              .which.equals(expected.length);\n            //returns the expected features:\n            const actual = res.body.features;\n            for (let i = 0; i < actual.length; i++) {\n              actual[i].should.have.property(\"id\").which.equals(expected[i].id);\n              actual[i].should.have\n                .property(\"type\")\n                .which.equals(expected[i].type);\n              actual[i].should.have\n                .property(\"geometry\")\n                .which.deep.equals(expected[i].geometry);\n              actual[i].should.have\n                .property(\"properties\")\n                .which.deep.equals(expected[i].properties);\n            }\n          })",
              "err": {},
              "uuid": "ec3fc442-5aa3-4144-a7ec-7520f3d65447",
              "parentUUID": null,
              "isHook": false,
              "skipped": true,
              "options": {}
            },
            {
              "title": "filter=F_CODE LiKe '%''%'",
              "fullTitle": "like filter=F_CODE LiKe '%''%'",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Data is selected using filter\n        api\n          .get(\"/daraa/collections/CulturePnt/items\")\n          .query({ limit: LIMIT, ...test.query })\n          // Success and returns GeoJSON\n          .expect(200)\n          .expect(CONTENT_TYPE, GEO_JSON)\n          // returns correct amount of features\n          .expect((res) => {\n            const expected = vars\n              .load(CULTURE_PNT_FEATURES)\n              .features.filter(test.filter);\n            res.body.should.have\n              .property(\"numberReturned\")\n              .which.equals(expected.length);\n            //returns the expected features:\n            const actual = res.body.features;\n            for (let i = 0; i < actual.length; i++) {\n              actual[i].should.have.property(\"id\").which.equals(expected[i].id);\n              actual[i].should.have\n                .property(\"type\")\n                .which.equals(expected[i].type);\n              actual[i].should.have\n                .property(\"geometry\")\n                .which.deep.equals(expected[i].geometry);\n              actual[i].should.have\n                .property(\"properties\")\n                .which.deep.equals(expected[i].properties);\n            }\n          })",
              "err": {},
              "uuid": "4bc35525-8c8d-4bc5-94b0-e240f0892a86",
              "parentUUID": null,
              "isHook": false,
              "skipped": true,
              "options": {}
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "18200bd8-6694-4d1c-868e-d51b6e0c8d20",
            "786e3baa-3ada-427c-8905-1b6dfafc734f",
            "976d0e30-a36c-4ccf-b587-8b320cad54e4",
            "591aa970-45f2-4131-8970-298da83b3842",
            "ec3fc442-5aa3-4144-a7ec-7520f3d65447",
            "4bc35525-8c8d-4bc5-94b0-e240f0892a86"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 60000,
          "options": {
            "title": "like",
            "description": "Ensure that all queries involving operator **like** work correctly. <br/>      Collections: [Daraa - Cultural Points](https://demo.ldproxy.net/daraa/collections/CulturePnt/items?f=html)"
          }
        },
        {
          "uuid": "d4068362-b037-4df2-b9f1-e7f76052ecc6",
          "title": "lt",
          "fullFile": "C:\\Users\\p.zahnen\\Documents\\Projekte\\demo-tests\\filter-queries\\spec\\lt.js",
          "file": "\\spec\\lt.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "filter=F_CODE<F_CODE",
              "fullTitle": "lt filter=F_CODE<F_CODE",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Data is selected using filter\n        api\n          .get(\"/daraa/collections/CulturePnt/items\")\n          .query({ limit: LIMIT, ...test.query })\n          // Success and returns GeoJSON\n          .expect(200)\n          .expect(CONTENT_TYPE, GEO_JSON)\n          // returns correct amount of features\n          .expect((res) => {\n            const expected = vars\n              .load(CULTURE_PNT_FEATURES)\n              .features.filter(test.filter);\n            res.body.should.have\n              .property(\"numberReturned\")\n              .which.equals(expected.length);\n            //returns the expected features:\n            const actual = res.body.features;\n            for (let i = 0; i < actual.length; i++) {\n              actual[i].should.have.property(\"id\").which.equals(expected[i].id);\n              actual[i].should.have\n                .property(\"type\")\n                .which.equals(expected[i].type);\n              actual[i].should.have\n                .property(\"geometry\")\n                .which.deep.equals(expected[i].geometry);\n              actual[i].should.have\n                .property(\"properties\")\n                .which.deep.equals(expected[i].properties);\n            }\n          })",
              "err": {},
              "uuid": "e5af43c9-5062-412d-a7f8-c602fca865a9",
              "parentUUID": null,
              "isHook": false,
              "skipped": true,
              "options": {}
            },
            {
              "title": "filter=F_CODE<'AL030'",
              "fullTitle": "lt filter=F_CODE<'AL030'",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Data is selected using filter\n        api\n          .get(\"/daraa/collections/CulturePnt/items\")\n          .query({ limit: LIMIT, ...test.query })\n          // Success and returns GeoJSON\n          .expect(200)\n          .expect(CONTENT_TYPE, GEO_JSON)\n          // returns correct amount of features\n          .expect((res) => {\n            const expected = vars\n              .load(CULTURE_PNT_FEATURES)\n              .features.filter(test.filter);\n            res.body.should.have\n              .property(\"numberReturned\")\n              .which.equals(expected.length);\n            //returns the expected features:\n            const actual = res.body.features;\n            for (let i = 0; i < actual.length; i++) {\n              actual[i].should.have.property(\"id\").which.equals(expected[i].id);\n              actual[i].should.have\n                .property(\"type\")\n                .which.equals(expected[i].type);\n              actual[i].should.have\n                .property(\"geometry\")\n                .which.deep.equals(expected[i].geometry);\n              actual[i].should.have\n                .property(\"properties\")\n                .which.deep.equals(expected[i].properties);\n            }\n          })",
              "err": {},
              "uuid": "454b1f4d-fcba-4f21-9d3b-b995bd1b2c2b",
              "parentUUID": null,
              "isHook": false,
              "skipped": true,
              "options": {}
            },
            {
              "title": "filter=ZI037_REL<11",
              "fullTitle": "lt filter=ZI037_REL<11",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Data is selected using filter\n        api\n          .get(\"/daraa/collections/CulturePnt/items\")\n          .query({ limit: LIMIT, ...test.query })\n          // Success and returns GeoJSON\n          .expect(200)\n          .expect(CONTENT_TYPE, GEO_JSON)\n          // returns correct amount of features\n          .expect((res) => {\n            const expected = vars\n              .load(CULTURE_PNT_FEATURES)\n              .features.filter(test.filter);\n            res.body.should.have\n              .property(\"numberReturned\")\n              .which.equals(expected.length);\n            //returns the expected features:\n            const actual = res.body.features;\n            for (let i = 0; i < actual.length; i++) {\n              actual[i].should.have.property(\"id\").which.equals(expected[i].id);\n              actual[i].should.have\n                .property(\"type\")\n                .which.equals(expected[i].type);\n              actual[i].should.have\n                .property(\"geometry\")\n                .which.deep.equals(expected[i].geometry);\n              actual[i].should.have\n                .property(\"properties\")\n                .which.deep.equals(expected[i].properties);\n            }\n          })",
              "err": {},
              "uuid": "e0d4904f-02b3-4e25-a06f-064ee43d738b",
              "parentUUID": null,
              "isHook": false,
              "skipped": true,
              "options": {}
            },
            {
              "title": "filter=ZI037_REL<12",
              "fullTitle": "lt filter=ZI037_REL<12",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Data is selected using filter\n        api\n          .get(\"/daraa/collections/CulturePnt/items\")\n          .query({ limit: LIMIT, ...test.query })\n          // Success and returns GeoJSON\n          .expect(200)\n          .expect(CONTENT_TYPE, GEO_JSON)\n          // returns correct amount of features\n          .expect((res) => {\n            const expected = vars\n              .load(CULTURE_PNT_FEATURES)\n              .features.filter(test.filter);\n            res.body.should.have\n              .property(\"numberReturned\")\n              .which.equals(expected.length);\n            //returns the expected features:\n            const actual = res.body.features;\n            for (let i = 0; i < actual.length; i++) {\n              actual[i].should.have.property(\"id\").which.equals(expected[i].id);\n              actual[i].should.have\n                .property(\"type\")\n                .which.equals(expected[i].type);\n              actual[i].should.have\n                .property(\"geometry\")\n                .which.deep.equals(expected[i].geometry);\n              actual[i].should.have\n                .property(\"properties\")\n                .which.deep.equals(expected[i].properties);\n            }\n          })",
              "err": {},
              "uuid": "c3e4f0b8-fce7-44c7-8aa9-2c5d0478922c",
              "parentUUID": null,
              "isHook": false,
              "skipped": true,
              "options": {}
            },
            {
              "title": "filter='AL030'<F_CODE",
              "fullTitle": "lt filter='AL030'<F_CODE",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Data is selected using filter\n        api\n          .get(\"/daraa/collections/CulturePnt/items\")\n          .query({ limit: LIMIT, ...test.query })\n          // Success and returns GeoJSON\n          .expect(200)\n          .expect(CONTENT_TYPE, GEO_JSON)\n          // returns correct amount of features\n          .expect((res) => {\n            const expected = vars\n              .load(CULTURE_PNT_FEATURES)\n              .features.filter(test.filter);\n            res.body.should.have\n              .property(\"numberReturned\")\n              .which.equals(expected.length);\n            //returns the expected features:\n            const actual = res.body.features;\n            for (let i = 0; i < actual.length; i++) {\n              actual[i].should.have.property(\"id\").which.equals(expected[i].id);\n              actual[i].should.have\n                .property(\"type\")\n                .which.equals(expected[i].type);\n              actual[i].should.have\n                .property(\"geometry\")\n                .which.deep.equals(expected[i].geometry);\n              actual[i].should.have\n                .property(\"properties\")\n                .which.deep.equals(expected[i].properties);\n            }\n          })",
              "err": {},
              "uuid": "630b9939-c16b-457e-b1eb-612c7ff62444",
              "parentUUID": null,
              "isHook": false,
              "skipped": true,
              "options": {}
            },
            {
              "title": "filter='A'<'A'",
              "fullTitle": "lt filter='A'<'A'",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Data is selected using filter\n        api\n          .get(\"/daraa/collections/CulturePnt/items\")\n          .query({ limit: LIMIT, ...test.query })\n          // Success and returns GeoJSON\n          .expect(200)\n          .expect(CONTENT_TYPE, GEO_JSON)\n          // returns correct amount of features\n          .expect((res) => {\n            const expected = vars\n              .load(CULTURE_PNT_FEATURES)\n              .features.filter(test.filter);\n            res.body.should.have\n              .property(\"numberReturned\")\n              .which.equals(expected.length);\n            //returns the expected features:\n            const actual = res.body.features;\n            for (let i = 0; i < actual.length; i++) {\n              actual[i].should.have.property(\"id\").which.equals(expected[i].id);\n              actual[i].should.have\n                .property(\"type\")\n                .which.equals(expected[i].type);\n              actual[i].should.have\n                .property(\"geometry\")\n                .which.deep.equals(expected[i].geometry);\n              actual[i].should.have\n                .property(\"properties\")\n                .which.deep.equals(expected[i].properties);\n            }\n          })",
              "err": {},
              "uuid": "5ccb5fae-9e4d-40c1-86ad-cf362d753c9e",
              "parentUUID": null,
              "isHook": false,
              "skipped": true,
              "options": {}
            },
            {
              "title": "filter=ZI001_SDV<TIMESTAMP('2011-12-26T20:55:27Z')",
              "fullTitle": "lt filter=ZI001_SDV<TIMESTAMP('2011-12-26T20:55:27Z')",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Data is selected using filter\n        api\n          .get(\"/daraa/collections/CulturePnt/items\")\n          .query({ limit: LIMIT, ...test.query })\n          // Success and returns GeoJSON\n          .expect(200)\n          .expect(CONTENT_TYPE, GEO_JSON)\n          // returns correct amount of features\n          .expect((res) => {\n            const expected = vars\n              .load(CULTURE_PNT_FEATURES)\n              .features.filter(test.filter);\n            res.body.should.have\n              .property(\"numberReturned\")\n              .which.equals(expected.length);\n            //returns the expected features:\n            const actual = res.body.features;\n            for (let i = 0; i < actual.length; i++) {\n              actual[i].should.have.property(\"id\").which.equals(expected[i].id);\n              actual[i].should.have\n                .property(\"type\")\n                .which.equals(expected[i].type);\n              actual[i].should.have\n                .property(\"geometry\")\n                .which.deep.equals(expected[i].geometry);\n              actual[i].should.have\n                .property(\"properties\")\n                .which.deep.equals(expected[i].properties);\n            }\n          })",
              "err": {},
              "uuid": "cbb61cb7-e450-47a7-99ad-c07af755c590",
              "parentUUID": null,
              "isHook": false,
              "skipped": true,
              "options": {}
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "e5af43c9-5062-412d-a7f8-c602fca865a9",
            "454b1f4d-fcba-4f21-9d3b-b995bd1b2c2b",
            "e0d4904f-02b3-4e25-a06f-064ee43d738b",
            "c3e4f0b8-fce7-44c7-8aa9-2c5d0478922c",
            "630b9939-c16b-457e-b1eb-612c7ff62444",
            "5ccb5fae-9e4d-40c1-86ad-cf362d753c9e",
            "cbb61cb7-e450-47a7-99ad-c07af755c590"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 60000,
          "options": {
            "title": "lt",
            "description": "Ensure that all queries involving operator **lt** work correctly. <br/>      Collections: [Daraa - Cultural Points](https://demo.ldproxy.net/daraa/collections/CulturePnt/items?f=html)"
          }
        },
        {
          "uuid": "3fd18510-9103-467b-be97-34e881ace924",
          "title": "lteq",
          "fullFile": "C:\\Users\\p.zahnen\\Documents\\Projekte\\demo-tests\\filter-queries\\spec\\lteq.js",
          "file": "\\spec\\lteq.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "filter=F_CODE<=F_CODE",
              "fullTitle": "lteq filter=F_CODE<=F_CODE",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Data is selected using filter\n        api\n          .get(\"/daraa/collections/CulturePnt/items\")\n          .query({ limit: LIMIT, ...test.query })\n          // Success and returns GeoJSON\n          .expect(200)\n          .expect(CONTENT_TYPE, GEO_JSON)\n          // returns correct amount of features\n          .expect((res) => {\n            const expected = vars\n              .load(CULTURE_PNT_FEATURES)\n              .features.filter(test.filter);\n            res.body.should.have\n              .property(\"numberReturned\")\n              .which.equals(expected.length);\n            //returns the expected features:\n            const actual = res.body.features;\n            for (let i = 0; i < actual.length; i++) {\n              actual[i].should.have.property(\"id\").which.equals(expected[i].id);\n              actual[i].should.have\n                .property(\"type\")\n                .which.equals(expected[i].type);\n              actual[i].should.have\n                .property(\"geometry\")\n                .which.deep.equals(expected[i].geometry);\n              actual[i].should.have\n                .property(\"properties\")\n                .which.deep.equals(expected[i].properties);\n            }\n          })",
              "err": {},
              "uuid": "4b910356-7c86-443e-aa09-2dea272b9385",
              "parentUUID": null,
              "isHook": false,
              "skipped": true,
              "options": {}
            },
            {
              "title": "filter=F_CODE<='AL030'",
              "fullTitle": "lteq filter=F_CODE<='AL030'",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Data is selected using filter\n        api\n          .get(\"/daraa/collections/CulturePnt/items\")\n          .query({ limit: LIMIT, ...test.query })\n          // Success and returns GeoJSON\n          .expect(200)\n          .expect(CONTENT_TYPE, GEO_JSON)\n          // returns correct amount of features\n          .expect((res) => {\n            const expected = vars\n              .load(CULTURE_PNT_FEATURES)\n              .features.filter(test.filter);\n            res.body.should.have\n              .property(\"numberReturned\")\n              .which.equals(expected.length);\n            //returns the expected features:\n            const actual = res.body.features;\n            for (let i = 0; i < actual.length; i++) {\n              actual[i].should.have.property(\"id\").which.equals(expected[i].id);\n              actual[i].should.have\n                .property(\"type\")\n                .which.equals(expected[i].type);\n              actual[i].should.have\n                .property(\"geometry\")\n                .which.deep.equals(expected[i].geometry);\n              actual[i].should.have\n                .property(\"properties\")\n                .which.deep.equals(expected[i].properties);\n            }\n          })",
              "err": {},
              "uuid": "1bb22e84-8634-42f0-bbee-7c29979e9d13",
              "parentUUID": null,
              "isHook": false,
              "skipped": true,
              "options": {}
            },
            {
              "title": "filter=ZI037_REL<=11",
              "fullTitle": "lteq filter=ZI037_REL<=11",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Data is selected using filter\n        api\n          .get(\"/daraa/collections/CulturePnt/items\")\n          .query({ limit: LIMIT, ...test.query })\n          // Success and returns GeoJSON\n          .expect(200)\n          .expect(CONTENT_TYPE, GEO_JSON)\n          // returns correct amount of features\n          .expect((res) => {\n            const expected = vars\n              .load(CULTURE_PNT_FEATURES)\n              .features.filter(test.filter);\n            res.body.should.have\n              .property(\"numberReturned\")\n              .which.equals(expected.length);\n            //returns the expected features:\n            const actual = res.body.features;\n            for (let i = 0; i < actual.length; i++) {\n              actual[i].should.have.property(\"id\").which.equals(expected[i].id);\n              actual[i].should.have\n                .property(\"type\")\n                .which.equals(expected[i].type);\n              actual[i].should.have\n                .property(\"geometry\")\n                .which.deep.equals(expected[i].geometry);\n              actual[i].should.have\n                .property(\"properties\")\n                .which.deep.equals(expected[i].properties);\n            }\n          })",
              "err": {},
              "uuid": "a50096b5-c1f3-472b-8c14-ca83b52ff650",
              "parentUUID": null,
              "isHook": false,
              "skipped": true,
              "options": {}
            },
            {
              "title": "filter=ZI037_REL<=10",
              "fullTitle": "lteq filter=ZI037_REL<=10",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Data is selected using filter\n        api\n          .get(\"/daraa/collections/CulturePnt/items\")\n          .query({ limit: LIMIT, ...test.query })\n          // Success and returns GeoJSON\n          .expect(200)\n          .expect(CONTENT_TYPE, GEO_JSON)\n          // returns correct amount of features\n          .expect((res) => {\n            const expected = vars\n              .load(CULTURE_PNT_FEATURES)\n              .features.filter(test.filter);\n            res.body.should.have\n              .property(\"numberReturned\")\n              .which.equals(expected.length);\n            //returns the expected features:\n            const actual = res.body.features;\n            for (let i = 0; i < actual.length; i++) {\n              actual[i].should.have.property(\"id\").which.equals(expected[i].id);\n              actual[i].should.have\n                .property(\"type\")\n                .which.equals(expected[i].type);\n              actual[i].should.have\n                .property(\"geometry\")\n                .which.deep.equals(expected[i].geometry);\n              actual[i].should.have\n                .property(\"properties\")\n                .which.deep.equals(expected[i].properties);\n            }\n          })",
              "err": {},
              "uuid": "97f421f9-8f2c-42be-8d65-2368be8482b0",
              "parentUUID": null,
              "isHook": false,
              "skipped": true,
              "options": {}
            },
            {
              "title": "filter='AL030'<=F_CODE",
              "fullTitle": "lteq filter='AL030'<=F_CODE",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Data is selected using filter\n        api\n          .get(\"/daraa/collections/CulturePnt/items\")\n          .query({ limit: LIMIT, ...test.query })\n          // Success and returns GeoJSON\n          .expect(200)\n          .expect(CONTENT_TYPE, GEO_JSON)\n          // returns correct amount of features\n          .expect((res) => {\n            const expected = vars\n              .load(CULTURE_PNT_FEATURES)\n              .features.filter(test.filter);\n            res.body.should.have\n              .property(\"numberReturned\")\n              .which.equals(expected.length);\n            //returns the expected features:\n            const actual = res.body.features;\n            for (let i = 0; i < actual.length; i++) {\n              actual[i].should.have.property(\"id\").which.equals(expected[i].id);\n              actual[i].should.have\n                .property(\"type\")\n                .which.equals(expected[i].type);\n              actual[i].should.have\n                .property(\"geometry\")\n                .which.deep.equals(expected[i].geometry);\n              actual[i].should.have\n                .property(\"properties\")\n                .which.deep.equals(expected[i].properties);\n            }\n          })",
              "err": {},
              "uuid": "db2f73be-e8f4-440f-a58b-f2917b897e19",
              "parentUUID": null,
              "isHook": false,
              "skipped": true,
              "options": {}
            },
            {
              "title": "filter='A'<='A'",
              "fullTitle": "lteq filter='A'<='A'",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Data is selected using filter\n        api\n          .get(\"/daraa/collections/CulturePnt/items\")\n          .query({ limit: LIMIT, ...test.query })\n          // Success and returns GeoJSON\n          .expect(200)\n          .expect(CONTENT_TYPE, GEO_JSON)\n          // returns correct amount of features\n          .expect((res) => {\n            const expected = vars\n              .load(CULTURE_PNT_FEATURES)\n              .features.filter(test.filter);\n            res.body.should.have\n              .property(\"numberReturned\")\n              .which.equals(expected.length);\n            //returns the expected features:\n            const actual = res.body.features;\n            for (let i = 0; i < actual.length; i++) {\n              actual[i].should.have.property(\"id\").which.equals(expected[i].id);\n              actual[i].should.have\n                .property(\"type\")\n                .which.equals(expected[i].type);\n              actual[i].should.have\n                .property(\"geometry\")\n                .which.deep.equals(expected[i].geometry);\n              actual[i].should.have\n                .property(\"properties\")\n                .which.deep.equals(expected[i].properties);\n            }\n          })",
              "err": {},
              "uuid": "1d2283d0-4255-45c4-b85c-5932d67f3fb1",
              "parentUUID": null,
              "isHook": false,
              "skipped": true,
              "options": {}
            },
            {
              "title": "filter=ZI001_SDV<=TIMESTAMP('2011-12-26T20:55:27Z')",
              "fullTitle": "lteq filter=ZI001_SDV<=TIMESTAMP('2011-12-26T20:55:27Z')",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Data is selected using filter\n        api\n          .get(\"/daraa/collections/CulturePnt/items\")\n          .query({ limit: LIMIT, ...test.query })\n          // Success and returns GeoJSON\n          .expect(200)\n          .expect(CONTENT_TYPE, GEO_JSON)\n          // returns correct amount of features\n          .expect((res) => {\n            const expected = vars\n              .load(CULTURE_PNT_FEATURES)\n              .features.filter(test.filter);\n            res.body.should.have\n              .property(\"numberReturned\")\n              .which.equals(expected.length);\n            //returns the expected features:\n            const actual = res.body.features;\n            for (let i = 0; i < actual.length; i++) {\n              actual[i].should.have.property(\"id\").which.equals(expected[i].id);\n              actual[i].should.have\n                .property(\"type\")\n                .which.equals(expected[i].type);\n              actual[i].should.have\n                .property(\"geometry\")\n                .which.deep.equals(expected[i].geometry);\n              actual[i].should.have\n                .property(\"properties\")\n                .which.deep.equals(expected[i].properties);\n            }\n          })",
              "err": {},
              "uuid": "c45cd736-7eb0-4519-989b-018ec955b7d4",
              "parentUUID": null,
              "isHook": false,
              "skipped": true,
              "options": {}
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "4b910356-7c86-443e-aa09-2dea272b9385",
            "1bb22e84-8634-42f0-bbee-7c29979e9d13",
            "a50096b5-c1f3-472b-8c14-ca83b52ff650",
            "97f421f9-8f2c-42be-8d65-2368be8482b0",
            "db2f73be-e8f4-440f-a58b-f2917b897e19",
            "1d2283d0-4255-45c4-b85c-5932d67f3fb1",
            "c45cd736-7eb0-4519-989b-018ec955b7d4"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 60000,
          "options": {
            "title": "lteq",
            "description": "Ensure that all queries involving operator **lteq** work correctly. <br/>      Collections: [Daraa - Cultural Points](https://demo.ldproxy.net/daraa/collections/CulturePnt/items?f=html)"
          }
        },
        {
          "uuid": "5acf34fb-27a3-4ba7-b529-bfde5447b8df",
          "title": "neq",
          "fullFile": "C:\\Users\\p.zahnen\\Documents\\Projekte\\demo-tests\\filter-queries\\spec\\neq.js",
          "file": "\\spec\\neq.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "filter=F_CODE<>F_CODE",
              "fullTitle": "neq filter=F_CODE<>F_CODE",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Data is selected using filter\n        api\n          .get(\"/daraa/collections/CulturePnt/items\")\n          .query({ limit: LIMIT, ...test.query })\n          // Success and returns GeoJSON\n          .expect(200)\n          .expect(CONTENT_TYPE, GEO_JSON)\n          // returns correct amount of features\n          .expect((res) => {\n            const expected = vars\n              .load(CULTURE_PNT_FEATURES)\n              .features.filter(test.filter);\n            res.body.should.have\n              .property(\"numberReturned\")\n              .which.equals(expected.length);\n            //returns the expected features:\n            const actual = res.body.features;\n            for (let i = 0; i < actual.length; i++) {\n              actual[i].should.have.property(\"id\").which.equals(expected[i].id);\n              actual[i].should.have\n                .property(\"type\")\n                .which.equals(expected[i].type);\n              actual[i].should.have\n                .property(\"geometry\")\n                .which.deep.equals(expected[i].geometry);\n              actual[i].should.have\n                .property(\"properties\")\n                .which.deep.equals(expected[i].properties);\n            }\n          })",
              "err": {},
              "uuid": "ab22947e-98de-442c-8ec5-aec3a74ad2ac",
              "parentUUID": null,
              "isHook": false,
              "skipped": true,
              "options": {}
            },
            {
              "title": "filter=F_CODE<>'AL030'",
              "fullTitle": "neq filter=F_CODE<>'AL030'",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Data is selected using filter\n        api\n          .get(\"/daraa/collections/CulturePnt/items\")\n          .query({ limit: LIMIT, ...test.query })\n          // Success and returns GeoJSON\n          .expect(200)\n          .expect(CONTENT_TYPE, GEO_JSON)\n          // returns correct amount of features\n          .expect((res) => {\n            const expected = vars\n              .load(CULTURE_PNT_FEATURES)\n              .features.filter(test.filter);\n            res.body.should.have\n              .property(\"numberReturned\")\n              .which.equals(expected.length);\n            //returns the expected features:\n            const actual = res.body.features;\n            for (let i = 0; i < actual.length; i++) {\n              actual[i].should.have.property(\"id\").which.equals(expected[i].id);\n              actual[i].should.have\n                .property(\"type\")\n                .which.equals(expected[i].type);\n              actual[i].should.have\n                .property(\"geometry\")\n                .which.deep.equals(expected[i].geometry);\n              actual[i].should.have\n                .property(\"properties\")\n                .which.deep.equals(expected[i].properties);\n            }\n          })",
              "err": {},
              "uuid": "4fab51eb-a898-4e3f-9f7c-33cf6161b538",
              "parentUUID": null,
              "isHook": false,
              "skipped": true,
              "options": {}
            },
            {
              "title": "filter=ZI037_REL<>11",
              "fullTitle": "neq filter=ZI037_REL<>11",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Data is selected using filter\n        api\n          .get(\"/daraa/collections/CulturePnt/items\")\n          .query({ limit: LIMIT, ...test.query })\n          // Success and returns GeoJSON\n          .expect(200)\n          .expect(CONTENT_TYPE, GEO_JSON)\n          // returns correct amount of features\n          .expect((res) => {\n            const expected = vars\n              .load(CULTURE_PNT_FEATURES)\n              .features.filter(test.filter);\n            res.body.should.have\n              .property(\"numberReturned\")\n              .which.equals(expected.length);\n            //returns the expected features:\n            const actual = res.body.features;\n            for (let i = 0; i < actual.length; i++) {\n              actual[i].should.have.property(\"id\").which.equals(expected[i].id);\n              actual[i].should.have\n                .property(\"type\")\n                .which.equals(expected[i].type);\n              actual[i].should.have\n                .property(\"geometry\")\n                .which.deep.equals(expected[i].geometry);\n              actual[i].should.have\n                .property(\"properties\")\n                .which.deep.equals(expected[i].properties);\n            }\n          })",
              "err": {},
              "uuid": "1affa4b4-1be3-47c5-a220-4b4241b5ef17",
              "parentUUID": null,
              "isHook": false,
              "skipped": true,
              "options": {}
            },
            {
              "title": "filter=ZI037_REL<>10",
              "fullTitle": "neq filter=ZI037_REL<>10",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Data is selected using filter\n        api\n          .get(\"/daraa/collections/CulturePnt/items\")\n          .query({ limit: LIMIT, ...test.query })\n          // Success and returns GeoJSON\n          .expect(200)\n          .expect(CONTENT_TYPE, GEO_JSON)\n          // returns correct amount of features\n          .expect((res) => {\n            const expected = vars\n              .load(CULTURE_PNT_FEATURES)\n              .features.filter(test.filter);\n            res.body.should.have\n              .property(\"numberReturned\")\n              .which.equals(expected.length);\n            //returns the expected features:\n            const actual = res.body.features;\n            for (let i = 0; i < actual.length; i++) {\n              actual[i].should.have.property(\"id\").which.equals(expected[i].id);\n              actual[i].should.have\n                .property(\"type\")\n                .which.equals(expected[i].type);\n              actual[i].should.have\n                .property(\"geometry\")\n                .which.deep.equals(expected[i].geometry);\n              actual[i].should.have\n                .property(\"properties\")\n                .which.deep.equals(expected[i].properties);\n            }\n          })",
              "err": {},
              "uuid": "eca7149c-754a-47b4-bc73-52fe4c2ca400",
              "parentUUID": null,
              "isHook": false,
              "skipped": true,
              "options": {}
            },
            {
              "title": "filter='AL030'<>F_CODE",
              "fullTitle": "neq filter='AL030'<>F_CODE",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Data is selected using filter\n        api\n          .get(\"/daraa/collections/CulturePnt/items\")\n          .query({ limit: LIMIT, ...test.query })\n          // Success and returns GeoJSON\n          .expect(200)\n          .expect(CONTENT_TYPE, GEO_JSON)\n          // returns correct amount of features\n          .expect((res) => {\n            const expected = vars\n              .load(CULTURE_PNT_FEATURES)\n              .features.filter(test.filter);\n            res.body.should.have\n              .property(\"numberReturned\")\n              .which.equals(expected.length);\n            //returns the expected features:\n            const actual = res.body.features;\n            for (let i = 0; i < actual.length; i++) {\n              actual[i].should.have.property(\"id\").which.equals(expected[i].id);\n              actual[i].should.have\n                .property(\"type\")\n                .which.equals(expected[i].type);\n              actual[i].should.have\n                .property(\"geometry\")\n                .which.deep.equals(expected[i].geometry);\n              actual[i].should.have\n                .property(\"properties\")\n                .which.deep.equals(expected[i].properties);\n            }\n          })",
              "err": {},
              "uuid": "af375fd1-494b-4ea9-ac47-3ccf467a872e",
              "parentUUID": null,
              "isHook": false,
              "skipped": true,
              "options": {}
            },
            {
              "title": "filter='A'<>'A'",
              "fullTitle": "neq filter='A'<>'A'",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Data is selected using filter\n        api\n          .get(\"/daraa/collections/CulturePnt/items\")\n          .query({ limit: LIMIT, ...test.query })\n          // Success and returns GeoJSON\n          .expect(200)\n          .expect(CONTENT_TYPE, GEO_JSON)\n          // returns correct amount of features\n          .expect((res) => {\n            const expected = vars\n              .load(CULTURE_PNT_FEATURES)\n              .features.filter(test.filter);\n            res.body.should.have\n              .property(\"numberReturned\")\n              .which.equals(expected.length);\n            //returns the expected features:\n            const actual = res.body.features;\n            for (let i = 0; i < actual.length; i++) {\n              actual[i].should.have.property(\"id\").which.equals(expected[i].id);\n              actual[i].should.have\n                .property(\"type\")\n                .which.equals(expected[i].type);\n              actual[i].should.have\n                .property(\"geometry\")\n                .which.deep.equals(expected[i].geometry);\n              actual[i].should.have\n                .property(\"properties\")\n                .which.deep.equals(expected[i].properties);\n            }\n          })",
              "err": {},
              "uuid": "3be633af-0c73-42e6-a8e2-73ccee22201a",
              "parentUUID": null,
              "isHook": false,
              "skipped": true,
              "options": {}
            },
            {
              "title": "filter=ZI001_SDV<>TIMESTAMP('2011-12-26T20:55:27Z')",
              "fullTitle": "neq filter=ZI001_SDV<>TIMESTAMP('2011-12-26T20:55:27Z')",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Data is selected using filter\n        api\n          .get(\"/daraa/collections/CulturePnt/items\")\n          .query({ limit: LIMIT, ...test.query })\n          // Success and returns GeoJSON\n          .expect(200)\n          .expect(CONTENT_TYPE, GEO_JSON)\n          // returns correct amount of features\n          .expect((res) => {\n            const expected = vars\n              .load(CULTURE_PNT_FEATURES)\n              .features.filter(test.filter);\n            res.body.should.have\n              .property(\"numberReturned\")\n              .which.equals(expected.length);\n            //returns the expected features:\n            const actual = res.body.features;\n            for (let i = 0; i < actual.length; i++) {\n              actual[i].should.have.property(\"id\").which.equals(expected[i].id);\n              actual[i].should.have\n                .property(\"type\")\n                .which.equals(expected[i].type);\n              actual[i].should.have\n                .property(\"geometry\")\n                .which.deep.equals(expected[i].geometry);\n              actual[i].should.have\n                .property(\"properties\")\n                .which.deep.equals(expected[i].properties);\n            }\n          })",
              "err": {},
              "uuid": "49d02b20-23e9-4726-9cb8-97d966dfdc4e",
              "parentUUID": null,
              "isHook": false,
              "skipped": true,
              "options": {}
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "ab22947e-98de-442c-8ec5-aec3a74ad2ac",
            "4fab51eb-a898-4e3f-9f7c-33cf6161b538",
            "1affa4b4-1be3-47c5-a220-4b4241b5ef17",
            "eca7149c-754a-47b4-bc73-52fe4c2ca400",
            "af375fd1-494b-4ea9-ac47-3ccf467a872e",
            "3be633af-0c73-42e6-a8e2-73ccee22201a",
            "49d02b20-23e9-4726-9cb8-97d966dfdc4e"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 60000,
          "options": {
            "title": "neq",
            "description": "Ensure that all queries involving operator **neq** work correctly. <br/>      Collections: [Daraa - Cultural Points](https://demo.ldproxy.net/daraa/collections/CulturePnt/items?f=html)"
          }
        },
        {
          "uuid": "7e34ec63-b7d0-43b4-b12a-f6866604df14",
          "title": "null",
          "fullFile": "C:\\Users\\p.zahnen\\Documents\\Projekte\\demo-tests\\filter-queries\\spec\\null.js",
          "file": "\\spec\\null.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "filter=ZI037_REL iS NulL",
              "fullTitle": "null filter=ZI037_REL iS NulL",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Data is selected using filter\n        api\n          .get(\"/daraa/collections/CulturePnt/items\")\n          .query({ limit: LIMIT, ...test.query })\n          // Success and returns GeoJSON\n          .expect(200)\n          .expect(CONTENT_TYPE, GEO_JSON)\n          // returns correct amount of features\n          .expect((res) => {\n            const expected = vars\n              .load(CULTURE_PNT_FEATURES)\n              .features.filter(test.filter);\n            res.body.should.have\n              .property(\"numberReturned\")\n              .which.equals(expected.length);\n            //returns the expected features:\n            const actual = res.body.features;\n            for (let i = 0; i < actual.length; i++) {\n              actual[i].should.have.property(\"id\").which.equals(expected[i].id);\n              actual[i].should.have\n                .property(\"type\")\n                .which.equals(expected[i].type);\n              actual[i].should.have\n                .property(\"geometry\")\n                .which.deep.equals(expected[i].geometry);\n              actual[i].should.have\n                .property(\"properties\")\n                .which.deep.equals(expected[i].properties);\n            }\n          })",
              "err": {},
              "uuid": "a8588612-d9f6-4052-86e0-20c9aabff4ea",
              "parentUUID": null,
              "isHook": false,
              "skipped": true,
              "options": {}
            },
            {
              "title": "filter=ZI037_REL iS not NulL",
              "fullTitle": "null filter=ZI037_REL iS not NulL",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Data is selected using filter\n        api\n          .get(\"/daraa/collections/CulturePnt/items\")\n          .query({ limit: LIMIT, ...test.query })\n          // Success and returns GeoJSON\n          .expect(200)\n          .expect(CONTENT_TYPE, GEO_JSON)\n          // returns correct amount of features\n          .expect((res) => {\n            const expected = vars\n              .load(CULTURE_PNT_FEATURES)\n              .features.filter(test.filter);\n            res.body.should.have\n              .property(\"numberReturned\")\n              .which.equals(expected.length);\n            //returns the expected features:\n            const actual = res.body.features;\n            for (let i = 0; i < actual.length; i++) {\n              actual[i].should.have.property(\"id\").which.equals(expected[i].id);\n              actual[i].should.have\n                .property(\"type\")\n                .which.equals(expected[i].type);\n              actual[i].should.have\n                .property(\"geometry\")\n                .which.deep.equals(expected[i].geometry);\n              actual[i].should.have\n                .property(\"properties\")\n                .which.deep.equals(expected[i].properties);\n            }\n          })",
              "err": {},
              "uuid": "4d6529cd-df4a-4f30-9d64-73276a03d66c",
              "parentUUID": null,
              "isHook": false,
              "skipped": true,
              "options": {}
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "a8588612-d9f6-4052-86e0-20c9aabff4ea",
            "4d6529cd-df4a-4f30-9d64-73276a03d66c"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 60000,
          "options": {
            "title": "null",
            "description": "Ensure that all queries involving operator **null** work correctly. <br/>      Collections: [Daraa - Cultural Points](https://demo.ldproxy.net/daraa/collections/CulturePnt/items?f=html)"
          }
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 60000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "index",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "report",
        "reportFilename": "index",
        "inline": true,
        "code": true,
        "charts": true,
        "saveJson": true,
        "saveHtml": true,
        "htmlModule": "@catsjs/report",
        "showSkipped": true,
        "showPending": true,
        "showHooks": "always"
      },
      "version": "6.2.0"
    },
    "cats": {
      "name": "cats",
      "version": "1.0.0-beta.6",
      "link": {
        "type": "git",
        "url": "https://github.com/catsjs/cats.git",
        "directory": "packages/core"
      },
      "options": {}
    }
  },
  "project": {
    "title": "filter-queries",
    "api": "https://demo.ldproxy.net",
    "description": "Validates the correct implementation of filters for the [Daraa API](https://demo.ldproxy.net/daraa) and [CShapes API](https://demo.ldproxy.net/cshapes).",
    "protocol": {
      "plugin": "@catsjs/http",
      "defaults": {
        "accept": "application/geo+json, application/problem+json;q=0.8"
      }
    },
    "contentTypes": [
      "@catsjs/json"
    ],
    "verbose": false,
    "name": "filter-queries",
    "version": "0.9.0",
    "mocha": {
      "ui": "@catsjs/core/interface",
      "reporter": "@catsjs/core/reporter",
      "require": [
        "@catsjs/core/dsl",
        "@catsjs/core/hooks"
      ],
      "spec": "spec",
      "recursive": true,
      "timeout": "60s",
      "slow": "500ms"
    }
  }
}